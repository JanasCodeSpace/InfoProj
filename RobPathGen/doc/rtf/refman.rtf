{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment RobCodeGenerator }RobCodeGenerator}
{\comment Erzeugt von doxygen 1.9.7.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt RobCodeGenerator}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Inhaltsverzeichnis\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Beschreibung Roboter Path Editor\par \pard\plain 
{\tc\tcl1 \v Beschreibung Roboter Path Editor}
{\xe \v Beschreibung Roboter Path Editor}
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Nutzen
\par}
{\tc\tcl2 \v Nutzen}
Mit diesem Programm sollen h\'E4ndisch aufgenommene Pfad Daten einer Roboterbewegung zu einem f\'FCr Kuka Roboter lesbaren File gemacht werden. Zus\'E4tzlich soll einstellbar sein ob die Orientierung berechnet werden soll, oder eingegeben werden soll. Das selbe gilt f\'FCr Geschwindigkeitsdaten.\par}
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Aufbau
\par}
{\tc\tcl2 \v Aufbau}
In der Grundidee werden die eingelesenen Daten immer aus der vorhergegangenen Klasse ausgelesen und nach der Verarbeitung in der aktuellen Klasse gespeichert.\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Logging
\par}
{\tc\tcl3 \v Logging}
Zuerst wird die Loggingklasse {\b CLogging} initialisiert. In ihr wird gespeichert in welchem Schritt das Programm gerade ist. Dieser Klasse wird ein Pfad \'FCbergeben an welchem die Daten gespeichert werden sollen.\par}
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Daten einlesen
\par}
{\tc\tcl3 \v Daten einlesen}
Als n\'E4chstes werden die Nutzerdaten eingelesen und anschliessend die aufgenommenen Daten eingelesen. Dabei wird \'DCberpr\'FCft ob es sich um einen zusammenh\'E4ngenden Pfad handelt. Das passiert in der Klasse {\b CInputParameter}.\par}
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Daten verarbeiten
\par}
{\tc\tcl3 \v Daten verarbeiten}
In mehreren Schritten folgt eine Nachbearbeitung der Daten. Zuerst werden die Daten mit einem gleitendem Mittelwertfilter in der Klasse {\b CMeanFilter} gegl\'E4ttet. Anschliessend werden Punkte mit Hilfe des Douglas-Peuker Algorithmuses in der Klasse {\b CSegmentApproximator} gel\'F6scht. Sollten es mehrere nicht zusammenh\'E4ngende Pfade sein m\'FCssen diese jetzt noch zusammengesetzt werden.\par}
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Roboter Code erstellen
\par}
{\tc\tcl3 \v Roboter Code erstellen}
Als letzter Schritt werden die Nutzereinstellungen in die Daten \'FCbernommen und der Robotercode erstellt. \par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Verzeichnis der Namensbereiche\par \pard\plain 
{\tc \v Verzeichnis der Namensbereiche}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Liste aller Namensbereiche\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Liste aller Namensbereiche mit Kurzbeschreibung:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b QT_WARNING_DISABLE_DEPRECATED} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Ui} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchie-Verzeichnis\par \pard\plain 
{\tc \v Hierarchie-Verzeichnis}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Klassenhierarchie\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Die Liste der Ableitungen ist -mit Einschr\'E4nkungen- alphabetisch sortiert:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CEulerMatrix\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CInputParameter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CLine3D\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CMeanFilter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CPathBuilder\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CPoint3D\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CInputPoint3D\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
COutputPoint3D\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CRobCodeGenerator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSegmentApproximator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QMainWindow
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
GUI\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Ui_GUIClass\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Ui::GUIClass\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Klassen-Verzeichnis\par \pard\plain 
{\tc \v Klassen-Verzeichnis}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Auflistung der Klassen\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Hier folgt die Aufz\'E4hlung aller Klassen, Strukturen, Varianten und Schnittstellen mit einer Kurzbeschreibung:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b CEulerMatrix} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handling und Berechnung Euler Matrix })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CInputParameter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handling Eingabedaten })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CInputPoint3D} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input Punkt })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CLine3D} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnung Geraden })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CLogging} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gleitender Mittelwertfilter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CMeanFilter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gleitender Mittelwertfilter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b COutputPoint3D} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output Punkt })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPathBuilder} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Zusammensetzten des Pfades })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPoint3D} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Grundklasse Punkt })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CRobCodeGenerator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Klasse zum erstellen des Roboter Codes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSegmentApproximator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ausd\'FCnnen des Pfades })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GUI} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Ui::GUIClass} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Ui_GUIClass} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Datei-Verzeichnis\par \pard\plain 
{\tc \v Datei-Verzeichnis}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Auflistung der Dateien\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Hier folgt die Aufz\'E4hlung aller Dateien mit einer Kurzbeschreibung:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b header/{\b EulerMatrix.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header File handling Euler Matrix })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b header/{\b GUI.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b header/{\b InputParameter.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header File Daten Einlesen })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b header/{\b Line3D.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header File Daten Einlesen })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b header/{\b Logging.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logging der Daten })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b header/{\b MeanFilter.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnung des gleitenden Mittelwertfilters })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b header/{\b PathBuilder.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt die einzelnen Segmente zu einem Vector zusammen })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b header/{\b Point3D.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verarbeitung der Punkte })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b header/{\b RobCodeGenerator.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erstellung des Roboter Codes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b header/{\b SegmentApproximator.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnung des Douglas Peuker Algorithmusses })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b EulerMatrix.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b GUI.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b InputParameter.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Daten Einlesen })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b Line3D.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Line3D })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b Logging.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Logging })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b MeanFilter.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File gleitender Mittelwertfilter })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b PathBuilder.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Segmente zu Pfad })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b Point3D.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Punkte })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b RobCodeGenerator.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Roboter Code Erstellung })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b RobPathEditor.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hier wird die main Funktion aufgerufen })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b source/{\b SegmentApproximator.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Douglas-Peuker })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b x64/Debug/moc/{\b moc_GUI.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b x64/Debug/moc/{\b moc_switch.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b x64/Debug/rcc/{\b qrc_GUI.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b x64/Debug/uic/{\b ui_GUI.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b x64/Release/moc/{\b moc_GUI.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b x64/Release/moc/{\b moc_switch.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b x64/Release/rcc/{\b qrc_GUI.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b x64/Release/uic/{\b ui_GUI.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Dokumentation der Namensbereiche\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QT_WARNING_DISABLE_DEPRECATED-Namensbereichsreferenz\par \pard\plain 
{\tc\tcl2 \v QT_WARNING_DISABLE_DEPRECATED}
{\xe \v QT_WARNING_DISABLE_DEPRECATED}
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b qt_meta_stringdata_CLASSGUIENDCLASS_t}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b qt_meta_stringdata_CLASSSwitchENDCLASS_t}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ui-Namensbereichsreferenz\par \pard\plain 
{\tc\tcl2 \v Ui}
{\xe \v Ui}
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GUIClass}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Klassen-Dokumentation{\tc \v Klassen-Dokumentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CEulerMatrix Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v CEulerMatrix}
{\xe \v CEulerMatrix}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handling und Berechnung Euler Matrix. }}\par
{
{\f2 #include <EulerMatrix.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CEulerMatrix} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CEulerMatrix} (float inputMatrix[3][3])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CEulerMatrix} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMatrix} (float inputMatrix[3][3])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt eine Matrix. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CEulerMatrix} {\b getEulerMatrix} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auslesen eine Matrix. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getMatrix} (float Matrix[][3])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auslesen eine Matrix. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CEulerMatrix} {\b angels2mat} (double A, double B, double C)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die neue Umdrehungsmatrix. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tuple< double, double, double > {\b calculateAngels} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Kuka Wunkel A,B,C. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b eulerMatrix} [3][3]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handling und Berechnung Euler Matrix. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Diese Klasse speichert die Euler Matrix und hat Funktionen f\'C3\'BCr Berechnungen mit eben jener. \par
}{
Definiert in Zeile {\b 20} der Datei {\b EulerMatrix.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v CEulerMatrix\:CEulerMatrix}
{\xe \v CEulerMatrix\:CEulerMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CEulerMatrix::CEulerMatrix (void )}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert die Input Daten mit Null \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CEulerMatrix(float inputMatrix[3][3])} \par
}}}{
Definiert in Zeile {\b 4} der Datei {\b EulerMatrix.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00005 \{\par
00006     {\cf19 for} ({\cf18 int} i = 0; i < 3; i++)\par
00007     \{\par
00008         {\cf19 for} ({\cf18 int} m = 0; m < 3; m++)\par
00009         \{\par
00010             eulerMatrix[i][m] = 0;                  {\cf20 // eulerMatrix mit 0 initialisieren}\par
00011         \}\par
00012     \}\par
00013 \}\par
}
{
\ql
Benutzt {\b eulerMatrix}.}\par
}
{\xe \v CEulerMatrix\:CEulerMatrix}
{\xe \v CEulerMatrix\:CEulerMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CEulerMatrix::CEulerMatrix (float  {\i inputMatrix}[3][3])}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert die Input Daten mit Null {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i float} \cell }{inputMatrix[3][3] initialisiert die Klasse mit einer Euler Matrix \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CEulerMatrix(void)} \par
}}}{
Definiert in Zeile {\b 15} der Datei {\b EulerMatrix.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00016 \{\par
00017     {\cf19 for} ({\cf18 int} i = 0; i < 3; i++)\par
00018     \{\par
00019         {\cf19 for} ({\cf18 int} m = 0; m < 3; m++)\par
00020         \{\par
00021             eulerMatrix[i][m] = inputMatrix[i][m];  {\cf20 // eulerMatrix mit Startwerten initialisieren}\par
00022         \}\par
00023     \}\par
00024 \}\par
}
{
\ql
Benutzt {\b eulerMatrix}.}\par
}
{\xe \v ~CEulerMatrix\:CEulerMatrix}
{\xe \v CEulerMatrix\:~CEulerMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CEulerMatrix::~CEulerMatrix ()}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 26} der Datei {\b EulerMatrix.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00027 \{\par
00028 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v angels2mat\:CEulerMatrix}
{\xe \v CEulerMatrix\:angels2mat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CEulerMatrix} CEulerMatrix::angels2mat (double  {\i A}, double  {\i B}, double  {\i C})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die neue Umdrehungsmatrix. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i A} \cell }{double Winkel a \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i B} \cell }{double Winkel b \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i C} \cell }{double Winkel c \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: float inputMatrix[3][3] gibt die neu berechnete Matrix zur\'EF\'BF\'BDck \par
}}}{
Definiert in Zeile {\b 58} der Datei {\b EulerMatrix.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00059 \{\par
00060     {\cf18 float} Matrix[3][3];     {\cf20 // DummyMatrix erstellen}\par
00061 \par
00062     {\cf20 /* Berechnung der Matrix */}\par
00063 \par
00064     Matrix[0][0] = cos(A) * cos(C) - sin(A) * cos(B) * sin(C);\par
00065     Matrix[0][1] = -cos(A) * sin(C) - sin(A) * cos(B) * cos(C);\par
00066     Matrix[0][2] = sin(A) * sin(B);\par
00067 \par
00068     Matrix[1][0] = sin(A) * cos(C) + cos(A) * cos(B) * sin(C);\par
00069     Matrix[1][1] = -sin(A) * sin(C) + cos(A) * cos(B) * cos(C);\par
00070     Matrix[1][2] = -cos(A) * sin(B);\par
00071 \par
00072     Matrix[2][0] = sin(B) * sin(C);\par
00073     Matrix[2][1] = sin(B) * cos(C);\par
00074     Matrix[2][2] = cos(B);\par
00075 \par
00076     CEulerMatrix buffer(Matrix);        {\cf20 // DummyMatrix in DummyEulerMatrix schreiben}\par
00077     {\cf19 return} buffer;                      {\cf20 // Matrix zur\'C3\'BCck geben}\par
00078 \}\par
}
}
{\xe \v calculateAngels\:CEulerMatrix}
{\xe \v CEulerMatrix\:calculateAngels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tuple< double, double, double > CEulerMatrix::calculateAngels (void )}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Kuka Wunkel A,B,C. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: tuple<double , double , double> gibt die berechneten Winkel A, B, C zur\'C3\'BCck \par
}}}{
Definiert in Zeile {\b 81} der Datei {\b EulerMatrix.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00082 \{\par
00083     {\cf18 double} a, b, c, sin_a, cos_a, sin_b, abs_cos_b, sin_c, cos_c;\par
00084 \par
00085     {\cf20 /*}\par
00086 {\cf20     a == Winkel Alpha}\par
00087 {\cf20     b == Winkel Beta}\par
00088 {\cf20     c == Winkel Gamma}\par
00089 {\cf20 }\par
00090 {\cf20     sin_a == sinus alpha}\par
00091 {\cf20     cos_a == cosinus alpha}\par
00092 {\cf20     sin_b == Matrix[2][0] * -1}\par
00093 {\cf20     abs_cos_b == ??}\par
00094 {\cf20     sin_c == sinus gamma}\par
00095 {\cf20     cos_c == cosinus gamma}\par
00096 {\cf20     */}\par
00097 \par
00098 \par
00099     {\cf20 /* Berechnung von alpha*/}\par
00100     a = atan2(eulerMatrix[1][0], eulerMatrix[0][0]);\par
00101 \par
00102     {\cf20 /* Berechung von beta */}\par
00103     sin_a = sin(a);\par
00104     cos_a = cos(a);\par
00105     sin_b = eulerMatrix[2][0] * -1;\par
00106     abs_cos_b = cos(a) * eulerMatrix[0][0] + sin(a) * eulerMatrix[1][0];\par
00107 \par
00108     b = atan2 (sin_b, abs_cos_b);\par
00109 \par
00110     {\cf20 /* Berechung von gamma */}\par
00111     sin_c =  sin_a * eulerMatrix[0][2] - cos_a * eulerMatrix[1][2];\par
00112     cos_c = -sin_a * eulerMatrix[0][1] + cos_a * eulerMatrix[1][1];\par
00113 \par
00114     c = atan2(sin_c, cos_c);\par
00115 \par
00116     {\cf20 /* Bogenmass in Gradmass umrechnen */}\par
00117     a = a * 180 / M_PI;\par
00118     b = b * 180 / M_PI;\par
00119     c = c * 180 / M_PI;\par
00120 \par
00121 \par
00122     {\cf19 return} make_tuple(a, b, c);     {\cf20 // R\'C3\'BCckgabe der Winkel}\par
00123 \}\par
}
{
\ql
Benutzt {\b eulerMatrix}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::calculateAngles()}.}\par
}
{\xe \v getEulerMatrix\:CEulerMatrix}
{\xe \v CEulerMatrix\:getEulerMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CEulerMatrix} CEulerMatrix::getEulerMatrix (void )}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auslesen eine Matrix. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: float inputMatrix[3][3] gibt gespeicherte Matrix zur\'C3\'BCck \par
}}}{
Definiert in Zeile {\b 42} der Datei {\b EulerMatrix.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00043 \{\par
00044     {\cf19 return} eulerMatrix;         {\cf20 // EulerMatrix zur\'C3\'BCck geben}\par
00045 \}\par
}
{
\ql
Benutzt {\b eulerMatrix}.}\par
{
\ql
Wird benutzt von {\b CLogging::logData()} und {\b CInputParameter::openFile()}.}\par
}
{\xe \v getMatrix\:CEulerMatrix}
{\xe \v CEulerMatrix\:getMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CEulerMatrix::getMatrix (float  {\i Matrix}[][3])}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auslesen eine Matrix. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i float*} \cell }{inputMatrix[3][3] Pointer zu einer Matrix \cell }
{\row }
}
}{
Definiert in Zeile {\b 47} der Datei {\b EulerMatrix.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00048 \{\par
00049     {\cf19 for} ({\cf18 int} i = 0; i < 3; i++)\par
00050     \{\par
00051         {\cf19 for} ({\cf18 int} m = 0; m < 3; m++)\par
00052         \{\par
00053             Matrix[i][m] = eulerMatrix[i][m];  {\cf20 // eulerMatrix mit \'C3\'83\'C2\'9Cbergabewerten \'C3\'83\'C2\'BCberschreiben}\par
00054         \}\par
00055     \}\par
00056 \}\par
}
{
\ql
Benutzt {\b eulerMatrix}.}\par
{
\ql
Wird benutzt von {\b CLogging::logData()}, {\b CLogging::logData()} und {\b CLogging::logData()}.}\par
}
{\xe \v setMatrix\:CEulerMatrix}
{\xe \v CEulerMatrix\:setMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CEulerMatrix::setMatrix (float  {\i inputMatrix}[3][3])}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt eine Matrix. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i float} \cell }{inputMatrix[3][3] zum setzten einer Matrix \cell }
{\row }
}
}{
Definiert in Zeile {\b 31} der Datei {\b EulerMatrix.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00032 \{\par
00033     {\cf19 for}({\cf18 int} i = 0; i < 3; i++)\par
00034     \{ \par
00035         {\cf19 for} ({\cf18 int} m = 0; m < 3; m++)\par
00036         \{\par
00037             eulerMatrix[i][m] = inputMatrix[i][m];  {\cf20 // eulerMatrix mit \'C3\'83\'C2\'9Cbergabewerten \'C3\'83\'C2\'BCberschreiben}\par
00038         \}\par
00039     \}\par
00040 \}\par
}
{
\ql
Benutzt {\b eulerMatrix}.}\par
{
\ql
Wird benutzt von {\b CInputParameter::openFile()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v eulerMatrix\:CEulerMatrix}
{\xe \v CEulerMatrix\:eulerMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float CEulerMatrix::eulerMatrix[3][3]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gespeicherte Euler Matrix \par
}{
Definiert in Zeile {\b 76} der Datei {\b EulerMatrix.h}.}\par
{
\ql
Wird benutzt von {\b calculateAngels()}, {\b CEulerMatrix()}, {\b CEulerMatrix()}, {\b getEulerMatrix()}, {\b getMatrix()} und {\b setMatrix()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b EulerMatrix.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b EulerMatrix.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CInputParameter Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v CInputParameter}
{\xe \v CInputParameter}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handling Eingabedaten. }}\par
{
{\f2 #include <InputParameter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CInputParameter} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CInputParameter} (double initSpeed, bool initSeepManual, bool initOrientationManual, double initA, double initB, double initC)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konstruktor mit Werten. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CInputParameter} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOrientation} (bool initOrientationManual, double initA, double initB, double initC)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Orientierungs Daten. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSpeed} (double initSpeed, bool initSpeedManual)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Geschwindigkeits Daten. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOffset} (double X, double Y, double Z, bool {\b offsetManual})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt den gew\'FCnschten Offset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLogging} (bool initLoggingManual)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt ob es ein detailliertes Logging geben soll. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getSpeed} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Geschwindigkeit zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getSpeedManual} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob h\'E4ndische Geschwindigkeit verwendet werden soll. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getOrientationManual} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob h\'E4ndische Orientierung verwendet werden soll. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tuple< double, double, double > {\b getAngles} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Winkel zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getOffsetManual} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob ein Offset eingestellt werden soll. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getLoggingManual} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob ein detailliertes Logging ausgegeben werden soll. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tuple< double, double, double > {\b getOffset} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Offset zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b openFile} (std::string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Liest die Daten aus dem Input File ein. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b detectJump} ({\b CInputPoint3D} p, double x_prev, double y_prev, double z_prev)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erkennt Spr\'FCnge in den Daten. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< list< {\b CInputPoint3D} > > & {\b getPath} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Pfad zur\'FCck. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< list< {\b CInputPoint3D} > > {\b initialPath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b speed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b speedManual}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b orientationManual}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b A}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b B}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b C}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b difference} = 20\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b offsetManual}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b offsetX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b offsetY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b offsetZ}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b loggingManual}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handling Eingabedaten. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In dieser Klasse werden die eingelesenen einstellbaren Daten und das einlesen der Daten aus der Eingabedatei gehandelt. \par
}{
Definiert in Zeile {\b 25} der Datei {\b InputParameter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v CInputParameter\:CInputParameter}
{\xe \v CInputParameter\:CInputParameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CInputParameter::CInputParameter (void )}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert die Input Daten mit Null \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CInputParameter(double initSpeed, bool initSeepManual, bool initOrientationManual, double initA, double initB, double initC)} \par
}}}{
Definiert in Zeile {\b 24} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00025 \{\par
00026     speed = 0.1;\par
00027     A = 0;\par
00028     B = 75;\par
00029     C = 0;\par
00030     speedManual = {\cf17 false},\par
00031     orientationManual = {\cf17 false};\par
00032 \par
00033 \}\par
}
{
\ql
Benutzt {\b A}, {\b B}, {\b C}, {\b orientationManual}, {\b speed} und {\b speedManual}.}\par
}
{\xe \v CInputParameter\:CInputParameter}
{\xe \v CInputParameter\:CInputParameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CInputParameter::CInputParameter (double  {\i initSpeed}, bool  {\i initSeepManual}, bool  {\i initOrientationManual}, double  {\i initA}, double  {\i initB}, double  {\i initC})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konstruktor mit Werten. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert die Input Daten {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{initSpeed \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bool} \cell }{initSeepManual \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bool} \cell }{initOrientationManual \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{initA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{initB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{initC \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CInputParameter()} \par
{\b ~CInputParameter()} \par
{\b CInputParameter(void)}; \par
}}}{
Definiert in Zeile {\b 12} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00013 \{\par
00014     speed = initSpeed;\par
00015     speedManual = initSpeedManual;\par
00016     orientationManual = initOrientationManual;\par
00017     A = initA;\par
00018     B = initB;\par
00019     C = initC;\par
00020 \par
00021 \}\par
}
{
\ql
Benutzt {\b A}, {\b B}, {\b C}, {\b orientationManual}, {\b speed} und {\b speedManual}.}\par
}
{\xe \v ~CInputParameter\:CInputParameter}
{\xe \v CInputParameter\:~CInputParameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CInputParameter::~CInputParameter (void )}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 35} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00036 \{\par
00037 \par
00038 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v detectJump\:CInputParameter}
{\xe \v CInputParameter\:detectJump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CInputParameter::detectJump ({\b CInputPoint3D}  {\i p}, double  {\i x_prev}, double  {\i y_prev}, double  {\i z_prev})}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erkennt Spr\'FCnge in den Daten. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Um zu erkennen ob es mehrere Pfade sind wird nach Spr\'FCngen gesucht, bei einem Sprung wird eine neue Liste angefangen. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b CInputPoint3D}} \cell }{p den aktuellen Punkt \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{x_prev die vorherige x Position \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{y_prev die vorherige y Position \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{z_prev die vorherige z Position \cell }
{\row }
}
}{
Definiert in Zeile {\b 153} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00154 \{\par
00155     {\cf19 if}(abs(p.getX() - x_prev) > difference)             {\cf20 // Abstand zwischen Punkten gr\'F6\'DFer max Differenz??}\par
00156         {\cf19 return} {\cf17 true};\par
00157     {\cf19 else} {\cf19 if}(abs(p.getY() - y_prev) > difference)        {\cf20 // Abstand zwischen Punkten gr\'F6\'DFer max Differenz??}\par
00158         {\cf19 return} {\cf17 true};\par
00159     {\cf19 else} {\cf19 if}(abs(p.getZ() - z_prev) > difference)            {\cf20 // Abstand zwischen Punkten gr\'F6\'DFer max Differenz??}\par
00160         {\cf19 return} {\cf17 true};\par
00161     {\cf19 else}\par
00162         {\cf19 return} {\cf17 false};\par
00163 \}\par
}
{
\ql
Benutzt {\b difference}, {\b CPoint3D::getX()}, {\b CPoint3D::getY()} und {\b CPoint3D::getZ()}.}\par
{
\ql
Wird benutzt von {\b openFile()}.}\par
}
{\xe \v getAngles\:CInputParameter}
{\xe \v CInputParameter\:getAngles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tuple< double, double, double > CInputParameter::getAngles (void )}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Winkel zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt die eingegebenen Winkel als tuple zur\'FCck \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: tuple <double double double> angles \par
}}}{
Definiert in Zeile {\b 99} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00100 \{\par
00101     {\cf19 return} make_tuple(A, B, C);     {\cf20 // Winkel zur\'FCck geben}\par
00102 \}\par
}
{
\ql
Benutzt {\b A}, {\b B} und {\b C}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::postProcessing()}.}\par
}
{\xe \v getLoggingManual\:CInputParameter}
{\xe \v CInputParameter\:getLoggingManual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CInputParameter::getLoggingManual (void )}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob ein detailliertes Logging ausgegeben werden soll. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob ein detailliertes Logging ausgegeben werden soll \par
}{
Definiert in Zeile {\b 94} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00095 \{\par
00096     {\cf19 return} loggingManual;       {\cf20 // Vorgew\'E4hlte Einstellung f\'FCr das Logging zur\'FCck}\par
00097 \}\par
}
{
\ql
Benutzt {\b loggingManual}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\xe \v getOffset\:CInputParameter}
{\xe \v CInputParameter\:getOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tuple< double, double, double > CInputParameter::getOffset (void )}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Offset zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt den Offset als tuple zur\'FCck \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: tuple <double double double> offset \par
}}}{
Definiert in Zeile {\b 104} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00105 \{\par
00106     {\cf19 return} make_tuple(offsetX, offsetY, offsetZ);       {\cf20 // Offset zur\'FCck geben}\par
00107 \}\par
}
{
\ql
Benutzt {\b offsetX}, {\b offsetY} und {\b offsetZ}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::generateRobCode()}.}\par
}
{\xe \v getOffsetManual\:CInputParameter}
{\xe \v CInputParameter\:getOffsetManual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CInputParameter::getOffsetManual (void )}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob ein Offset eingestellt werden soll. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob ein Offset eingestellt werden soll \par
}{
Definiert in Zeile {\b 89} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00090 \{\par
00091     {\cf19 return} offsetManual;        {\cf20 // Vorgew\'E4hlte Einstellung f\'FCr den Offset zur\'FCck}\par
00092 \}\par
}
{
\ql
Benutzt {\b offsetManual}.}\par
}
{\xe \v getOrientationManual\:CInputParameter}
{\xe \v CInputParameter\:getOrientationManual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CInputParameter::getOrientationManual (void )}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob h\'E4ndische Orientierung verwendet werden soll. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob h\'E4ndische Orientierung verwendet werden soll, sonst wird sie sp\'E4ter berechnet. \par
}{
Definiert in Zeile {\b 84} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00085 \{\par
00086     {\cf19 return} orientationManual;       {\cf20 // Vorgew\'E4hlte Einstellung f\'FCr Orientierung zur\'FCck geben}\par
00087 \}\par
}
{
\ql
Benutzt {\b orientationManual}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::postProcessing()}.}\par
}
{\xe \v getPath\:CInputParameter}
{\xe \v CInputParameter\:getPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< list< {\b CInputPoint3D} > > & CInputParameter::getPath ()}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Pfad zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: vector<list<CInputPoint3D>> den eingelesen Pfad \par
}}}{
Definiert in Zeile {\b 69} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00070 \{\par
00071     {\cf19 return} initialPath;     {\cf20 // Path zur\'FCck geben}\par
00072 \}\par
}
{
\ql
Benutzt {\b initialPath}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\xe \v getSpeed\:CInputParameter}
{\xe \v CInputParameter\:getSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputParameter::getSpeed (void )}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Geschwindigkeit zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt die eingegebene Geschwindigkeit zur\'FCck \par
}{
Definiert in Zeile {\b 74} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00075 \{\par
00076     {\cf19 return} speed;           {\cf20 // Geschwindigkeit zur\'FCck geben}\par
00077 \}\par
}
{
\ql
Benutzt {\b speed}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::generateRobCode()} und {\b CRobCodeGenerator::postProcessing()}.}\par
}
{\xe \v getSpeedManual\:CInputParameter}
{\xe \v CInputParameter\:getSpeedManual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CInputParameter::getSpeedManual (void )}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob h\'E4ndische Geschwindigkeit verwendet werden soll. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt zur\'FCck ob h\'E4ndische Geschwindigekit verwendet werden soll, sonst wird sie sp\'E4ter berechnet. \par
}{
Definiert in Zeile {\b 79} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00080 \{\par
00081     {\cf19 return} speedManual;             {\cf20 // Vorgew\'E4hlte Einstellung f\'FCr Geschwindigkeit zur\'FCck geben}\par
00082 \}\par
}
{
\ql
Benutzt {\b speedManual}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::generateRobCode()} und {\b CRobCodeGenerator::postProcessing()}.}\par
}
{\xe \v openFile\:CInputParameter}
{\xe \v CInputParameter\:openFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CInputParameter::openFile (std::string  {\i path})}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Liest die Daten aus dem Input File ein. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Liest die Daten aus einen beliebigen File ein und ruft @detectJump auf um zu erkennen ob es mehrere Aufnahmen sind. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i File} \cell }{Pfad \cell }
{\row }
}
}{
Definiert in Zeile {\b 111} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00112 \{\par
00113     ifstream fin(path);\par
00114     CInputPoint3D tmpPoint;     {\cf20 // Zwischenspeicher zum konvertieren von tmpEuler in Point3D}\par
00115     CEulerMatrix tmpEuler;      {\cf20 // Zwischenspeicher zum konverteiren von DummyMatrix in EulerMatrix}\par
00116     {\cf18 double} x, y, z;             {\cf20 // Punktkoordinaten}\par
00117     {\cf18 double} x_prev = 0, y_prev = 0, z_prev = 0;      {\cf20 // Zwischenspeicher f\'FCr Punktkoordinaten}\par
00118     {\cf18 double} timestamp;           {\cf20 // Zeitstempel}\par
00119     {\cf18 int} segmentCount = -1;      {\cf20 // Segmentz\'E4hler}\par
00120     {\cf18 float} dummyMatrix[3][3];    {\cf20 // DummyMatrix zum speichern}\par
00121 \par
00122 \par
00123     {\cf19 if} (!fin.is_open())\par
00124     \{\par
00125         cerr << {\cf22 "Datei konnte nicht ge\'F6ffnet werden"} << endl;       {\cf20 // Fehler Datei konnte nicht ge\'F6ffnet werden.}\par
00126     \}\par
00127     {\cf18 string} line;\par
00128 \par
00129     {\cf19 while}(getline(fin, line))\par
00130     \{\par
00131         std::istringstream sStream (line);\par
00132         sStream >> timestamp >> x >> y >> z >> dummyMatrix[0][0] >> dummyMatrix[0][1] >> dummyMatrix[0][2]                                      {\cf20 // Zeile in die einzelnen Parameter zerlegen }\par
00133             >> dummyMatrix[1][0] >> dummyMatrix[1][1] >> dummyMatrix[1][2] >> dummyMatrix[2][0] >> dummyMatrix[2][1] >> dummyMatrix[2][2];      {\cf20 // und in DummyMatrix bzw. Variablen abspeichern}\par
00134 \par
00135         tmpEuler.setMatrix(dummyMatrix);                                    {\cf20 // DummyMatrix[3][3] in EulerMatrix speichern                           }\par
00136         tmpPoint.setPoint(timestamp, x, y, z, tmpEuler.getEulerMatrix());   {\cf20 // Variablen und EulerWinkel in CPoint3D speichern}\par
00137 \par
00138         {\cf19 if} (detectJump(tmpPoint, x_prev, y_prev, z_prev)) {\cf20 // if there is a jump in the data, start da new segment }\par
00139         \{\par
00140             segmentCount++;                                 {\cf20 // neues Segement anlegen}\par
00141             initialPath.push_back(list<CInputPoint3D>());   {\cf20 // Punkt in Segent speichern}\par
00142         \}\par
00143 \par
00144         initialPath[segmentCount].push_back(tmpPoint);      {\cf20 // Punkt in bestehendes Segment abspeichern}\par
00145 \par
00146         x_prev = x;     {\cf20 // X-Wert zwischenspeichern}\par
00147         y_prev = y;     {\cf20 // Y-Wert zwischenspeichern}\par
00148         z_prev = z;     {\cf20 // Z-Wert zwischenspeichern}\par
00149     \}\par
00150     fin.close();        {\cf20 // Datei schlie\'DFen}\par
00151 \}\par
}
{
\ql
Benutzt {\b detectJump()}, {\b CEulerMatrix::getEulerMatrix()}, {\b initialPath}, {\b CEulerMatrix::setMatrix()} und {\b CInputPoint3D::setPoint()}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\xe \v setLogging\:CInputParameter}
{\xe \v CInputParameter\:setLogging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CInputParameter::setLogging (bool  {\i initLoggingManual})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt ob es ein detailliertes Logging geben soll. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt ob es ein detailliertes Logging geben soll {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bool} \cell }{initLoggingManual \cell }
{\row }
}
}{
Definiert in Zeile {\b 57} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00058 \{\par
00059     loggingManual = initLoggingManual;\par
00060 \}\par
}
{
\ql
Benutzt {\b loggingManual}.}\par
{
\ql
Wird benutzt von {\b GUI::activateLogging()}.}\par
}
{\xe \v setOffset\:CInputParameter}
{\xe \v CInputParameter\:setOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CInputParameter::setOffset (double  {\i X}, double  {\i Y}, double  {\i Z}, bool  {\i offsetManual})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt den gew\'FCnschten Offset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt den gew\'FCnschten Offset {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{X \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Y \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Z \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bool} \cell }{offsetManual \cell }
{\row }
}
}{
Definiert in Zeile {\b 49} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00050 \{\par
00051     offsetManual = initOffsetManual;\par
00052     offsetX = X;\par
00053     offsetY = Y;\par
00054     offsetZ = Z;\par
00055 \}\par
}
{
\ql
Benutzt {\b offsetManual}, {\b offsetX}, {\b offsetY} und {\b offsetZ}.}\par
{
\ql
Wird benutzt von {\b GUI::activateOffset()}, {\b GUI::GUI()} und {\b GUI::setOffset()}.}\par
}
{\xe \v setOrientation\:CInputParameter}
{\xe \v CInputParameter\:setOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CInputParameter::setOrientation (bool  {\i initOrientationManual}, double  {\i initA}, double  {\i initB}, double  {\i initC})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Orientierungs Daten. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt ob die Orientierung H\'E4ndisch eingegeben werden soll und die drei Winkel {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bool} \cell }{initOrientationManual \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{initA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{initB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{initC \cell }
{\row }
}
}{
Definiert in Zeile {\b 41} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00042 \{\par
00043     orientationManual = initOrientationManual;\par
00044     A = initA;\par
00045     B = initB;\par
00046     C = initC;\par
00047 \}\par
}
{
\ql
Benutzt {\b A}, {\b B}, {\b C} und {\b orientationManual}.}\par
{
\ql
Wird benutzt von {\b GUI::setOrientation()}.}\par
}
{\xe \v setSpeed\:CInputParameter}
{\xe \v CInputParameter\:setSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CInputParameter::setSpeed (double  {\i initSpeed}, bool  {\i initSpeedManual})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Geschwindigkeits Daten. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt ob die Geschwindigkeit H\'E4ndisch eingegeben werden soll und die Geschwindigkeit in m/s {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{initSpeed \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bool} \cell }{initSeepManual \cell }
{\row }
}
}{
Definiert in Zeile {\b 63} der Datei {\b InputParameter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00064 \{\par
00065     speed = initSpeed;\par
00066     speedManual = initSpeedManual;\par
00067 \}\par
}
{
\ql
Benutzt {\b speed} und {\b speedManual}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::postProcessing()} und {\b GUI::setSpeed()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v A\:CInputParameter}
{\xe \v CInputParameter\:A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputParameter::A{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User eingegebener Winkel A \par
}{
Definiert in Zeile {\b 163} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b CInputParameter()}, {\b CInputParameter()}, {\b getAngles()} und {\b setOrientation()}.}\par
}
{\xe \v B\:CInputParameter}
{\xe \v CInputParameter\:B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputParameter::B{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User eingegebener Winkel B \par
}{
Definiert in Zeile {\b 167} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b CInputParameter()}, {\b CInputParameter()}, {\b getAngles()} und {\b setOrientation()}.}\par
}
{\xe \v C\:CInputParameter}
{\xe \v CInputParameter\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputParameter::C{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User eingegebener Winkel C \par
}{
Definiert in Zeile {\b 171} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b CInputParameter()}, {\b CInputParameter()}, {\b getAngles()} und {\b setOrientation()}.}\par
}
{\xe \v difference\:CInputParameter}
{\xe \v CInputParameter\:difference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputParameter::difference = 20{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sprung ab dem eine neue Liste angefangen wird \par
}{
Definiert in Zeile {\b 175} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b detectJump()}.}\par
}
{\xe \v initialPath\:CInputParameter}
{\xe \v CInputParameter\:initialPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<list<{\b CInputPoint3D}> > CInputParameter::initialPath{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vector mit Listen an Input Daten \par
}{
Definiert in Zeile {\b 147} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b getPath()} und {\b openFile()}.}\par
}
{\xe \v loggingManual\:CInputParameter}
{\xe \v CInputParameter\:loggingManual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CInputParameter::loggingManual{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auswahl ob ein Offset eingegeben werden soll \par
}{
Definiert in Zeile {\b 195} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b getLoggingManual()} und {\b setLogging()}.}\par
}
{\xe \v offsetManual\:CInputParameter}
{\xe \v CInputParameter\:offsetManual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CInputParameter::offsetManual{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auswahl ob ein Offset eingegeben werden soll \par
}{
Definiert in Zeile {\b 179} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b getOffsetManual()} und {\b setOffset()}.}\par
}
{\xe \v offsetX\:CInputParameter}
{\xe \v CInputParameter\:offsetX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputParameter::offsetX{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset X \par
}{
Definiert in Zeile {\b 183} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b getOffset()} und {\b setOffset()}.}\par
}
{\xe \v offsetY\:CInputParameter}
{\xe \v CInputParameter\:offsetY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputParameter::offsetY{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset Y \par
}{
Definiert in Zeile {\b 187} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b getOffset()} und {\b setOffset()}.}\par
}
{\xe \v offsetZ\:CInputParameter}
{\xe \v CInputParameter\:offsetZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputParameter::offsetZ{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset Z \par
}{
Definiert in Zeile {\b 191} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b getOffset()} und {\b setOffset()}.}\par
}
{\xe \v orientationManual\:CInputParameter}
{\xe \v CInputParameter\:orientationManual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CInputParameter::orientationManual{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auswahl ob berechnete oder eingegebene Winkel verwendet werden soll \par
}{
Definiert in Zeile {\b 159} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b CInputParameter()}, {\b CInputParameter()}, {\b getOrientationManual()} und {\b setOrientation()}.}\par
}
{\xe \v speed\:CInputParameter}
{\xe \v CInputParameter\:speed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputParameter::speed{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User eingegebene Geschwindigkeit \par
}{
Definiert in Zeile {\b 151} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b CInputParameter()}, {\b CInputParameter()}, {\b getSpeed()} und {\b setSpeed()}.}\par
}
{\xe \v speedManual\:CInputParameter}
{\xe \v CInputParameter\:speedManual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CInputParameter::speedManual{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Auswahl ob berechnete oder eingegebene Geschwindigkeit verwendet werden soll \par
}{
Definiert in Zeile {\b 155} der Datei {\b InputParameter.h}.}\par
{
\ql
Wird benutzt von {\b CInputParameter()}, {\b CInputParameter()}, {\b getSpeedManual()} und {\b setSpeed()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b InputParameter.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b InputParameter.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CInputPoint3D Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v CInputPoint3D}
{\xe \v CInputPoint3D}
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input Punkt. }}\par
{
{\f2 #include <Point3D.h>}}\par
Klassendiagramm f\'FCr CInputPoint3D:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_input_point3_d.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CInputPoint3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CInputPoint3D} (double X, double Y, double Z, double Timestamp, {\b CEulerMatrix} Matrix)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CInputPoint3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTime} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt den Zeitstempel zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CEulerMatrix} {\b getEulerMatrix} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt die gespeicherte Eulermatrix zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTime} (double time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt den Zeitstempel. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEulerMatrix} ({\b CEulerMatrix} orientation)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt die Eulermatrix. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPoint} (double time, double X, double Y, double Z, {\b CEulerMatrix} orientation)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt einen Input Punkt. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D6ffentliche Methoden geerbt von {\b CPoint3D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoint3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoint3D} (double X, double Y, double Z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CPoint3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getX} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt X zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getY} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Y zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getZ} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Z zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setX} (double X)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt X. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY} (double Y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setZ} (double Z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set} (double X, double Y, double Z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt X, Y und Z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceTo} ({\b CPoint3D} point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Distanz zu einem anderen Punkt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceTo} ({\b CLine3D} line)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Distanz zu einer Linie. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestamp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CEulerMatrix} {\b orientationMatrix}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Weitere Geerbte Elemente\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Gesch\'FCtzte Attribute geerbt von {\b CPoint3D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input Punkt. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kind der Punkt Grundklasse, erweitert um den Timestamp und die Eulermatrix \par
}{
Definiert in Zeile {\b 106} der Datei {\b Point3D.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v CInputPoint3D\:CInputPoint3D}
{\xe \v CInputPoint3D\:CInputPoint3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CInputPoint3D::CInputPoint3D (void )}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert des eingelesenen Punktes mit Null \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CInputPoint3D(double X, double Y, double Z, double Timestamp, CEulerMatrix Matrix)} \par
}}}{
Definiert in Zeile {\b 110} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00110                                  : CPoint3D()\par
00111 \{\par
00112     timestamp = 0;      {\cf20 // Zeitstempel mit 0 initialisieren}\par
00113 \}\par
}
{
\ql
Benutzt {\b timestamp}.}\par
}
{\xe \v CInputPoint3D\:CInputPoint3D}
{\xe \v CInputPoint3D\:CInputPoint3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CInputPoint3D::CInputPoint3D (double  {\i X}, double  {\i Y}, double  {\i Z}, double  {\i Timestamp}, {\b CEulerMatrix}  {\i Matrix})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert des eingelesenen Punktes mit Null {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{X \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Y \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Z \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Timestamp \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b CEulerMatrix}} \cell }{Matrix \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CInputPoint3D(double X, double Y, double Z, double Timestamp, CEulerMatrix Matrix)} \par
}}}{
Definiert in Zeile {\b 116} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00117 \{\par
00118     x = X;\par
00119     y = Y;\par
00120     z = Z;\par
00121     timestamp = Timestamp;\par
00122     orientationMatrix = Matrix;\par
00123 \}\par
}
{
\ql
Benutzt {\b orientationMatrix}, {\b timestamp}, {\b CPoint3D::x}, {\b CPoint3D::y} und {\b CPoint3D::z}.}\par
}
{\xe \v ~CInputPoint3D\:CInputPoint3D}
{\xe \v CInputPoint3D\:~CInputPoint3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CInputPoint3D::~CInputPoint3D (void )}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 125} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00126 \{\par
00127 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v getEulerMatrix\:CInputPoint3D}
{\xe \v CInputPoint3D\:getEulerMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CEulerMatrix} CInputPoint3D::getEulerMatrix ()}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt die gespeicherte Eulermatrix zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CEulerMatrix} \par
}}}{
Definiert in Zeile {\b 147} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00148 \{\par
00149     {\cf19 return} orientationMatrix;   {\cf20 // R\'FCckgabe der EulerMatrix}\par
00150 \}\par
}
{
\ql
Benutzt {\b orientationMatrix}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::calculateAngles()}.}\par
}
{\xe \v getTime\:CInputPoint3D}
{\xe \v CInputPoint3D\:getTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputPoint3D::getTime ()}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt den Zeitstempel zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
double Zeitstempel \par
}}}{
Definiert in Zeile {\b 152} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00153 \{\par
00154     {\cf19 return} timestamp;       {\cf20 // R\'FCckgabe des Zeitstempel}\par
00155 \}\par
}
{
\ql
Benutzt {\b timestamp}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::calculateSpeed()}.}\par
}
{\xe \v setEulerMatrix\:CInputPoint3D}
{\xe \v CInputPoint3D\:setEulerMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CInputPoint3D::setEulerMatrix ({\b CEulerMatrix}  {\i orientation})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt die Eulermatrix. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b CEulerMatrix}} \cell }{orientation \cell }
{\row }
}
}{
Definiert in Zeile {\b 129} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00130 \{\par
00131     orientationMatrix = orientation;    {\cf20 // EulerMatrix setzen}\par
00132 \}\par
}
{
\ql
Benutzt {\b orientationMatrix}.}\par
{
\ql
Wird benutzt von {\b CMeanFilter::calculateMean()}, {\b CPathBuilder::createPath()}, {\b CSegmentApproximator::douglasPeuckerRecursive()} und {\b setPoint()}.}\par
}
{\xe \v setPoint\:CInputPoint3D}
{\xe \v CInputPoint3D\:setPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CInputPoint3D::setPoint (double  {\i time}, double  {\i X}, double  {\i Y}, double  {\i Z}, {\b CEulerMatrix}  {\i orientation})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt einen Input Punkt. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{time \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{X \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Y \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Z \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b CEulerMatrix}} \cell }{orientation \cell }
{\row }
}
}{
Definiert in Zeile {\b 135} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00136 \{\par
00137     setTime(time);  {\cf20 // Zeitstempel setzen}\par
00138     set(X, Y, Z);   {\cf20 // setze Punkt-Koordinaten}\par
00139     setEulerMatrix(orientation); {\cf20 // EulerMatrix setzen}\par
00140 \}\par
}
{
\ql
Benutzt {\b CPoint3D::set()}, {\b setEulerMatrix()} und {\b setTime()}.}\par
{
\ql
Wird benutzt von {\b CInputParameter::openFile()}.}\par
}
{\xe \v setTime\:CInputPoint3D}
{\xe \v CInputPoint3D\:setTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CInputPoint3D::setTime (double  {\i time})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt den Zeitstempel. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{time \cell }
{\row }
}
}{
Definiert in Zeile {\b 142} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00143 \{\par
00144     timestamp = time;   {\cf20 // Zeitstempel setzen}\par
00145 \}\par
}
{
\ql
Benutzt {\b timestamp}.}\par
{
\ql
Wird benutzt von {\b CMeanFilter::calculateMean()}, {\b CPathBuilder::createPath()}, {\b CSegmentApproximator::douglasPeuckerRecursive()} und {\b setPoint()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v orientationMatrix\:CInputPoint3D}
{\xe \v CInputPoint3D\:orientationMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CEulerMatrix} CInputPoint3D::orientationMatrix{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Eulermatrix des Punktes \par
}{
Definiert in Zeile {\b 170} der Datei {\b Point3D.h}.}\par
{
\ql
Wird benutzt von {\b CInputPoint3D()}, {\b getEulerMatrix()} und {\b setEulerMatrix()}.}\par
}
{\xe \v timestamp\:CInputPoint3D}
{\xe \v CInputPoint3D\:timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CInputPoint3D::timestamp{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Zeitstempel \par
}{
Definiert in Zeile {\b 166} der Datei {\b Point3D.h}.}\par
{
\ql
Wird benutzt von {\b CInputPoint3D()}, {\b CInputPoint3D()}, {\b getTime()} und {\b setTime()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b Point3D.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b Point3D.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CLine3D Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v CLine3D}
{\xe \v CLine3D}
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnung Geraden. }}\par
{
{\f2 #include <Line3D.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CLine3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CLine3D} ({\b CPoint3D} P1, {\b CPoint3D} P2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konstruktor mit zwei Punkten. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CLine3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoint3D} {\b p1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoint3D} {\b p2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnung Geraden. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In dieser Klasse werden alle Berechnungen die zwischen zwei Punken passieren gehandhabt. \par
}{
Definiert in Zeile {\b 18} der Datei {\b Line3D.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v CLine3D\:CLine3D}
{\xe \v CLine3D\:CLine3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CLine3D::CLine3D (void )}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert die Klasse \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CLine3D(CPoint3D P1, CPoint3D P2)} \par
}}}{
Definiert in Zeile {\b 10} der Datei {\b Line3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00011 \{\par
00012 \}\par
}
}
{\xe \v CLine3D\:CLine3D}
{\xe \v CLine3D\:CLine3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CLine3D::CLine3D ({\b CPoint3D}  {\i P1}, {\b CPoint3D}  {\i P2})}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konstruktor mit zwei Punkten. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert die Klasse \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CLine3D(void)}; \par
}}}{
Definiert in Zeile {\b 15} der Datei {\b Line3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00016 \{\par
00017     p1 = P1;\par
00018     p2 = P2;\par
00019 \}\par
}
{
\ql
Benutzt {\b p1} und {\b p2}.}\par
}
{\xe \v ~CLine3D\:CLine3D}
{\xe \v CLine3D\:~CLine3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CLine3D::~CLine3D (void )}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 21} der Datei {\b Line3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00022 \{\par
00023 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v p1\:CLine3D}
{\xe \v CLine3D\:p1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CPoint3D} CLine3D::p1}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Punkt 1 \par
}{
Definiert in Zeile {\b 41} der Datei {\b Line3D.h}.}\par
{
\ql
Wird benutzt von {\b CLine3D()} und {\b CPoint3D::distanceTo()}.}\par
}
{\xe \v p2\:CLine3D}
{\xe \v CLine3D\:p2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CPoint3D} CLine3D::p2}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Punkt 2 \par
}{
Definiert in Zeile {\b 45} der Datei {\b Line3D.h}.}\par
{
\ql
Wird benutzt von {\b CLine3D()} und {\b CPoint3D::distanceTo()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b Line3D.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b Line3D.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CLogging Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v CLogging}
{\xe \v CLogging}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gleitender Mittelwertfilter. }}\par
{
{\f2 #include <Logging.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CLogging} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CLogging} (string {\b path}, bool {\b detailed})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CLogging} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStep} (int Step)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt in welchem Schritt wir uns befinden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getDetailed} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt es ein detailliertes Logging. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b logData} (vector< list< {\b CInputPoint3D} > > &sourcePath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft calculateMean f\'FCr die einzelnen Segmente auf. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b logData} (vector< {\b CInputPoint3D} > &sourcePath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft calculateMean f\'FCr die einzelnen Segmente auf. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b logData} (vector< {\b COutputPoint3D} > &sourcePath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft calculateMean f\'FCr die einzelnen Segmente auf. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b step}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b path}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b detailed}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gleitender Mittelwertfilter. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In dieser Klasse werden die eingelesenen Daten mit einem gleitenden Mittelwertfilter mit einstellbarem Fenster gegl\'E4ttet. \par
}{
Definiert in Zeile {\b 22} der Datei {\b Logging.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v CLogging\:CLogging}
{\xe \v CLogging\:CLogging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CLogging::CLogging (void )}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert Logging Klasse \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CMeanFilter(int Window)}; \par
}}}{
Definiert in Zeile {\b 10} der Datei {\b Logging.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00011 \{\par
00012     step = 0;\par
00013 \}\par
}
{
\ql
Benutzt {\b step}.}\par
}
{\xe \v CLogging\:CLogging}
{\xe \v CLogging\:CLogging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CLogging::CLogging (string  {\i path}, bool  {\i detailed})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert Logging Klasse \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CMeanFilter(int Window)}; \par
}}}{
Definiert in Zeile {\b 16} der Datei {\b Logging.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00017 \{\par
00018     path = Path;\par
00019     detailed = Detailed;\par
00020 \}\par
}
{
\ql
Benutzt {\b detailed} und {\b path}.}\par
}
{\xe \v ~CLogging\:CLogging}
{\xe \v CLogging\:~CLogging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CLogging::~CLogging (void )}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 22} der Datei {\b Logging.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00023 \{\par
00024 \par
00025 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v getDetailed\:CLogging}
{\xe \v CLogging\:getDetailed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CLogging::getDetailed (void )}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt es ein detailliertes Logging. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
bool detailed \par
}}}{
Definiert in Zeile {\b 27} der Datei {\b Logging.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00028 \{\par
00029     {\cf19 return} detailed;\par
00030 \}\par
}
{
\ql
Benutzt {\b detailed}.}\par
{
\ql
Wird benutzt von {\b CSegmentApproximator::approx()}, {\b CPathBuilder::createPath()} und {\b CMeanFilter::mean()}.}\par
}
{\xe \v logData\:CLogging}
{\xe \v CLogging\:logData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CLogging::logData (vector< {\b CInputPoint3D} > &  {\i sourcePath})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft calculateMean f\'FCr die einzelnen Segmente auf. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loggingdaten werden weggespeichert {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vector<CInputPoint3D>&} \cell }{sourcePath \cell }
{\row }
}
}{
Definiert in Zeile {\b 73} der Datei {\b Logging.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00074 \{\par
00075     {\cf18 string} filepath;            {\cf20 // file Pfad}\par
00076     {\cf18 float} dummyMatrix[3][3];    {\cf20 // dummyMatrix zum Zwischenspeichern}\par
00077     CEulerMatrix tmpEuler;      {\cf20 // CEulerMatrix zum Zwischenspeichern}\par
00078 \par
00079     filepath = path + {\cf22 "/"} + {\cf22 "0"} + std::to_string(step) + {\cf22 "_path.csv"};\par
00080 \par
00081     FILE* fid = fopen(filepath.c_str(), {\cf22 "w"});   {\cf20 // file \'F6ffnen}\par
00082 \par
00083     {\cf19 if} (fid == NULL)\par
00084     \{\par
00085         cerr << {\cf22 "ERROR - Can NOT write to output file!\\n"};  {\cf20 // Fehler beim file \'F6ffnen}\par
00086         {\cf19 return};\par
00087     \}\par
00088 \par
00089     {\cf20 /* Ausgeben der Punkte mit dummyMatrix */}\par
00090     {\cf19 for} ({\cf18 size_t} s = 0; s < sourcePath.size(); s++) {\cf20 //for all points in the vector}\par
00091     \{\par
00092         tmpEuler.getMatrix(dummyMatrix);\par
00093 \par
00094         fprintf(fid, {\cf22 "%f %f %f %f %f %f %f %f %f %f %f %f %f\\n"}, ({\cf18 double})sourcePath[s].getTime(), \par
00095             ({\cf18 double})sourcePath[s].getX(), ({\cf18 double})sourcePath[s].getY(), ({\cf18 double})sourcePath[s].getZ(),\par
00096             dummyMatrix[0][0], dummyMatrix[0][1], dummyMatrix[0][2],\par
00097             dummyMatrix[1][0], dummyMatrix[1][1], dummyMatrix[1][2],\par
00098             dummyMatrix[2][0], dummyMatrix[2][1], dummyMatrix[2][2]);\par
00099     \}\par
00100 \}\par
}
{
\ql
Benutzt {\b CEulerMatrix::getMatrix()}, {\b path} und {\b step}.}\par
}
{\xe \v logData\:CLogging}
{\xe \v CLogging\:logData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CLogging::logData (vector< {\b COutputPoint3D} > &  {\i sourcePath})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft calculateMean f\'FCr die einzelnen Segmente auf. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loggingdaten werden weggespeichert {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vector<COutputPoint3D>&} \cell }{sourcePath \cell }
{\row }
}
}{
Definiert in Zeile {\b 102} der Datei {\b Logging.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00103 \{\par
00104     {\cf18 string} filepath;            {\cf20 // file Pfad}\par
00105     {\cf18 float} dummyMatrix[3][3];    {\cf20 // dummyMatrix zum Zwischenspeichern}\par
00106     CEulerMatrix tmpEuler;      {\cf20 // CEulerMatrix zum Zwischenspeichern}\par
00107 \par
00108     filepath = path + {\cf22 "/"} + {\cf22 "0"} + std::to_string(step) + {\cf22 "_path.csv"};\par
00109 \par
00110     FILE* fid = fopen(filepath.c_str(), {\cf22 "w"});   {\cf20 // file \'F6ffnen}\par
00111 \par
00112     {\cf19 if} (fid == NULL)\par
00113     \{\par
00114         cerr << {\cf22 "ERROR - Can NOT write to output file!\\n"};  {\cf20 // Fehler beim file \'F6ffnen}\par
00115         {\cf19 return};\par
00116     \}\par
00117 \par
00118     {\cf20 /* Ausgeben der Punkte mit dummyMatrix */}\par
00119     {\cf19 for} ({\cf18 size_t} s = 0; s < sourcePath.size(); s++) {\cf20 //for all points in the vector}\par
00120     \{\par
00121         tmpEuler.getMatrix(dummyMatrix);\par
00122 \par
00123         fprintf(fid, {\cf22 "%f %f %f %f %f %f %f %f %f %f %f %f %f\\n"}, ({\cf18 double})sourcePath[s].getSpeed(),\par
00124             ({\cf18 double})sourcePath[s].getX(), ({\cf18 double})sourcePath[s].getY(), ({\cf18 double})sourcePath[s].getZ(),\par
00125             ({\cf18 double})sourcePath[s].getA(), ({\cf18 double})sourcePath[s].getB(), ({\cf18 double})sourcePath[s].getC());\par
00126     \}\par
00127 \}\par
}
{
\ql
Benutzt {\b CEulerMatrix::getMatrix()}, {\b path} und {\b step}.}\par
}
{\xe \v logData\:CLogging}
{\xe \v CLogging\:logData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CLogging::logData (vector< list< {\b CInputPoint3D} > > &  {\i sourcePath})}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft calculateMean f\'FCr die einzelnen Segmente auf. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loggingdaten werden weggespeichert {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vector<list<CInputPoint3D>>&} \cell }{sourcePath \cell }
{\row }
}
}{
Definiert in Zeile {\b 37} der Datei {\b Logging.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00038 \{\par
00039     {\cf18 string} filepath;            {\cf20 // file Pfad}\par
00040     {\cf18 float} dummyMatrix[3][3];    {\cf20 // dummyMatrix zum Zwischenspeichern}\par
00041     CEulerMatrix tmpEuler;      {\cf20 // CEulerMatrix zum Zwischenspeichern}\par
00042 \par
00043     filepath = path + {\cf22 "/"} + {\cf22 "0"} + std::to_string(step) + {\cf22 "_path.csv"};\par
00044 \par
00045     FILE* fid = fopen(filepath.c_str(), {\cf22 "w"});       {\cf20 // file \'F6ffnen}\par
00046 \par
00047     {\cf19 if} (fid == NULL)\par
00048     \{\par
00049         cerr << {\cf22 "ERROR - Can NOT write to output file!\\n"};      {\cf20 // Fehler beim file \'F6ffnen}\par
00050         {\cf19 return};\par
00051     \}\par
00052 \par
00053     {\cf19 for} ({\cf18 size_t} s = 0; s < sourcePath.size(); s++) {\cf20 //for all segments}\par
00054     \{\par
00055         list<CInputPoint3D>::iterator itr = sourcePath[s].begin();\par
00056 \par
00057         tmpEuler = itr->getEulerMatrix();\par
00058         tmpEuler.getMatrix(dummyMatrix);\par
00059 \par
00060         {\cf20 /* Ausgeben der Punkte mit dummyMatrix */}\par
00061         {\cf19 for} (; itr != sourcePath[s].end(); itr++) {\cf20 //for all points in the segment}\par
00062         \{\par
00063             fprintf(fid, {\cf22 "%f %f %f %f %f %f %f %f %f %f %f %f %f\\n"}, ({\cf18 double})itr->getTime(), ({\cf18 double})itr->getX(), ({\cf18 double})itr->getY(), ({\cf18 double})itr->getZ(),\par
00064                 dummyMatrix[0][0], dummyMatrix[0][1], dummyMatrix[0][2],\par
00065                 dummyMatrix[1][0], dummyMatrix[1][1], dummyMatrix[1][2],\par
00066                 dummyMatrix[2][0], dummyMatrix[2][1], dummyMatrix[2][2]);\par
00067         \}\par
00068 \par
00069         itr--;\par
00070     \}\par
00071 \}\par
}
{
\ql
Benutzt {\b CEulerMatrix::getEulerMatrix()}, {\b CEulerMatrix::getMatrix()}, {\b path} und {\b step}.}\par
{
\ql
Wird benutzt von {\b CSegmentApproximator::approx()}, {\b CPathBuilder::createPath()}, {\b CRobCodeGenerator::generateRobCode()} und {\b CMeanFilter::mean()}.}\par
}
{\xe \v setStep\:CLogging}
{\xe \v CLogging\:setStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CLogging::setStep (int  {\i Step})}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt in welchem Schritt wir uns befinden. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i int} \cell }{Step \cell }
{\row }
}
}{
Definiert in Zeile {\b 32} der Datei {\b Logging.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00033 \{\par
00034     step = Step;    {\cf20 // Step setzen}\par
00035 \}\par
}
{
\ql
Benutzt {\b step}.}\par
{
\ql
Wird benutzt von {\b CSegmentApproximator::approx()}, {\b CPathBuilder::createPath()}, {\b CRobCodeGenerator::generateRobCode()} und {\b CMeanFilter::mean()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v detailed\:CLogging}
{\xe \v CLogging\:detailed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CLogging::detailed{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Speicherpfad \par
}{
Definiert in Zeile {\b 81} der Datei {\b Logging.h}.}\par
{
\ql
Wird benutzt von {\b CLogging()} und {\b getDetailed()}.}\par
}
{\xe \v path\:CLogging}
{\xe \v CLogging\:path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string CLogging::path{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Speicherpfad \par
}{
Definiert in Zeile {\b 77} der Datei {\b Logging.h}.}\par
{
\ql
Wird benutzt von {\b CLogging()}, {\b logData()}, {\b logData()} und {\b logData()}.}\par
}
{\xe \v step\:CLogging}
{\xe \v CLogging\:step}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CLogging::step{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In welchem Schritt sind wir gerade \par
}{
Definiert in Zeile {\b 73} der Datei {\b Logging.h}.}\par
{
\ql
Wird benutzt von {\b CLogging()}, {\b logData()}, {\b logData()}, {\b logData()} und {\b setStep()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b Logging.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b Logging.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CMeanFilter Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v CMeanFilter}
{\xe \v CMeanFilter}
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gleitender Mittelwertfilter. }}\par
{
{\f2 #include <MeanFilter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CMeanFilter} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CMeanFilter} (int Window)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CMeanFilter} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWindowSize} (int Window)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt das Fenster. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getWindowSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt das gesetzte Fenster zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< list< {\b CInputPoint3D} > > & {\b getPath} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt den gegl\'E4tteten Pfad zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list< {\b CInputPoint3D} > {\b calculateMean} (list< {\b CInputPoint3D} > &segment)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet gleitenden Mittelwert. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mean} (vector< list< {\b CInputPoint3D} > > &sourcePath, {\b CLogging} log)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft calculateMean f\'FCr die einzelnen Segmente auf. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b windowSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< list< {\b CInputPoint3D} > > {\b meanPath}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gleitender Mittelwertfilter. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In dieser Klasse werden die eingelesenen Daten mit einem gleitenden Mittelwertfilter mit einstellbarem Fenster gegl\'E4ttet. \par
}{
Definiert in Zeile {\b 21} der Datei {\b MeanFilter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v CMeanFilter\:CMeanFilter}
{\xe \v CMeanFilter\:CMeanFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CMeanFilter::CMeanFilter ()}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert des Fensters mit 3 als default Wert \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CMeanFilter(int Window)}; \par
}}}{
Definiert in Zeile {\b 11} der Datei {\b MeanFilter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00012 \{\par
00013     windowSize = 3;         {\cf20 // initialisieren mit Standardfenstergr\'F6\'DFe 3}\par
00014 \}\par
}
{
\ql
Benutzt {\b windowSize}.}\par
}
{\xe \v CMeanFilter\:CMeanFilter}
{\xe \v CMeanFilter\:CMeanFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CMeanFilter::CMeanFilter (int  {\i Window})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert die Input Daten mit Null {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i int} \cell }{Window Konstruktor der Klasse mit Fenster @seeCMeanFilter(); \cell }
{\row }
}
}{
Definiert in Zeile {\b 16} der Datei {\b MeanFilter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00017 \{\par
00018     windowSize = Window;    {\cf20 // initialisieren der Fenstergr\'F6\'DFe mit \'DCbergabewert}\par
00019 \}\par
}
{
\ql
Benutzt {\b windowSize}.}\par
}
{\xe \v ~CMeanFilter\:CMeanFilter}
{\xe \v CMeanFilter\:~CMeanFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CMeanFilter::~CMeanFilter ()}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 21} der Datei {\b MeanFilter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00022 \{\par
00023 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v calculateMean\:CMeanFilter}
{\xe \v CMeanFilter\:calculateMean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list< {\b CInputPoint3D} > CMeanFilter::calculateMean (list< {\b CInputPoint3D} > &  {\i segment})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet gleitenden Mittelwert. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hier wird der Mittelwert der einzelnen Segmente berechnet {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i list<CInputPoint3D>&} \cell }{segment bekommt einzelne Segmente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: list<CInputPoint3D> gibt gel\'E4ttete Segmente zur\'FCck \par
}}}{
Definiert in Zeile {\b 55} der Datei {\b MeanFilter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00056 \{\par
00057     {\cf18 double} sumX = 0, sumY = 0, sumZ = 0;    {\cf20 // Variablen zum Speichern der Summe}\par
00058     {\cf18 double} div = 0;                         {\cf20 // Variable zum Speichern des Teilers}\par
00059 \par
00060     CInputPoint3D p;        {\cf20 //Point3D zum Zwischenspeichern}\par
00061 \par
00062     {\cf18 size_t} inputSize = segment.size();\par
00063 \par
00064     list<CInputPoint3D>::iterator it = segment.begin();\par
00065     list<CInputPoint3D> newSegment;\par
00066 \par
00067     {\cf19 for} ({\cf18 size_t} i = 0; i < inputSize - windowSize; ++i) {\cf20 //For each element in the Segment}\par
00068     \{\par
00069         sumX = 0, sumY = 0, sumZ = 0;   {\cf20 // Variablen zum Speichern der Summe auf 0 zur\'FCck setzen}\par
00070         div = 0;                        {\cf20 // Variable zum Speichern des Teilers auf 0 zur\'FCck setzen}\par
00071         p.setTime(it->getTime());\par
00072         p.setEulerMatrix(it->getEulerMatrix());\par
00073         {\cf19 for} ({\cf18 size_t} j = i; j < i + windowSize; ++j) {\cf20 // Build the sums for the three points}\par
00074         \{\par
00075             sumX += it->getX();\par
00076             sumY += it->getY();\par
00077             sumZ += it->getZ();\par
00078             div++;\par
00079             it++;\par
00080         \}\par
00081         {\cf19 for} ({\cf18 size_t} index = windowSize; index > 0; index--) {\cf20 // Pain, the iterator has to be set back}\par
00082         \{\par
00083             it--;\par
00084         \}\par
00085         p.set(sumX / div, sumY / div, sumZ / div); {\cf20 // Calculate smoothed values}\par
00086         {\cf19 if}(it != segment.end())\par
00087             it++;\par
00088         newSegment.push_back(p);\par
00089     \}\par
00090     {\cf19 return} newSegment;\par
00091 \}\par
}
{
\ql
Benutzt {\b CPoint3D::set()}, {\b CInputPoint3D::setEulerMatrix()}, {\b CInputPoint3D::setTime()} und {\b windowSize}.}\par
{
\ql
Wird benutzt von {\b mean()}.}\par
}
{\xe \v getPath\:CMeanFilter}
{\xe \v CMeanFilter\:getPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< list< {\b CInputPoint3D} > > & CMeanFilter::getPath ()}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt den gegl\'E4tteten Pfad zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: vector<list<CInputPoint3D>> \par
}}}{
Definiert in Zeile {\b 35} der Datei {\b MeanFilter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00036 \{\par
00037     {\cf19 return} meanPath;        {\cf20 // Mittelwert zur\'FCck geben}\par
00038 \}\par
}
{
\ql
Benutzt {\b meanPath}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\xe \v getWindowSize\:CMeanFilter}
{\xe \v CMeanFilter\:getWindowSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CMeanFilter::getWindowSize ()}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt das gesetzte Fenster zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: Window int \par
}}}{
Definiert in Zeile {\b 30} der Datei {\b MeanFilter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00031 \{\par
00032     {\cf19 return} windowSize;      {\cf20 // Fenstergr\'F6\'DFe zur\'FCck geben}\par
00033 \}\par
}
{
\ql
Benutzt {\b windowSize}.}\par
}
{\xe \v mean\:CMeanFilter}
{\xe \v CMeanFilter\:mean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CMeanFilter::mean (vector< list< {\b CInputPoint3D} > > &  {\i sourcePath}, {\b CLogging}  {\i log})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft calculateMean f\'FCr die einzelnen Segmente auf. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hier wird durch die Segmente interiert und f\'FCr jedes die calculate Mean Funktion aufgerufen. Anschliessend werden sie in meanPath abgespeichert. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i list<CInputPoint3D>&} \cell }{segment bekommt einzelne Segmente \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b CLogging}} \cell }{log f\'FCr das Logging \cell }
{\row }
}
}{
Definiert in Zeile {\b 40} der Datei {\b MeanFilter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00041 \{\par
00042     list<CInputPoint3D> dummyList;\par
00043     {\cf19 for} ({\cf18 size_t} s = 0; s < sourcePath.size(); s++)\par
00044     \{\par
00045         dummyList = calculateMean(sourcePath[s]);\par
00046         meanPath.push_back(dummyList);\par
00047     \}\par
00048     {\cf19 if} (log.getDetailed())\par
00049     \{\par
00050         log.setStep(2);\par
00051         log.logData(meanPath);\par
00052     \}\par
00053 \}\par
}
{
\ql
Benutzt {\b calculateMean()}, {\b CLogging::getDetailed()}, {\b CLogging::logData()}, {\b meanPath} und {\b CLogging::setStep()}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\xe \v setWindowSize\:CMeanFilter}
{\xe \v CMeanFilter\:setWindowSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CMeanFilter::setWindowSize (int  {\i Window})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt das Fenster. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Window} \cell }{int \cell }
{\row }
}
}{
Definiert in Zeile {\b 25} der Datei {\b MeanFilter.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00026 \{\par
00027     windowSize = Window;    {\cf20 // setzen der Fenstergr\'F6\'DFe mit \'DCbergabewert}\par
00028 \}\par
}
{
\ql
Benutzt {\b windowSize}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v meanPath\:CMeanFilter}
{\xe \v CMeanFilter\:meanPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<list<{\b CInputPoint3D}> > CMeanFilter::meanPath{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hier werden die gegl\'E4tteten Daten gespeichert \par
}{
Definiert in Zeile {\b 83} der Datei {\b MeanFilter.h}.}\par
{
\ql
Wird benutzt von {\b getPath()} und {\b mean()}.}\par
}
{\xe \v windowSize\:CMeanFilter}
{\xe \v CMeanFilter\:windowSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CMeanFilter::windowSize{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gr\'F6sse des Fensters des gleitenden Mittelwerts \par
}{
Definiert in Zeile {\b 79} der Datei {\b MeanFilter.h}.}\par
{
\ql
Wird benutzt von {\b calculateMean()}, {\b CMeanFilter()}, {\b CMeanFilter()}, {\b getWindowSize()} und {\b setWindowSize()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b MeanFilter.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b MeanFilter.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
COutputPoint3D Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v COutputPoint3D}
{\xe \v COutputPoint3D}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output Punkt. }}\par
{
{\f2 #include <Point3D.h>}}\par
Klassendiagramm f\'FCr COutputPoint3D:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_output_point3_d.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b COutputPoint3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b COutputPoint3D} (double Speed, double X, double Y, double Z, double A, double B, double C)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~COutputPoint3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getSpeed} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt die Geschwindigkeit zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getA} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt A zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getB} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt B zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getC} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt C zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSpeed} (double {\b speed})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt die Geschwindigkeit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setA} (double A)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt A. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setB} (double B)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt B. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setC} (double C)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt C. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D6ffentliche Methoden geerbt von {\b CPoint3D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoint3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoint3D} (double X, double Y, double Z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CPoint3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getX} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt X zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getY} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Y zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getZ} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Z zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setX} (double X)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt X. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY} (double Y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setZ} (double Z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set} (double X, double Y, double Z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt X, Y und Z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceTo} ({\b CPoint3D} point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Distanz zu einem anderen Punkt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceTo} ({\b CLine3D} line)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Distanz zu einer Linie. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b a}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b b}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b speed}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Weitere Geerbte Elemente\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Gesch\'FCtzte Attribute geerbt von {\b CPoint3D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output Punkt. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kind der Punkt Grundklasse, erweitert um die Geschwindigkeit und die Drehwinkel \par
}{
Definiert in Zeile {\b 177} der Datei {\b Point3D.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v COutputPoint3D\:COutputPoint3D}
{\xe \v COutputPoint3D\:COutputPoint3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
COutputPoint3D::COutputPoint3D (void )}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert des fertig bearbeiteten Punktes mit Null \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b COutputPoint3D(double Speed, double X, double Y, double Z, double A, double B, double C)}; \par
}}}{
Definiert in Zeile {\b 159} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00159                                    : CPoint3D()\par
00160 \{\par
00161     speed = 0;\par
00162     a = 0;\par
00163     b = 0;\par
00164     c = 0;\par
00165 \}\par
}
{
\ql
Benutzt {\b a}, {\b b}, {\b c} und {\b speed}.}\par
}
{\xe \v COutputPoint3D\:COutputPoint3D}
{\xe \v COutputPoint3D\:COutputPoint3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
COutputPoint3D::COutputPoint3D (double  {\i Speed}, double  {\i X}, double  {\i Y}, double  {\i Z}, double  {\i A}, double  {\i B}, double  {\i C})}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert des eingelesenen Punktes mit Null {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Speed \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{X \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Y \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Z \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{A \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{B \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{C \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CInputPoint3D(double X, double Y, double Z, double Timestamp, CEulerMatrix Matrix)} \par
}}}{
Definiert in Zeile {\b 168} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00169 \{\par
00170     speed = Speed;\par
00171     a = A;\par
00172     b = B;\par
00173     c = C;\par
00174     x = X;\par
00175     y = Y;\par
00176     z = Z;\par
00177 \}\par
}
{
\ql
Benutzt {\b a}, {\b b}, {\b c}, {\b speed}, {\b CPoint3D::x}, {\b CPoint3D::y} und {\b CPoint3D::z}.}\par
}
{\xe \v ~COutputPoint3D\:COutputPoint3D}
{\xe \v COutputPoint3D\:~COutputPoint3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
COutputPoint3D::~COutputPoint3D (void )}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 179} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00180 \{\par
00181 \par
00182 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v getA\:COutputPoint3D}
{\xe \v COutputPoint3D\:getA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double COutputPoint3D::getA (void )}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt A zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: double A \par
}}}{
Definiert in Zeile {\b 184} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00185 \{\par
00186     {\cf19 return} a;   {\cf20 // R\'FCckgabe Winkel alpha}\par
00187 \}\par
}
{
\ql
Benutzt {\b a}.}\par
}
{\xe \v getB\:COutputPoint3D}
{\xe \v COutputPoint3D\:getB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double COutputPoint3D::getB (void )}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt B zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: double B \par
}}}{
Definiert in Zeile {\b 189} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00190 \{\par
00191     {\cf19 return} b;   {\cf20 // R\'FCckgabe Winkel beta}\par
00192 \}\par
}
{
\ql
Benutzt {\b b}.}\par
}
{\xe \v getC\:COutputPoint3D}
{\xe \v COutputPoint3D\:getC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double COutputPoint3D::getC (void )}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt C zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: double C \par
}}}{
Definiert in Zeile {\b 194} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00195 \{\par
00196     {\cf19 return} c;   {\cf20 // R\'FCckgabe Winkel gamma}\par
00197 \}\par
}
{
\ql
Benutzt {\b c}.}\par
}
{\xe \v getSpeed\:COutputPoint3D}
{\xe \v COutputPoint3D\:getSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double COutputPoint3D::getSpeed (void )}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt die Geschwindigkeit zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: double Geschwindigkeit \par
}}}{
Definiert in Zeile {\b 199} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00200 \{\par
00201     {\cf19 return} speed;   {\cf20 // R\'FCckgabe Geschwindigkeit}\par
00202 \}\par
}
{
\ql
Benutzt {\b speed}.}\par
}
{\xe \v setA\:COutputPoint3D}
{\xe \v COutputPoint3D\:setA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void COutputPoint3D::setA (double  {\i A})}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt A. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{A \cell }
{\row }
}
}{
Definiert in Zeile {\b 204} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00205 \{\par
00206     a = A;      {\cf20 // setze Winkel alpha}\par
00207 \}\par
}
{
\ql
Benutzt {\b a}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::calculateAngles()} und {\b CRobCodeGenerator::postProcessing()}.}\par
}
{\xe \v setB\:COutputPoint3D}
{\xe \v COutputPoint3D\:setB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void COutputPoint3D::setB (double  {\i B})}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt B. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{B \cell }
{\row }
}
}{
Definiert in Zeile {\b 209} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00210 \{\par
00211     b = B;      {\cf20 // setze Winkel beta}\par
00212 \}\par
}
{
\ql
Benutzt {\b b}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::calculateAngles()} und {\b CRobCodeGenerator::postProcessing()}.}\par
}
{\xe \v setC\:COutputPoint3D}
{\xe \v COutputPoint3D\:setC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void COutputPoint3D::setC (double  {\i C})}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt C. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{C \cell }
{\row }
}
}{
Definiert in Zeile {\b 214} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00215 \{\par
00216     c = C;      {\cf20 // setze Winkel gamma}\par
00217 \}\par
}
{
\ql
Benutzt {\b c}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::calculateAngles()} und {\b CRobCodeGenerator::postProcessing()}.}\par
}
{\xe \v setSpeed\:COutputPoint3D}
{\xe \v COutputPoint3D\:setSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void COutputPoint3D::setSpeed (double  {\i speed})}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt die Geschwindigkeit. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{speed \cell }
{\row }
}
}{
Definiert in Zeile {\b 219} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00220 \{\par
00221     speed = Speed;      {\cf20 // setze Geschwindigkeit}\par
00222 \}\par
}
{
\ql
Benutzt {\b speed}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator::postProcessing()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v a\:COutputPoint3D}
{\xe \v COutputPoint3D\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double COutputPoint3D::a{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Drehwinkel des Punktes \par
}{
Definiert in Zeile {\b 249} der Datei {\b Point3D.h}.}\par
{
\ql
Wird benutzt von {\b COutputPoint3D()}, {\b COutputPoint3D()}, {\b getA()} und {\b setA()}.}\par
}
{\xe \v b\:COutputPoint3D}
{\xe \v COutputPoint3D\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double COutputPoint3D::b{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 249} der Datei {\b Point3D.h}.}\par
{
\ql
Wird benutzt von {\b COutputPoint3D()}, {\b COutputPoint3D()}, {\b getB()} und {\b setB()}.}\par
}
{\xe \v c\:COutputPoint3D}
{\xe \v COutputPoint3D\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double COutputPoint3D::c{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 249} der Datei {\b Point3D.h}.}\par
{
\ql
Wird benutzt von {\b COutputPoint3D()}, {\b COutputPoint3D()}, {\b getC()} und {\b setC()}.}\par
}
{\xe \v speed\:COutputPoint3D}
{\xe \v COutputPoint3D\:speed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double COutputPoint3D::speed{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Geschwindigkeit zum Punkt hin? TODO: \'FCberpr\'FCfen \par
}{
Definiert in Zeile {\b 253} der Datei {\b Point3D.h}.}\par
{
\ql
Wird benutzt von {\b COutputPoint3D()}, {\b COutputPoint3D()}, {\b getSpeed()} und {\b setSpeed()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b Point3D.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b Point3D.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CPathBuilder Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v CPathBuilder}
{\xe \v CPathBuilder}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Zusammensetzten des Pfades. }}\par
{
{\f2 #include <PathBuilder.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPathBuilder} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CPathBuilder} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b CInputPoint3D} > & {\b getPath} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Pfad zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createPath} (vector< list< {\b CInputPoint3D} > > &segments, {\b CLogging} log)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Pfad zur\'FCck. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b CInputPoint3D} > {\b path}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Zusammensetzten des Pfades. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In dieser Klasse wird aus den Segmenten ein zusammenh\'E4ngender Pfad erstellt \par
}{
Definiert in Zeile {\b 21} der Datei {\b PathBuilder.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v CPathBuilder\:CPathBuilder}
{\xe \v CPathBuilder\:CPathBuilder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPathBuilder::CPathBuilder (void )}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert der Klasse \par
}{
Definiert in Zeile {\b 9} der Datei {\b PathBuilder.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00010 \{\par
00011 \}\par
}
}
{\xe \v ~CPathBuilder\:CPathBuilder}
{\xe \v CPathBuilder\:~CPathBuilder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPathBuilder::~CPathBuilder (void )}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 14} der Datei {\b PathBuilder.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00015 \{\par
00016 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v createPath\:CPathBuilder}
{\xe \v CPathBuilder\:createPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPathBuilder::createPath (vector< list< {\b CInputPoint3D} > > &  {\i segments}, {\b CLogging}  {\i log})}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Pfad zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i segments} \cell }{vector<list<CInputPoint3D>>& Pfad aus Segmenten \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b CLogging}} \cell }{log f\'FCr das Logging \cell }
{\row }
}
}{
Definiert in Zeile {\b 23} der Datei {\b PathBuilder.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00024 \{\par
00025     CInputPoint3D point; {\cf20 //startpoint}\par
00026 \par
00027     {\cf19 for} ({\cf18 size_t} s = 0; s < segments.size(); s++) {\cf20 //for all segments}\par
00028     \{\par
00029         list<CInputPoint3D>::iterator itr = segments[s].begin();\par
00030 \par
00031         {\cf19 for} (; itr != segments[s].end(); itr++) {\cf20 //for all points in the segment}\par
00032         \{\par
00033             point.set(({\cf18 double})itr->getX(), ({\cf18 double})itr->getY(), ({\cf18 double})itr->getZ());\par
00034             point.setTime(itr->getTime());\par
00035             point.setEulerMatrix(itr->getEulerMatrix());\par
00036             path.push_back(point);\par
00037         \}\par
00038 \par
00039         itr--;\par
00040     \}\par
00041     {\cf19 if} (log.getDetailed())\par
00042     \{\par
00043         log.setStep(4);\par
00044         log.logData(path);\par
00045     \}\par
00046 \}\par
}
{
\ql
Benutzt {\b CLogging::getDetailed()}, {\b CLogging::logData()}, {\b path}, {\b CPoint3D::set()}, {\b CInputPoint3D::setEulerMatrix()}, {\b CLogging::setStep()} und {\b CInputPoint3D::setTime()}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\xe \v getPath\:CPathBuilder}
{\xe \v CPathBuilder\:getPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< {\b CInputPoint3D} > & CPathBuilder::getPath ()}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Pfad zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
: vector<CInputPoint3D> zusammengesetzter Pfad \par
}}}{
Definiert in Zeile {\b 18} der Datei {\b PathBuilder.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00019 \{\par
00020     {\cf19 return} path;\par
00021 \}\par
}
{
\ql
Benutzt {\b path}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v path\:CPathBuilder}
{\xe \v CPathBuilder\:path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<{\b CInputPoint3D}> CPathBuilder::path{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vector mit den zusammengesetzten Pfad Daten \par
}{
Definiert in Zeile {\b 50} der Datei {\b PathBuilder.h}.}\par
{
\ql
Wird benutzt von {\b createPath()} und {\b getPath()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b PathBuilder.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b PathBuilder.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CPoint3D Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v CPoint3D}
{\xe \v CPoint3D}
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Grundklasse Punkt. }}\par
{
{\f2 #include <Point3D.h>}}\par
Klassendiagramm f\'FCr CPoint3D:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_point3_d.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoint3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoint3D} (double X, double Y, double Z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CPoint3D} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getX} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt X zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getY} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Y zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getZ} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Z zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setX} (double X)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt X. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY} (double Y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setZ} (double Z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set} (double X, double Y, double Z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt X, Y und Z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceTo} ({\b CPoint3D} point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Distanz zu einem anderen Punkt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceTo} ({\b CLine3D} line)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Distanz zu einer Linie. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Gesch\'FCtzte Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Grundklasse Punkt. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Das ist die Grundklasse eines Punktes, hier lassen sich die Basiswerte setzten und Abst\'E4nde zwishen Punkten berechnen. \par
}{
Definiert in Zeile {\b 20} der Datei {\b Point3D.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v CPoint3D\:CPoint3D}
{\xe \v CPoint3D\:CPoint3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPoint3D::CPoint3D (void )}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert des Punktes mit Null \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CPoint3D(double X, double Y, double Z)} \par
}}}{
Definiert in Zeile {\b 13} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00014 \{\par
00015     x = 0;\par
00016     y = 0;\par
00017     z = 0;\par
00018 \}\par
}
{
\ql
Benutzt {\b x}, {\b y} und {\b z}.}\par
}
{\xe \v CPoint3D\:CPoint3D}
{\xe \v CPoint3D\:CPoint3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPoint3D::CPoint3D (double  {\i X}, double  {\i Y}, double  {\i Z})}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert des Punktes mit Null {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{X \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Y \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Z \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CPoint3D(void)} \par
}}}{
Definiert in Zeile {\b 21} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00022 \{\par
00023     x = X;\par
00024     y = Y;\par
00025     z = Z;\par
00026 \}\par
}
{
\ql
Benutzt {\b x}, {\b y} und {\b z}.}\par
}
{\xe \v ~CPoint3D\:CPoint3D}
{\xe \v CPoint3D\:~CPoint3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPoint3D::~CPoint3D (void )}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 28} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00029 \{\par
00030 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v distanceTo\:CPoint3D}
{\xe \v CPoint3D\:distanceTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoint3D::distanceTo ({\b CLine3D}  {\i line})}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Distanz zu einer Linie. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b CLine3D}} \cell }{line \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
double Distanz \par
}}}{
Definiert in Zeile {\b 76} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00077 \{\par
00078     {\cf18 double} bx, by, bz, rv_sq, dist, vp1, vp2, vp3;          {\cf20 // Variablen Anlegen}\par
00079 \par
00080     {\cf20 /*}\par
00081 {\cf20     Vermessen wird der Punkt selbst}\par
00082 {\cf20 }\par
00083 {\cf20     bx, by, bz      == Vektordifferenz}\par
00084 {\cf20     rv_sq           == Betrag des Linienvektors}\par
00085 {\cf20     dist            == Distanz von Punkt zu Linie}\par
00086 {\cf20     vp1, vp2, vp3   == Vektorprodukte}\par
00087 {\cf20     */}\par
00088 \par
00089     {\cf18 int} rvx = line.p1.x - line.p2.x;        {\cf20 // Parameter X des Linienvektor berechnen}\par
00090     {\cf18 int} rvy = line.p1.y - line.p2.y;        {\cf20 // Parameter Y des Linienvektor berechnen}\par
00091     {\cf18 int} rvz = line.p1.z - line.p2.z;        {\cf20 // Parameter Z des Linienvektor berechnen}\par
00092 \par
00093     rv_sq = sqrt((({\cf18 double})rvx * ({\cf18 double})rvx) + (({\cf18 double})rvy * ({\cf18 double})rvy) + (({\cf18 double})rvz * ({\cf18 double})rvz));      {\cf20 // Betrag des Linienvektor berechnen}\par
00094 \par
00095     bx = x - (double)line.p1.x;             {\cf20 // X(Punkt) - X(Aufpunkt) }\par
00096     by = y - (double)line.p1.y;             {\cf20 // Y(Punkt) - Y(Aufpunkt)}\par
00097     bz = z - (double)line.p1.z;             {\cf20 // Z(Punkt) - Z(Aufpunkt)}\par
00098 \par
00099     vp1 = by * rvz - bz * rvy;              {\cf20 // Parameter X Vektorprodukt}\par
00100     vp2 = bz * rvx - bx * rvz;              {\cf20 // Parameter Y Vektorprodukt}\par
00101     vp3 = bx * rvy - by * rvx;              {\cf20 // Parameter Z Vektorprodukt}\par
00102 \par
00103     dist = sqrt(vp1 * vp1 + vp2 * vp2 + vp3 * vp3) / rv_sq; {\cf20 // Betrag des Vektors berechnen}\par
00104 \par
00105     {\cf19 return} dist;\par
00106 \}\par
}
{
\ql
Benutzt {\b CLine3D::p1}, {\b CLine3D::p2}, {\b x}, {\b y} und {\b z}.}\par
}
{\xe \v distanceTo\:CPoint3D}
{\xe \v CPoint3D\:distanceTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoint3D::distanceTo ({\b CPoint3D}  {\i point})}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Distanz zu einem anderen Punkt. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b CPoint3D}} \cell }{point \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
double Distanz \par
}}}{
Definiert in Zeile {\b 71} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00072 \{\par
00073     {\cf19 return} sqrt(pow(({\cf18 double})(x - ({\cf18 double})point.getX()), 2) + pow(({\cf18 double})(y - ({\cf18 double})point.getY()), 2) + pow(({\cf18 double})(z - ({\cf18 double})point.getZ()), 2));  {\cf20 //  Pythagoras 3D}\par
00074 \}\par
}
{
\ql
Benutzt {\b getX()}, {\b getY()}, {\b getZ()}, {\b x}, {\b y} und {\b z}.}\par
}
{\xe \v getX\:CPoint3D}
{\xe \v CPoint3D\:getX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoint3D::getX (void )}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt X zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
double \par
}}}{
Definiert in Zeile {\b 32} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00033 \{\par
00034     {\cf19 return} x;   {\cf20 // X-Koordinate zur\'FCck geben}\par
00035 \}\par
}
{
\ql
Benutzt {\b x}.}\par
{
\ql
Wird benutzt von {\b CInputParameter::detectJump()} und {\b distanceTo()}.}\par
}
{\xe \v getY\:CPoint3D}
{\xe \v CPoint3D\:getY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoint3D::getY (void )}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Y zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
double \par
}}}{
Definiert in Zeile {\b 37} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00038 \{\par
00039     {\cf19 return} y;   {\cf20 // Y-Koordinate zur\'FCck geben}\par
00040 \}\par
}
{
\ql
Benutzt {\b y}.}\par
{
\ql
Wird benutzt von {\b CInputParameter::detectJump()} und {\b distanceTo()}.}\par
}
{\xe \v getZ\:CPoint3D}
{\xe \v CPoint3D\:getZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoint3D::getZ (void )}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt Z zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
double \par
}}}{
Definiert in Zeile {\b 42} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00043 \{\par
00044     {\cf19 return} z;   {\cf20 // Z-Koordinate zur\'FCck geben}\par
00045 \}\par
}
{
\ql
Benutzt {\b z}.}\par
{
\ql
Wird benutzt von {\b CInputParameter::detectJump()} und {\b distanceTo()}.}\par
}
{\xe \v set\:CPoint3D}
{\xe \v CPoint3D\:set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPoint3D::set (double  {\i X}, double  {\i Y}, double  {\i Z})}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt X, Y und Z. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{X \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Y \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Z \cell }
{\row }
}
}{
Definiert in Zeile {\b 63} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00064 \{\par
00065     x = X;  {\cf20 // X-Koordinate setzen}\par
00066     y = Y;  {\cf20 // Y-Koordinate setzen}\par
00067     z = Z;  {\cf20 // Z-Koordinate setzen}\par
00068 \}   \par
}
{
\ql
Benutzt {\b x}, {\b y} und {\b z}.}\par
{
\ql
Wird benutzt von {\b CMeanFilter::calculateMean()}, {\b CPathBuilder::createPath()}, {\b CRobCodeGenerator::postProcessing()} und {\b CInputPoint3D::setPoint()}.}\par
}
{\xe \v setX\:CPoint3D}
{\xe \v CPoint3D\:setX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPoint3D::setX (double  {\i X})}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt X. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{X \cell }
{\row }
}
}{
Definiert in Zeile {\b 47} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00048 \{\par
00049     x = X;  {\cf20 // X-Koordinate setzen}\par
00050 \}\par
}
{
\ql
Benutzt {\b x}.}\par
{
\ql
Wird benutzt von {\b CSegmentApproximator::douglasPeuckerRecursive()}.}\par
}
{\xe \v setY\:CPoint3D}
{\xe \v CPoint3D\:setY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPoint3D::setY (double  {\i Y})}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Y. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Y \cell }
{\row }
}
}{
Definiert in Zeile {\b 52} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00053 \{\par
00054     y = Y;  {\cf20 // Y-Koordinate setzen}\par
00055 \}\par
}
{
\ql
Benutzt {\b y}.}\par
{
\ql
Wird benutzt von {\b CSegmentApproximator::douglasPeuckerRecursive()}.}\par
}
{\xe \v setZ\:CPoint3D}
{\xe \v CPoint3D\:setZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPoint3D::setZ (double  {\i Z})}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt Z. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{Z \cell }
{\row }
}
}{
Definiert in Zeile {\b 57} der Datei {\b Point3D.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00058 \{\par
00059     z = Z;  {\cf20 // Z-Koordinate setzen}\par
00060 \}\par
}
{
\ql
Benutzt {\b z}.}\par
{
\ql
Wird benutzt von {\b CSegmentApproximator::douglasPeuckerRecursive()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v x\:CPoint3D}
{\xe \v CPoint3D\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoint3D::x{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Koordinaten des Punkts \par
}{
Definiert in Zeile {\b 99} der Datei {\b Point3D.h}.}\par
{
\ql
Wird benutzt von {\b CInputPoint3D::CInputPoint3D()}, {\b COutputPoint3D::COutputPoint3D()}, {\b CPoint3D()}, {\b CPoint3D()}, {\b distanceTo()}, {\b distanceTo()}, {\b getX()}, {\b set()} und {\b setX()}.}\par
}
{\xe \v y\:CPoint3D}
{\xe \v CPoint3D\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoint3D::y{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 99} der Datei {\b Point3D.h}.}\par
{
\ql
Wird benutzt von {\b CInputPoint3D::CInputPoint3D()}, {\b COutputPoint3D::COutputPoint3D()}, {\b CPoint3D()}, {\b CPoint3D()}, {\b distanceTo()}, {\b distanceTo()}, {\b getY()}, {\b set()} und {\b setY()}.}\par
}
{\xe \v z\:CPoint3D}
{\xe \v CPoint3D\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoint3D::z{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 99} der Datei {\b Point3D.h}.}\par
{
\ql
Wird benutzt von {\b CInputPoint3D::CInputPoint3D()}, {\b COutputPoint3D::COutputPoint3D()}, {\b CPoint3D()}, {\b CPoint3D()}, {\b distanceTo()}, {\b distanceTo()}, {\b getZ()}, {\b set()} und {\b setZ()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b Point3D.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b Point3D.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CRobCodeGenerator Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v CRobCodeGenerator}
{\xe \v CRobCodeGenerator}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Klasse zum erstellen des Roboter Codes. }}\par
{
{\f2 #include <RobCodeGenerator.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CRobCodeGenerator} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CRobCodeGenerator} ({\b CInputParameter} inputParam)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CRobCodeGenerator} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b generateRobCode} (vector< {\b CInputPoint3D} > &path, string filepath, string filename, {\b CLogging} log)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erstellt Roboter Code File. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b postProcessing} (vector< {\b CInputPoint3D} > &path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nachbearbeitung der Daten. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b calculateSpeed} ({\b CInputPoint3D} &p, size_t i, double timePrev)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Geschwindigkeit zwischen zwei Punkten. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calculateAngles} ({\b COutputPoint3D} &p, {\b CInputPoint3D} &pIn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Geschwindigkeit zwischen zwei Punkten. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b COutputPoint3D} > {\b processedPath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CInputParameter} {\b input}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Klasse zum erstellen des Roboter Codes. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In dieser Klasse wird die Nachbearbeitung der Daten mit den einstellbaren Daten durchgef\'FChrt. \par
}{
Definiert in Zeile {\b 25} der Datei {\b RobCodeGenerator.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v CRobCodeGenerator\:CRobCodeGenerator}
{\xe \v CRobCodeGenerator\:CRobCodeGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CRobCodeGenerator::CRobCodeGenerator (void )}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert der Daten \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CRobCodeGenerator(double speedIn, bool speedManualIn, bool orientationManualIn, tuple<double, double, double> angles)} \par
}}}{
Definiert in Zeile {\b 10} der Datei {\b RobCodeGenerator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00011 \{\par
00012 \}\par
}
}
{\xe \v CRobCodeGenerator\:CRobCodeGenerator}
{\xe \v CRobCodeGenerator\:CRobCodeGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CRobCodeGenerator::CRobCodeGenerator ({\b CInputParameter}  {\i inputParam})}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert der Daten {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initSpeed} \cell }{double \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initSpeedManual} \cell }{bool \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initOrientationManual} \cell }{bool \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initA} \cell }{double \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initB} \cell }{double \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i initC} \cell }{double \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Siehe auch\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b CRobCodeGenerator(void)} \par
}}}{
Definiert in Zeile {\b 15} der Datei {\b RobCodeGenerator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00016 \{\par
00017     input = inputParam;\par
00018 \}\par
}
{
\ql
Benutzt {\b input}.}\par
}
{\xe \v ~CRobCodeGenerator\:CRobCodeGenerator}
{\xe \v CRobCodeGenerator\:~CRobCodeGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CRobCodeGenerator::~CRobCodeGenerator (void )}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 20} der Datei {\b RobCodeGenerator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00021 \{\par
00022 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v calculateAngles\:CRobCodeGenerator}
{\xe \v CRobCodeGenerator\:calculateAngles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRobCodeGenerator::calculateAngles ({\b COutputPoint3D} &  {\i p}, {\b CInputPoint3D} &  {\i pIn})}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Geschwindigkeit zwischen zwei Punkten. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i COutputPoint3D&} \cell }{p \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i CInputPoint3D&} \cell }{pIn \cell }
{\row }
}
}{
Definiert in Zeile {\b 125} der Datei {\b RobCodeGenerator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00126 \{\par
00127     {\cf20 // Funktion in Eulermatrix aufrufen die a/b/c neu berechnet}\par
00128 \par
00129     CEulerMatrix matrix = pIn.getEulerMatrix();\par
00130     tuple<double, double, double> abc;\par
00131 \par
00132     abc = matrix.calculateAngels();\par
00133 \par
00134     p.setA(get<0>(abc));\par
00135     p.setB(get<1>(abc));\par
00136     p.setC(get<2>(abc));\par
00137 \}\par
}
{
\ql
Benutzt {\b CEulerMatrix::calculateAngels()}, {\b CInputPoint3D::getEulerMatrix()}, {\b COutputPoint3D::setA()}, {\b COutputPoint3D::setB()} und {\b COutputPoint3D::setC()}.}\par
{
\ql
Wird benutzt von {\b postProcessing()}.}\par
}
{\xe \v calculateSpeed\:CRobCodeGenerator}
{\xe \v CRobCodeGenerator\:calculateSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRobCodeGenerator::calculateSpeed ({\b CInputPoint3D} &  {\i p}, size_t  {\i i}, double  {\i timePrev})}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnet die Geschwindigkeit zwischen zwei Punkten. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i CInputPoint3D&} \cell }{p aktueller Punkt \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_t} \cell }{i Position im processedPath \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i double} \cell }{timePrev Zeitstempel des vorherigen Punkts \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
double \par
}}}{
Definiert in Zeile {\b 108} der Datei {\b RobCodeGenerator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00109 \{\par
00110     {\cf18 double} distance = 0;\par
00111     {\cf18 double} time = 0;\par
00112     {\cf18 double} speed;\par
00113 \par
00114     distance = processedPath[s - 1].distanceTo(p); {\cf20 //Strecke zwischen p und dem Punkt zuvor}\par
00115     time = p.getTime() - timePrev; {\cf20 //Zeit zwischen p-1 und p}\par
00116 \par
00117     speed = distance / time; {\cf20 // Berechnug Geschwindigkeit zwischen zwei Punkten}\par
00118 \par
00119     {\cf19 if} (speed > MAX_SPEED) {\cf20 //Begrenzung auf maximale Geschwindigkeit, falls Trackerdaten h\'EF\'BF\'BDheren Wert aufweisen}\par
00120         speed = MAX_SPEED;\par
00121 \par
00122     {\cf19 return} speed; {\cf20 //Zuweisung der Geschwindigkeit}\par
00123 \}\par
}
{
\ql
Benutzt {\b CInputPoint3D::getTime()}, {\b MAX_SPEED} und {\b processedPath}.}\par
{
\ql
Wird benutzt von {\b postProcessing()}.}\par
}
{\xe \v generateRobCode\:CRobCodeGenerator}
{\xe \v CRobCodeGenerator\:generateRobCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRobCodeGenerator::generateRobCode (vector< {\b CInputPoint3D} > &  {\i path}, string  {\i filepath}, string  {\i filename}, {\b CLogging}  {\i log})}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erstellt Roboter Code File. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft das Postprocessing auf und speichert die bearbeiteten Daten als .src File ab {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vector<CInputPoint3D>&} \cell }{path \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i string} \cell }{filename \cell }
{\row }
}
}{
Definiert in Zeile {\b 24} der Datei {\b RobCodeGenerator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00025 \{\par
00026     postProcessing(points); {\cf20 // Calculates all the necessary values}\par
00027 \par
00028     log.setStep(5);\par
00029     log.logData(processedPath);\par
00030 \par
00031     errno_t err;\par
00032     \par
00033     FILE* fid;\par
00034 \par
00035     {\cf18 string} fullPath = filepath + {\cf22 "/"} + filename;\par
00036 \par
00037     {\cf19 if} ((err = fopen_s(&fid, fullPath.c_str(), {\cf22 "w"})) != 0) {\cf20 // Errorhandling for File opening}\par
00038     \{ \par
00039         {\cf18 string} msg = {\cf22 "Open file: "};\par
00040         msg += filename;\par
00041         msg += {\cf22 " failed!"};\par
00042 \par
00043         {\cf19 throw} exception(msg.c_str());\par
00044     \}\par
00045 \par
00046     filename.erase(filename.end()-4,filename.end());        {\cf20 // l\'C3\'B6scht .src}\par
00047     fprintf(fid, {\cf22 "DEF %s \\n"}, filename.c_str());            {\cf20 // DEF in file schreiben}\par
00048 \par
00049     fputs({\cf22 "PTP $POS_ACT\\n"}, fid);                           {\cf20 // PTP zur aktuellen Position in file schreiben}\par
00050 \par
00051     {\cf19 if} (input.getSpeedManual()) {\cf20 // If the speed is set to manual, it will be defined once at the beginning of the file}\par
00052     \{\par
00053         fprintf(fid, {\cf22 "$VEL.CP = %f\\n"}, input.getSpeed());       {\cf20 // Geschwindigkeit ein file schreiben}\par
00054     \}\par
00055 \par
00056     tuple <double, double, double> offset = input.getOffset();\par
00057 \par
00058     {\cf19 for} ({\cf18 size_t} s = 0; s < points.size(); s++)\par
00059     \{\par
00060         {\cf19 if} (!input.getSpeedManual()) {\cf20 // If the speed is calculated it needs to be before every LIN command}\par
00061             fprintf(fid, {\cf22 "$VEL.CP = %f\\n"}, ({\cf18 float})processedPath[s].getSpeed());\par
00062         fprintf(fid, {\cf22 "LIN \{X %f, Y %f, Z %f, A %f, B %f, C %f\}\\n"}, processedPath[s].getX() + get<0>(offset), processedPath[s].getY() + get<1>(offset),\par
00063             processedPath[s].getZ() + get<2>(offset), processedPath[s].getA(), processedPath[s].getB(),\par
00064             processedPath[s].getC());\par
00065     \}\par
00066 \par
00067     fputs({\cf22 "END"}, fid);\par
00068 \}\par
}
{
\ql
Benutzt {\b CInputParameter::getOffset()}, {\b CInputParameter::getSpeed()}, {\b CInputParameter::getSpeedManual()}, {\b input}, {\b CLogging::logData()}, {\b postProcessing()}, {\b processedPath} und {\b CLogging::setStep()}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\xe \v postProcessing\:CRobCodeGenerator}
{\xe \v CRobCodeGenerator\:postProcessing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRobCodeGenerator::postProcessing (vector< {\b CInputPoint3D} > &  {\i path})}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nachbearbeitung der Daten. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Integration der Manuellen Eingabedaten in die eingelesenen und bearbeiteten Daten Hier werden calculateSpeed und calculateAngles aufgerufen. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vector<CInputPoint3D>&} \cell }{path \cell }
{\row }
}
}{
Definiert in Zeile {\b 70} der Datei {\b RobCodeGenerator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00071 \{\par
00072     COutputPoint3D p;\par
00073     {\cf18 double} timePrev = 1;\par
00074 \par
00075     {\cf19 for} ({\cf18 size_t} s = 0; s < path.size(); s++) {\cf20 // F\'C3\'BCr jeden Punkt in dem Vector}\par
00076     \{\par
00077         p.set(path[s].getX(), path[s].getY(), path[s].getZ());\par
00078         {\cf19 if} (input.getSpeedManual())\par
00079         \{\par
00080             {\cf19 if} (input.getSpeed() > MAX_SPEED) {\cf20 //Wenn maximale Geschwindigkeit ueberschritten wird, Geschwindigkeit begrenzen}\par
00081                 input.setSpeed(MAX_SPEED, {\cf17 true});\par
00082         \}\par
00083         {\cf19 else}\par
00084         \{\par
00085             {\cf19 if} (s == 0)\par
00086                 p.setSpeed(1); {\cf20 //Der erste Punkt(0) wird mit Standardgeschwindigkeit 1m/s angefahren.}\par
00087 \par
00088             {\cf19 else}\par
00089                 p.setSpeed(calculateSpeed(path[s], s, timePrev)); {\cf20 //Die Geschwindigkeit zwischen den weiteren Punkten wird berechnet.}\par
00090         \}\par
00091 \par
00092         {\cf19 if} (input.getOrientationManual()) {\cf20 // Wenn der Winkel vorgegeben ist diesen setzten}\par
00093         \{\par
00094             tuple <double, double, double> angles;\par
00095             angles = input.getAngles();\par
00096             p.setA(get<0>(angles));\par
00097             p.setB(get<1>(angles));\par
00098             p.setC(get<2>(angles));\par
00099         \}\par
00100         {\cf19 else} {\cf20 // Sonst den Winkel berechnen}\par
00101             calculateAngles(p, path[s]);\par
00102         timePrev = path[s].getTime();\par
00103         processedPath.push_back(p);\par
00104     \}\par
00105 \par
00106 \}\par
}
{
\ql
Benutzt {\b calculateAngles()}, {\b calculateSpeed()}, {\b CInputParameter::getAngles()}, {\b CInputParameter::getOrientationManual()}, {\b CInputParameter::getSpeed()}, {\b CInputParameter::getSpeedManual()}, {\b input}, {\b MAX_SPEED}, {\b processedPath}, {\b CPoint3D::set()}, {\b COutputPoint3D::setA()}, {\b COutputPoint3D::setB()}, {\b COutputPoint3D::setC()}, {\b CInputParameter::setSpeed()} und {\b COutputPoint3D::setSpeed()}.}\par
{
\ql
Wird benutzt von {\b generateRobCode()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v input\:CRobCodeGenerator}
{\xe \v CRobCodeGenerator\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CInputParameter} CRobCodeGenerator::input{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User eingegebene Geschwindigkeit \par
}{
Definiert in Zeile {\b 88} der Datei {\b RobCodeGenerator.h}.}\par
{
\ql
Wird benutzt von {\b CRobCodeGenerator()}, {\b generateRobCode()} und {\b postProcessing()}.}\par
}
{\xe \v processedPath\:CRobCodeGenerator}
{\xe \v CRobCodeGenerator\:processedPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<{\b COutputPoint3D}> CRobCodeGenerator::processedPath{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fertig bearbeiteter Pfad \par
}{
Definiert in Zeile {\b 84} der Datei {\b RobCodeGenerator.h}.}\par
{
\ql
Wird benutzt von {\b calculateSpeed()}, {\b generateRobCode()} und {\b postProcessing()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b RobCodeGenerator.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b RobCodeGenerator.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSegmentApproximator Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v CSegmentApproximator}
{\xe \v CSegmentApproximator}
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ausd\'FCnnen des Pfades. }}\par
{
{\f2 #include <SegmentApproximator.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CSegmentApproximator} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CSegmentApproximator} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b approx} (const vector< list< {\b CInputPoint3D} > > &Segments, {\b CLogging} log)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft die Douglas-Peuker Funktion auf. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setmaxDistance} (double maxDistanceSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt die maximale Abweichung. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getmaxDistance} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt die maximale Abweichung zur\'FCck. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< list< {\b CInputPoint3D} > > & {\b getSegmentsApproxVector} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt den bereinigten Pfad zur\'FCck. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b douglasPeuckerRecursive} (list< {\b CInputPoint3D} > &segment, std::list< {\b CInputPoint3D} >::iterator startItr, std::list< {\b CInputPoint3D} >::iterator endItr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rekursive Douglas Peuker Funktion. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< list< {\b CInputPoint3D} > > {\b segmentsApprox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxDistance}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ausd\'FCnnen des Pfades. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In dieser Klasse wird der Pfad mit hilfe des Douglas-Peuker Algorithmusses ausged\'FCnnt \par
}{
Definiert in Zeile {\b 22} der Datei {\b SegmentApproximator.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v CSegmentApproximator\:CSegmentApproximator}
{\xe \v CSegmentApproximator\:CSegmentApproximator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSegmentApproximator::CSegmentApproximator (void )}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialisiert die Klasse \par
}{
Definiert in Zeile {\b 11} der Datei {\b SegmentApproximator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00012 \{\par
00013 \}\par
}
}
{\xe \v ~CSegmentApproximator\:CSegmentApproximator}
{\xe \v CSegmentApproximator\:~CSegmentApproximator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSegmentApproximator::~CSegmentApproximator (void )}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dekonstruktor. }}\par
{
Definiert in Zeile {\b 15} der Datei {\b SegmentApproximator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00016 \{\par
00017 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v approx\:CSegmentApproximator}
{\xe \v CSegmentApproximator\:approx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSegmentApproximator::approx (const vector< list< {\b CInputPoint3D} > > &  {\i Segments}, {\b CLogging}  {\i log})}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ruft die Douglas-Peuker Funktion auf. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iteriert durch die Listen im Vektor und ruft die Douglas-Peuker-Funktion auf {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Segments} \cell }{const vector<list<CInputPoint3D>>& \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b CLogging}} \cell }{log f\'FCr das Logging \cell }
{\row }
}
}{
Definiert in Zeile {\b 19} der Datei {\b SegmentApproximator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00020 \{\par
00021     CInputPoint3D p;\par
00022 \par
00023     segmentsApprox = segments;\par
00024 \par
00025     {\cf20 /* Douglas Peucker f\'FCr Segmente aufrufen*/}\par
00026     {\cf19 for} ({\cf18 size_t} s = 0; s < segments.size(); s++)\par
00027     \{\par
00028         douglasPeuckerRecursive(segmentsApprox[s], segmentsApprox[s].begin(), --(segmentsApprox[s].end()));\par
00029     \}\par
00030 \par
00031     {\cf20 /*  Logging der Daten*/}\par
00032     {\cf19 if} (log.getDetailed())\par
00033     \{\par
00034         log.setStep(3);\par
00035         log.logData(segmentsApprox);\par
00036     \}\par
00037 \}\par
}
{
\ql
Benutzt {\b douglasPeuckerRecursive()}, {\b CLogging::getDetailed()}, {\b CLogging::logData()}, {\b segmentsApprox} und {\b CLogging::setStep()}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\xe \v douglasPeuckerRecursive\:CSegmentApproximator}
{\xe \v CSegmentApproximator\:douglasPeuckerRecursive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSegmentApproximator::douglasPeuckerRecursive (list< {\b CInputPoint3D} > &  {\i segment}, std::list< {\b CInputPoint3D} >::iterator  {\i startItr}, std::list< {\b CInputPoint3D} >::iterator  {\i endItr}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rekursive Douglas Peuker Funktion. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rekursive Funktion die durch das Segment geht und Punkte aus dem Pfad l\'F6scht wenn ihr Abstand zu gro\'DF wird. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i list<CInputPoint3D>&} \cell }{segment \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::list<CInputPoint3D>::iterator} \cell }{startIt \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::list<CInputPoint3D>::iterator} \cell }{endItr \cell }
{\row }
}
}{
Definiert in Zeile {\b 55} der Datei {\b SegmentApproximator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00056 \{\par
00057     {\cf19 if} (segment.size() < 3) {\cf19 return};  {\cf20 // min Gr\'F6\'DFe pro Seg 3}\par
00058     {\cf19 if} (distance(startItr, endItr) == 2) {\cf19 return};        {\cf20 // Zeigerabstand == 2}\par
00059     CInputPoint3D pStart; CInputPoint3D pEnd;       {\cf20 // Variablen deklarieren}\par
00060 \par
00061 \par
00062     {\cf20 /* Startpunkt setzen */}\par
00063     pStart.setX(startItr->getX()); pStart.setY(startItr->getY()); pStart.setZ(startItr->getZ());\par
00064     pStart.setTime(startItr->getTime());\par
00065     pStart.setEulerMatrix(startItr->getEulerMatrix());\par
00066 \par
00067     {\cf20 /* Endpunkt setzen */}\par
00068     pEnd.setX(endItr->getX()); pEnd.setY(endItr->getY()); pEnd.setZ(endItr->getZ());\par
00069     pEnd.setTime(endItr->getTime());\par
00070     pEnd.setEulerMatrix(endItr->getEulerMatrix());\par
00071 \par
00072     {\cf18 double} dist = 0.0, maxDist = 0.0;                   {\cf20 // dist und maxDist initialisieren }\par
00073     std::list<CInputPoint3D>::iterator maxItr, itr;     {\cf20 // Zeiger bilden}\par
00074 \par
00075 \par
00076     {\cf20 /* am weitesten Entfernten Punkt suchen */}\par
00077     {\cf19 for} (itr = startItr; itr != endItr; itr++)\par
00078     \{\par
00079         CLine3D line = CLine3D(pStart, pEnd);\par
00080         {\cf20 // calc distance}\par
00081         dist = itr->distanceTo(line);\par
00082         {\cf19 if} (dist > maxDist) \{\par
00083             maxDist = dist;\par
00084             maxItr = itr;\par
00085         \}\par
00086     \}\par
00087 \par
00088     {\cf19 if} (maxDist <= maxDistance) \{\par
00089 \par
00090         segment.erase((++startItr), endItr);        {\cf20 // Punkt l\'F6schen}\par
00091         {\cf19 return};\par
00092     \}\par
00093 \par
00094     {\cf20 /*  Douglas Peucker erneut aufrufen */}\par
00095     douglasPeuckerRecursive(segment, startItr, maxItr);\par
00096     douglasPeuckerRecursive(segment, maxItr, endItr);\par
00097 \}\par
}
{
\ql
Benutzt {\b douglasPeuckerRecursive()}, {\b maxDistance}, {\b CInputPoint3D::setEulerMatrix()}, {\b CInputPoint3D::setTime()}, {\b CPoint3D::setX()}, {\b CPoint3D::setY()} und {\b CPoint3D::setZ()}.}\par
{
\ql
Wird benutzt von {\b approx()} und {\b douglasPeuckerRecursive()}.}\par
}
{\xe \v getmaxDistance\:CSegmentApproximator}
{\xe \v CSegmentApproximator\:getmaxDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CSegmentApproximator::getmaxDistance ()}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt die maximale Abweichung zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
maxDistanceSource double \par
}}}{
Definiert in Zeile {\b 44} der Datei {\b SegmentApproximator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00045 \{\par
00046     {\cf19 return} maxDistance;     {\cf20 // Rueckgabe von maxDistance}\par
00047 \}\par
}
{
\ql
Benutzt {\b maxDistance}.}\par
}
{\xe \v getSegmentsApproxVector\:CSegmentApproximator}
{\xe \v CSegmentApproximator\:getSegmentsApproxVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< list< {\b CInputPoint3D} > > & CSegmentApproximator::getSegmentsApproxVector ()}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gibt den bereinigten Pfad zur\'FCck. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
R\'FCckgabe\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
vector<list<CInputPoint3D>>& \par
}}}{
Definiert in Zeile {\b 49} der Datei {\b SegmentApproximator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00050 \{\par
00051     {\cf19 return} segmentsApprox;      {\cf20 // Rueckgabe der Segmente}\par
00052 \}\par
}
{
\ql
Benutzt {\b segmentsApprox}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\xe \v setmaxDistance\:CSegmentApproximator}
{\xe \v CSegmentApproximator\:setmaxDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSegmentApproximator::setmaxDistance (double  {\i maxDistanceSource})}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt die maximale Abweichung. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameter\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i maxDistanceSource} \cell }{double \cell }
{\row }
}
}{
Definiert in Zeile {\b 39} der Datei {\b SegmentApproximator.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00040 \{\par
00041     maxDistance = maxDistanceSource;        {\cf20 // setze maxDistance}\par
00042 \}\par
}
{
\ql
Benutzt {\b maxDistance}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v maxDistance\:CSegmentApproximator}
{\xe \v CSegmentApproximator\:maxDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CSegmentApproximator::maxDistance{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Einstellbare Distanz f\'FCr den Douglas-Peuker-Algorithmus \par
}{
Definiert in Zeile {\b 67} der Datei {\b SegmentApproximator.h}.}\par
{
\ql
Wird benutzt von {\b douglasPeuckerRecursive()}, {\b getmaxDistance()} und {\b setmaxDistance()}.}\par
}
{\xe \v segmentsApprox\:CSegmentApproximator}
{\xe \v CSegmentApproximator\:segmentsApprox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<list<{\b CInputPoint3D}> > CSegmentApproximator::segmentsApprox{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bereinigten Pfad \par
}{
Definiert in Zeile {\b 63} der Datei {\b SegmentApproximator.h}.}\par
{
\ql
Wird benutzt von {\b approx()} und {\b getSegmentsApproxVector()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b SegmentApproximator.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b SegmentApproximator.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GUI Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v GUI}
{\xe \v GUI}
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
\par
{
{\f2 #include <GUI.h>}}\par
Klassendiagramm f\'FCr GUI:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_g_u_i.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GUI} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~GUI} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calculate} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInputPath} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOutputPath} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDP} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMean} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b activateSpeed} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSpeed} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b activateOrientation} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOrientation} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b activateOffset} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOffset} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b activateLogging} (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Ui::GUIClass} {\b ui}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b inputPathUI}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b outputPathUI}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dpTolerance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b meanLength}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CInputParameter} {\b inputParameter}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definiert in Zeile {\b 11} der Datei {\b GUI.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Beschreibung der Konstruktoren und Destruktoren\par
\pard\plain 
{\xe \v GUI\:GUI}
{\xe \v GUI\:GUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GUI::GUI (QWidget *  {\i parent} = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 9} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00010     : QMainWindow(parent)\par
00011 \{\par
00012     ui.setupUi({\cf17 this});\par
00013 \par
00014     {\cf20 //Dateioperationen und Anzeige}\par
00015     inputPathUI = {\cf22 ""};\par
00016     ui.pathInput->setText(inputPathUI);\par
00017     outputPathUI = {\cf22 ""};\par
00018     ui.pathOutput->setText(outputPathUI);\par
00019 \par
00020     connect(ui.pushOutput, &QPushButton::clicked, {\cf17 this}, &GUI::setOutputPath);\par
00021     connect(ui.pushInput, &QPushButton::clicked, {\cf17 this}, &GUI::setInputPath);\par
00022 \par
00023     {\cf20 //Zwingende Einstellwerte}\par
00024     {\cf20 //Douglas-Peuker-Toleranz}\par
00025     ui.dpToleranz->setRange(1, 100);\par
00026     ui.dpToleranz->setSingleStep(1);\par
00027     ui.dpToleranz->setValue(40);\par
00028     connect(ui.dpToleranz, &QSpinBox::valueChanged, {\cf17 this}, &GUI::setDP);\par
00029 \par
00030     {\cf20 //Fenster f\'FCr gleitenden Mittelwert}\par
00031     ui.meanLength->setRange(3, 500);\par
00032     ui.meanLength->setSingleStep(1);\par
00033     ui.meanLength->setValue(50);\par
00034     connect(ui.meanLength, &QSpinBox::valueChanged, {\cf17 this}, &GUI::setMean);\par
00035 \par
00036     {\cf20 //Geschwindigkeit}\par
00037     connect(ui.bSpeed, &QCheckBox::clicked, {\cf17 this}, &GUI::activateSpeed);\par
00038     ui.speed->setRange(0.01, 2);\par
00039     ui.speed->setSingleStep(0.01);\par
00040     ui.speed->setValue(1);\par
00041     connect(ui.speed, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setSpeed);\par
00042 \par
00043     {\cf20 //Ausrichtung}\par
00044     connect(ui.bManOrientation, &QCheckBox::clicked, {\cf17 this}, &GUI::activateOrientation);\par
00045     ui.AValue->setRange(-180, 180);\par
00046     ui.AValue->setSingleStep(5);\par
00047     ui.AValue->setValue(0);\par
00048     connect(ui.AValue, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOrientation);\par
00049 \par
00050     ui.BValue->setRange(-180, 180);\par
00051     ui.BValue->setSingleStep(5);\par
00052     ui.BValue->setValue(90);\par
00053     connect(ui.BValue, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOrientation);\par
00054 \par
00055     ui.CValue->setRange(-180, 180);\par
00056     ui.CValue->setSingleStep(5);\par
00057     ui.CValue->setValue(0);\par
00058     connect(ui.CValue, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOrientation);\par
00059 \par
00060     {\cf20 //Offset}\par
00061     connect(ui.bOffset, &QCheckBox::clicked, {\cf17 this}, &GUI::activateOffset);\par
00062     ui.offsetX->setRange(-400, 400);\par
00063     ui.offsetX->setSingleStep(10);\par
00064     ui.offsetX->setValue(0);\par
00065     connect(ui.offsetX, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOffset);\par
00066 \par
00067     ui.offsetY->setRange(-400, 400);\par
00068     ui.offsetY->setSingleStep(10);\par
00069     ui.offsetY->setValue(0);\par
00070     connect(ui.offsetY, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOffset);\par
00071 \par
00072     ui.offsetZ->setRange(-400, 400);\par
00073     ui.offsetZ->setSingleStep(10);\par
00074     ui.offsetZ->setValue(0);\par
00075     connect(ui.offsetZ, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOffset);\par
00076 \par
00077     {\cf20 //Logging}\par
00078     ui.bLogging->setChecked({\cf17 true});\par
00079     inputParameter.setOffset(0, 0, 0, {\cf17 false});\par
00080     connect(ui.bLogging, &QCheckBox::clicked, {\cf17 this}, &GUI::activateLogging);\par
00081 \par
00082     connect(ui.startCalculation, &QPushButton::clicked, {\cf17 this}, &GUI::calculate);\par
00083 \}\par
}
{
\ql
Benutzt {\b activateLogging()}, {\b activateOffset()}, {\b activateOrientation()}, {\b activateSpeed()}, {\b Ui_GUIClass::AValue}, {\b Ui_GUIClass::bLogging}, {\b Ui_GUIClass::bManOrientation}, {\b Ui_GUIClass::bOffset}, {\b Ui_GUIClass::bSpeed}, {\b Ui_GUIClass::BValue}, {\b calculate()}, {\b Ui_GUIClass::CValue}, {\b Ui_GUIClass::dpToleranz}, {\b inputParameter}, {\b inputPathUI}, {\b Ui_GUIClass::meanLength}, {\b Ui_GUIClass::offsetX}, {\b Ui_GUIClass::offsetY}, {\b Ui_GUIClass::offsetZ}, {\b outputPathUI}, {\b Ui_GUIClass::pathInput}, {\b Ui_GUIClass::pathOutput}, {\b Ui_GUIClass::pushInput}, {\b Ui_GUIClass::pushOutput}, {\b setDP()}, {\b setInputPath()}, {\b setMean()}, {\b CInputParameter::setOffset()}, {\b setOffset()}, {\b setOrientation()}, {\b setOutputPath()}, {\b setSpeed()}, {\b Ui_GUIClass::setupUi()}, {\b Ui_GUIClass::speed}, {\b Ui_GUIClass::startCalculation} und {\b ui}.}\par
}
{\xe \v ~GUI\:GUI}
{\xe \v GUI\:~GUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GUI::~GUI ()}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 85} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00086 \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v activateLogging\:GUI}
{\xe \v GUI\:activateLogging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::activateLogging (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 88} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00089 \{\par
00090     inputParameter.setLogging(ui.bLogging->isChecked());\par
00091 \}\par
}
{
\ql
Benutzt {\b Ui_GUIClass::bLogging}, {\b inputParameter}, {\b CInputParameter::setLogging()} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v activateOffset\:GUI}
{\xe \v GUI\:activateOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::activateOffset (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 99} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00100 \{\par
00101     {\cf19 if} (ui.bOffset->isChecked())\par
00102     \{\par
00103         ui.offset->setEnabled({\cf17 true});\par
00104         ui.offset->setStyleSheet({\cf22 "background-color:  rgb(67, 72, 91); color: rgb(3, 8, 14); border: 1px solid black;"});\par
00105     \}\par
00106     {\cf19 else}\par
00107     \{\par
00108         ui.offset->setEnabled({\cf17 false});\par
00109         ui.offset->setStyleSheet({\cf22 "background-color: rgb(210,211,218); color: rgb(117,125,149)"});\par
00110         ui.offsetX->setValue(0);\par
00111         ui.offsetY->setValue(0);\par
00112         ui.offsetZ->setValue(0);\par
00113         inputParameter.setOffset(0, 0, 0, {\cf17 false});\par
00114     \}\par
00115 \}\par
}
{
\ql
Benutzt {\b Ui_GUIClass::bOffset}, {\b inputParameter}, {\b Ui_GUIClass::offset}, {\b Ui_GUIClass::offsetX}, {\b Ui_GUIClass::offsetY}, {\b Ui_GUIClass::offsetZ}, {\b CInputParameter::setOffset()} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v activateOrientation\:GUI}
{\xe \v GUI\:activateOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::activateOrientation (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 123} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00124 \{\par
00125     {\cf19 if} (ui.bManOrientation->isChecked())\par
00126     \{\par
00127         ui.orientation->setEnabled({\cf17 true});\par
00128         ui.orientation->setStyleSheet({\cf22 "background-color:  rgb(67, 72, 91); color: rgb(3, 8, 14); border: 1px solid black;"});\par
00129     \}\par
00130     {\cf19 else}\par
00131     \{\par
00132         ui.orientation->setEnabled({\cf17 false});\par
00133         ui.orientation->setStyleSheet({\cf22 "background-color: rgb(210,211,218); color: rgb(117,125,149)"});\par
00134     \}\par
00135 \}\par
}
{
\ql
Benutzt {\b Ui_GUIClass::bManOrientation}, {\b Ui_GUIClass::orientation} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v activateSpeed\:GUI}
{\xe \v GUI\:activateSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::activateSpeed (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 142} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00143 \{\par
00144     {\cf19 if} (ui.bSpeed->isChecked())\par
00145     \{\par
00146         ui.speed_2->setEnabled({\cf17 true});\par
00147         ui.speed_2->setStyleSheet({\cf22 "background-color:  rgb(67, 72, 91); color: rgb(3, 8, 14); border: 1px solid black; "});\par
00148     \}\par
00149     {\cf19 else}\par
00150     \{\par
00151         ui.speed_2->setEnabled({\cf17 false});\par
00152         ui.speed_2->setStyleSheet({\cf22 "background-color: rgb(210,211,218); color: rgb(117,125,149)"});\par
00153     \}\par
00154 \}\par
}
{
\ql
Benutzt {\b Ui_GUIClass::bSpeed}, {\b Ui_GUIClass::speed_2} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v calculate\:GUI}
{\xe \v GUI\:calculate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::calculate (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 179} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00180 \{\par
00181 \par
00182     {\cf19 if} (inputPathUI.isEmpty() || outputPathUI.isEmpty())\par
00183     \{\par
00184         QMessageBox messageBox;\par
00185         messageBox.critical(0, {\cf22 "Error"}, {\cf22 "Keine Datei ausgew\'E4hlt!"});\par
00186         messageBox.setFixedSize(500, 200);\par
00187         {\cf19 return};\par
00188     \}\par
00189 \par
00190     {\cf19 try}\par
00191     \{\par
00192         {\cf18 string} outputPath = outputPathUI.toUtf8().constData();\par
00193         {\cf18 string} inputPath = inputPathUI.toUtf8().constData();\par
00194         ui.textBrowser->clear();\par
00195 \par
00196         {\cf20 //logging Initialisieren}\par
00197         CLogging logging(outputPath, inputParameter.getLoggingManual());\par
00198 \par
00199         {\cf20 //read Data}\par
00200         inputParameter.openFile(inputPath);\par
00201         ui.textBrowser->insertPlainText({\cf22 "Datei eingelesen\\n"});\par
00202 \par
00203         {\cf20 //moving Average}\par
00204 \par
00205         CMeanFilter meanFilter;\par
00206         meanFilter.setWindowSize(meanLength);\par
00207         meanFilter.mean(inputParameter.getPath(), logging);\par
00208         ui.textBrowser->insertPlainText({\cf22 "Gleitender Mittelwert berechnet\\n"});\par
00209 \par
00210         {\cf20 // Douglas-Peuker Algorithm}\par
00211 \par
00212         CSegmentApproximator segmentApproximator;\par
00213         segmentApproximator.setmaxDistance(dpTolerance);\par
00214         segmentApproximator.approx(meanFilter.getPath(), logging);\par
00215         ui.textBrowser->insertPlainText({\cf22 "Douglas-Peuker-Algorithmus berechnet\\n"});\par
00216 \par
00217         {\cf20 // Puts the Segments together to one path}\par
00218 \par
00219         CPathBuilder pathBuilder;\par
00220         pathBuilder.createPath(segmentApproximator.getSegmentsApproxVector(), logging);\par
00221         ui.textBrowser->insertPlainText({\cf22 "Pfad zusammengesetzt\\n"});\par
00222 \par
00223         {\cf20 // Calculates Speed, Angle and generates the Output Data}\par
00224 \par
00225         CRobCodeGenerator codeGenerator(inputParameter);\par
00226         codeGenerator.generateRobCode(pathBuilder.getPath(), outputPath, {\cf22 "robCode.src"});\par
00227         ui.textBrowser->insertPlainText({\cf22 "Datei erstellt\\n"});;\par
00228     \}\par
00229 \par
00230     {\cf19 catch} (exception& e)\par
00231     \{\par
00232         cerr << e.what() << {\cf22 "\\n"};\par
00233     \}\par
00234 \}\par
}
{
\ql
Benutzt {\b CSegmentApproximator::approx()}, {\b CPathBuilder::createPath()}, {\b dpTolerance}, {\b CRobCodeGenerator::generateRobCode()}, {\b CInputParameter::getLoggingManual()}, {\b CInputParameter::getPath()}, {\b CMeanFilter::getPath()}, {\b CPathBuilder::getPath()}, {\b CSegmentApproximator::getSegmentsApproxVector()}, {\b inputParameter}, {\b inputPathUI}, {\b CMeanFilter::mean()}, {\b meanLength}, {\b CInputParameter::openFile()}, {\b outputPathUI}, {\b CSegmentApproximator::setmaxDistance()}, {\b CMeanFilter::setWindowSize()}, {\b Ui_GUIClass::textBrowser} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v setDP\:GUI}
{\xe \v GUI\:setDP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::setDP (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 162} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00163 \{\par
00164     dpTolerance = ui.dpToleranz->value();\par
00165 \}\par
}
{
\ql
Benutzt {\b dpTolerance}, {\b Ui_GUIClass::dpToleranz} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v setInputPath\:GUI}
{\xe \v GUI\:setInputPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::setInputPath (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 167} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00168 \{\par
00169     inputPathUI = QFileDialog::getOpenFileName({\cf17 this});\par
00170     ui.pathInput->setText(inputPathUI);\par
00171 \}\par
}
{
\ql
Benutzt {\b inputPathUI}, {\b Ui_GUIClass::pathInput} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v setMean\:GUI}
{\xe \v GUI\:setMean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::setMean (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 156} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00157 \{\par
00158     meanLength = ui.meanLength->value();\par
00159 \}\par
}
{
\ql
Benutzt {\b meanLength}, {\b Ui_GUIClass::meanLength} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v setOffset\:GUI}
{\xe \v GUI\:setOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::setOffset (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 93} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00094 \{\par
00095     inputParameter.setOffset(ui.offsetX->value(), ui.offsetY->value(), ui.offsetZ->value(),\par
00096         ui.bOffset->isChecked());\par
00097 \}\par
}
{
\ql
Benutzt {\b Ui_GUIClass::bOffset}, {\b inputParameter}, {\b Ui_GUIClass::offsetX}, {\b Ui_GUIClass::offsetY}, {\b Ui_GUIClass::offsetZ}, {\b CInputParameter::setOffset()} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v setOrientation\:GUI}
{\xe \v GUI\:setOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::setOrientation (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 117} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00118 \{\par
00119     inputParameter.setOrientation(ui.AValue->value(), ui.BValue->value(), ui.CValue->value(),\par
00120         ui.bManOrientation->isChecked());\par
00121 \}\par
}
{
\ql
Benutzt {\b Ui_GUIClass::AValue}, {\b Ui_GUIClass::bManOrientation}, {\b Ui_GUIClass::BValue}, {\b Ui_GUIClass::CValue}, {\b inputParameter}, {\b CInputParameter::setOrientation()} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v setOutputPath\:GUI}
{\xe \v GUI\:setOutputPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::setOutputPath (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 173} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00174 \{\par
00175     outputPathUI = QFileDialog::getExistingDirectory({\cf17 this});\par
00176     ui.pathOutput->setText(outputPathUI);\par
00177 \}\par
}
{
\ql
Benutzt {\b outputPathUI}, {\b Ui_GUIClass::pathOutput} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\xe \v setSpeed\:GUI}
{\xe \v GUI\:setSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GUI::setSpeed (void ){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 137} der Datei {\b GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00138 \{\par
00139     inputParameter.setSpeed(ui.speed->value(), ui.bSpeed->isChecked());\par
00140 \}\par
}
{
\ql
Benutzt {\b Ui_GUIClass::bSpeed}, {\b inputParameter}, {\b CInputParameter::setSpeed()}, {\b Ui_GUIClass::speed} und {\b ui}.}\par
{
\ql
Wird benutzt von {\b GUI()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v dpTolerance\:GUI}
{\xe \v GUI\:dpTolerance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GUI::dpTolerance{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 40} der Datei {\b GUI.h}.}\par
{
\ql
Wird benutzt von {\b calculate()} und {\b setDP()}.}\par
}
{\xe \v inputParameter\:GUI}
{\xe \v GUI\:inputParameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CInputParameter} GUI::inputParameter{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 42} der Datei {\b GUI.h}.}\par
{
\ql
Wird benutzt von {\b activateLogging()}, {\b activateOffset()}, {\b calculate()}, {\b GUI()}, {\b setOffset()}, {\b setOrientation()} und {\b setSpeed()}.}\par
}
{\xe \v inputPathUI\:GUI}
{\xe \v GUI\:inputPathUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString GUI::inputPathUI{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 38} der Datei {\b GUI.h}.}\par
{
\ql
Wird benutzt von {\b calculate()}, {\b GUI()} und {\b setInputPath()}.}\par
}
{\xe \v meanLength\:GUI}
{\xe \v GUI\:meanLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GUI::meanLength{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 41} der Datei {\b GUI.h}.}\par
{
\ql
Wird benutzt von {\b calculate()} und {\b setMean()}.}\par
}
{\xe \v outputPathUI\:GUI}
{\xe \v GUI\:outputPathUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString GUI::outputPathUI{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 39} der Datei {\b GUI.h}.}\par
{
\ql
Wird benutzt von {\b calculate()}, {\b GUI()} und {\b setOutputPath()}.}\par
}
{\xe \v ui\:GUI}
{\xe \v GUI\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Ui::GUIClass} GUI::ui{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 37} der Datei {\b GUI.h}.}\par
{
\ql
Wird benutzt von {\b activateLogging()}, {\b activateOffset()}, {\b activateOrientation()}, {\b activateSpeed()}, {\b calculate()}, {\b GUI()}, {\b setDP()}, {\b setInputPath()}, {\b setMean()}, {\b setOffset()}, {\b setOrientation()}, {\b setOutputPath()} und {\b setSpeed()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
header/{\b GUI.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
source/{\b GUI.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ui::GUIClass Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v Ui::GUIClass}
{\xe \v Ui::GUIClass}
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\par
{
{\f2 #include <ui_GUI.h>}}\par
Klassendiagramm f\'FCr Ui::GUIClass:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ui_1_1_g_u_i_class.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Weitere Geerbte Elemente\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D6ffentliche Methoden geerbt von {\b Ui_GUIClass}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupUi} (QMainWindow *GUIClass)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b retranslateUi} (QMainWindow *GUIClass)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupUi} (QMainWindow *GUIClass)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b retranslateUi} (QMainWindow *GUIClass)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D6ffentliche Attribute geerbt von {\b Ui_GUIClass}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b centralWidget}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b pathInput}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFrame * {\b frame}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b speed_2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b speed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_5}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCheckBox * {\b bSpeed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b orientation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_10}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_11}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_12}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b AValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b BValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b CValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCheckBox * {\b bManOrientation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSpinBox * {\b meanLength}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_dp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSpinBox * {\b dpToleranz}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPushButton * {\b pushInput}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPushButton * {\b pushOutput}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QTextBrowser * {\b textBrowser}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPushButton * {\b startCalculation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b pathOutput}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCheckBox * {\b bLogging}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCheckBox * {\b bOffset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_13}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_14}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_15}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b offsetX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b offsetY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b offsetZ}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definiert in Zeile {\b 291} der Datei {\b ui_GUI.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Datei:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
x64/Debug/uic/{\b ui_GUI.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t Strukturreferenz\par \pard\plain 
{\tc\tcl2 \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b offsetsAndSizes} [22]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata0} [4]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata1} [10]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata2} [1]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata3} [13]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata4} [14]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata5} [6]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata6} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata7} [14]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata8} [9]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata9} [20]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata10} [15]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata11} [15]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata12} [10]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata13} [16]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definiert in Zeile {\b 55} der Datei {\b moc_GUI.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v offsetsAndSizes\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:offsetsAndSizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::offsetsAndSizes}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 56} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata0\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata0}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 57} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata1\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata1}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 58} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata10\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata10}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 67} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata11\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata11[15]}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 71} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata12\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata12[10]}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 72} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata13\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata13[16]}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 73} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata2\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata2}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 59} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata3\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata3}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 60} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata4\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata4}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 61} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata5\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata5}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 62} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata6\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata6}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 63} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata7\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata7}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 64} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata8\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata8}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 65} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v stringdata9\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t\:stringdata9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t::stringdata9}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 66} der Datei {\b moc_GUI.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Struktur wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
x64/Debug/moc/{\b moc_GUI.cpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
x64/Release/moc/{\b moc_GUI.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t Strukturreferenz\par \pard\plain 
{\tc\tcl2 \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t}
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint {\b offsetsAndSizes} [6]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata0} [7]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata1} [7]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringdata2} [6]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definiert in Zeile {\b 48} der Datei {\b moc_switch.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v offsetsAndSizes\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t\:offsetsAndSizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t::offsetsAndSizes}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 49} der Datei {\b moc_switch.cpp}.}\par
}
{\xe \v stringdata0\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t\:stringdata0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t::stringdata0}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 50} der Datei {\b moc_switch.cpp}.}\par
}
{\xe \v stringdata1\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t\:stringdata1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t::stringdata1}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 51} der Datei {\b moc_switch.cpp}.}\par
}
{\xe \v stringdata2\:QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t}
{\xe \v QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t\:stringdata2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t::stringdata2}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 52} der Datei {\b moc_switch.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Struktur wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
x64/Debug/moc/{\b moc_switch.cpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
x64/Release/moc/{\b moc_switch.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ui_GUIClass Klassenreferenz\par \pard\plain 
{\tc\tcl2 \v Ui_GUIClass}
{\xe \v Ui_GUIClass}
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
\par
{
{\f2 #include <ui_GUI.h>}}\par
Klassendiagramm f\'FCr Ui_GUIClass:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ui___g_u_i_class.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Methoden\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupUi} (QMainWindow *GUIClass)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b retranslateUi} (QMainWindow *GUIClass)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupUi} (QMainWindow *GUIClass)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b retranslateUi} (QMainWindow *GUIClass)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D6ffentliche Attribute\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b centralWidget}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b pathInput}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFrame * {\b frame}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b speed_2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b speed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_5}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCheckBox * {\b bSpeed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b orientation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_10}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_11}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_12}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b AValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b BValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b CValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCheckBox * {\b bManOrientation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSpinBox * {\b meanLength}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_dp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSpinBox * {\b dpToleranz}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPushButton * {\b pushInput}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPushButton * {\b pushOutput}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QTextBrowser * {\b textBrowser}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPushButton * {\b startCalculation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b pathOutput}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCheckBox * {\b bLogging}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCheckBox * {\b bOffset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_13}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_14}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLabel * {\b label_15}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b offsetX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b offsetY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDoubleSpinBox * {\b offsetZ}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definiert in Zeile {\b 26} der Datei {\b ui_GUI.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Elementfunktionen\par
\pard\plain 
{\xe \v retranslateUi\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:retranslateUi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Ui_GUIClass::retranslateUi (QMainWindow *  {\i GUIClass}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 267} der Datei {\b ui_GUI.h}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00268     \{\par
00269         GUIClass->setWindowTitle(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Roboter Pfad Editor"}, {\cf17 nullptr}));\par
00270         pathInput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Eingabedatei"}, {\cf17 nullptr}));\par
00271         speed->setSuffix(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 " m/s"}, {\cf17 nullptr}));\par
00272         label_5->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Geschwindigkeit"}, {\cf17 nullptr}));\par
00273         bSpeed->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Manuelle Geschwindigkeit"}, {\cf17 nullptr}));\par
00274         label_10->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Phi"}, {\cf17 nullptr}));\par
00275         label_11->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Theta"}, {\cf17 nullptr}));\par
00276         label_12->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Psi"}, {\cf17 nullptr}));\par
00277         bManOrientation->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Manuelle Ausrichtung"}, {\cf17 nullptr}));\par
00278         label_dp->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Douglas-Peuker-Toleranz"}, {\cf17 nullptr}));\par
00279         label_4->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Filterl\\303\\244nge gleitender Mittelwert"}, {\cf17 nullptr}));\par
00280         dpToleranz->setSpecialValueText(QString());\par
00281         dpToleranz->setSuffix(QString());\par
00282         pushInput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Datei w\\303\\244hlen"}, {\cf17 nullptr}));\par
00283         pushOutput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Pfad w\\303\\244hlen"}, {\cf17 nullptr}));\par
00284         startCalculation->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Datei erstellen"}, {\cf17 nullptr}));\par
00285         pathOutput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Ausgabeordner"}, {\cf17 nullptr}));\par
00286     \} {\cf20 // retranslateUi}\par
}
{
\ql
Benutzt {\b bManOrientation}, {\b bSpeed}, {\b dpToleranz}, {\b label_10}, {\b label_11}, {\b label_12}, {\b label_4}, {\b label_5}, {\b label_dp}, {\b pathInput}, {\b pathOutput}, {\b pushInput}, {\b pushOutput}, {\b speed} und {\b startCalculation}.}\par
{
\ql
Wird benutzt von {\b setupUi()}.}\par
}
{\xe \v retranslateUi\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:retranslateUi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Ui_GUIClass::retranslateUi (QMainWindow *  {\i GUIClass}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 329} der Datei {\b ui_GUI.h}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00330     \{\par
00331         GUIClass->setWindowTitle(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Roboter Pfad Editor"}, {\cf17 nullptr}));\par
00332         pathInput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Eingabedatei"}, {\cf17 nullptr}));\par
00333         speed->setSuffix(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 " m/s"}, {\cf17 nullptr}));\par
00334         label_5->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Geschwindigkeit"}, {\cf17 nullptr}));\par
00335         bSpeed->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Manuelle Geschwindigkeit"}, {\cf17 nullptr}));\par
00336         label_10->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Phi"}, {\cf17 nullptr}));\par
00337         label_11->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Theta"}, {\cf17 nullptr}));\par
00338         label_12->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Psi"}, {\cf17 nullptr}));\par
00339         bManOrientation->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Manuelle Ausrichtung"}, {\cf17 nullptr}));\par
00340         label_dp->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Douglas-Peuker-Toleranz"}, {\cf17 nullptr}));\par
00341         label_4->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Filterl\\303\\244nge gleitender Mittelwert"}, {\cf17 nullptr}));\par
00342         dpToleranz->setSpecialValueText(QString());\par
00343         dpToleranz->setSuffix(QString());\par
00344         bLogging->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Detailliertes Logging"}, {\cf17 nullptr}));\par
00345         bOffset->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Einstellung Offset"}, {\cf17 nullptr}));\par
00346         label_13->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "X"}, {\cf17 nullptr}));\par
00347         label_14->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Y"}, {\cf17 nullptr}));\par
00348         label_15->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Z"}, {\cf17 nullptr}));\par
00349         pushInput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Datei w\\303\\244hlen"}, {\cf17 nullptr}));\par
00350         pushOutput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Pfad w\\303\\244hlen"}, {\cf17 nullptr}));\par
00351         startCalculation->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Datei erstellen"}, {\cf17 nullptr}));\par
00352         pathOutput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Ausgabeordner"}, {\cf17 nullptr}));\par
00353     \} {\cf20 // retranslateUi}\par
}
{
\ql
Benutzt {\b bLogging}, {\b bManOrientation}, {\b bOffset}, {\b bSpeed}, {\b dpToleranz}, {\b label_10}, {\b label_11}, {\b label_12}, {\b label_13}, {\b label_14}, {\b label_15}, {\b label_4}, {\b label_5}, {\b label_dp}, {\b pathInput}, {\b pathOutput}, {\b pushInput}, {\b pushOutput}, {\b speed} und {\b startCalculation}.}\par
}
{\xe \v setupUi\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:setupUi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Ui_GUIClass::setupUi (QMainWindow *  {\i GUIClass}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 54} der Datei {\b ui_GUI.h}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00055     \{\par
00056         {\cf19 if} (GUIClass->objectName().isEmpty())\par
00057             GUIClass->setObjectName({\cf22 "GUIClass"});\par
00058         GUIClass->resize(355, 530);\par
00059         QSizePolicy sizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);\par
00060         sizePolicy.setHorizontalStretch(0);\par
00061         sizePolicy.setVerticalStretch(0);\par
00062         sizePolicy.setHeightForWidth(GUIClass->sizePolicy().hasHeightForWidth());\par
00063         GUIClass->setSizePolicy(sizePolicy);\par
00064         GUIClass->setMinimumSize(QSize(355, 530));\par
00065         GUIClass->setMaximumSize(QSize(355, 720));\par
00066         QFont font;\par
00067         font.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00068         GUIClass->setFont(font);\par
00069         GUIClass->setAnimated({\cf17 true});\par
00070         GUIClass->setTabShape(QTabWidget::Rounded);\par
00071         GUIClass->setUnifiedTitleAndToolBarOnMac({\cf17 false});\par
00072         centralWidget = {\cf17 new} QWidget(GUIClass);\par
00073         centralWidget->setObjectName({\cf22 "centralWidget"});\par
00074         QFont font1;\par
00075         font1.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00076         font1.setBold({\cf17 false});\par
00077         font1.setItalic({\cf17 false});\par
00078         centralWidget->setFont(font1);\par
00079         centralWidget->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(3, 8, 14);\\n"}\par
00080 {\cf22 "color: rgb(3, 8, 14)\\n"}\par
00081 {\cf22 ""}));\par
00082         pathInput = {\cf17 new} QLabel(centralWidget);\par
00083         pathInput->setObjectName({\cf22 "pathInput"});\par
00084         pathInput->setGeometry(QRect(10, 10, 331, 31));\par
00085         pathInput->setFont(font1);\par
00086         pathInput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00087 {\cf22 "border-radius: 10px;\\n"}\par
00088 {\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00089 {\cf22 "color: rgb(3, 8, 14);"}));\par
00090         frame = {\cf17 new} QFrame(centralWidget);\par
00091         frame->setObjectName({\cf22 "frame"});\par
00092         frame->setGeometry(QRect(10, 90, 331, 321));\par
00093         frame->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00094 {\cf22 "border-radius: 10px;\\n"}\par
00095 {\cf22 "background-color: rgb(117, 125, 149)"}));\par
00096         frame->setFrameShape(QFrame::Box);\par
00097         frame->setFrameShadow(QFrame::Raised);\par
00098         frame->setLineWidth(1);\par
00099         speed_2 = {\cf17 new} QWidget(frame);\par
00100         speed_2->setObjectName({\cf22 "speed_2"});\par
00101         speed_2->setEnabled({\cf17 false});\par
00102         speed_2->setGeometry(QRect(10, 110, 301, 41));\par
00103         QFont font2;\par
00104         font2.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00105         font2.setBold({\cf17 true});\par
00106         speed_2->setFont(font2);\par
00107         speed_2->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210,211,218);\\n"}\par
00108 {\cf22 "color: rgb(117, 125, 149);\\n"}\par
00109 {\cf22 "border: 1px solid rgb(67, 72, 91); "}));\par
00110         speed = {\cf17 new} QDoubleSpinBox(speed_2);\par
00111         speed->setObjectName({\cf22 "speed"});\par
00112         speed->setGeometry(QRect(159, 12, 136, 20));\par
00113         speed->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00114 {\cf22 "\\n"}\par
00115 {\cf22 "border-radius: 6px;"}));\par
00116         speed->setAlignment(Qt::AlignCenter);\par
00117         label_5 = {\cf17 new} QLabel(speed_2);\par
00118         label_5->setObjectName({\cf22 "label_5"});\par
00119         label_5->setGeometry(QRect(11, 12, 93, 16));\par
00120         label_5->setFont(font1);\par
00121         label_5->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00122         bSpeed = {\cf17 new} QCheckBox(frame);\par
00123         bSpeed->setObjectName({\cf22 "bSpeed"});\par
00124         bSpeed->setGeometry(QRect(10, 80, 171, 20));\par
00125         bSpeed->setFont(font1);\par
00126         bSpeed->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00127 {\cf22 "border: 0px"}));\par
00128         orientation = {\cf17 new} QWidget(frame);\par
00129         orientation->setObjectName({\cf22 "orientation"});\par
00130         orientation->setEnabled({\cf17 false});\par
00131         orientation->setGeometry(QRect(10, 190, 301, 111));\par
00132         orientation->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210,211,218);\\n"}\par
00133 {\cf22 "color: rgb(117, 125, 149);\\n"}\par
00134 {\cf22 "border: 1px solid rgb(67, 72, 91); "}));\par
00135         label_10 = {\cf17 new} QLabel(orientation);\par
00136         label_10->setObjectName({\cf22 "label_10"});\par
00137         label_10->setGeometry(QRect(10, 15, 18, 16));\par
00138         label_10->setFont(font1);\par
00139         label_10->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00140         label_11 = {\cf17 new} QLabel(orientation);\par
00141         label_11->setObjectName({\cf22 "label_11"});\par
00142         label_11->setGeometry(QRect(11, 47, 33, 16));\par
00143         label_11->setFont(font1);\par
00144         label_11->setStyleSheet(QString::fromUtf8({\cf22 "\\n"}\par
00145 {\cf22 "border: 0px"}));\par
00146         label_12 = {\cf17 new} QLabel(orientation);\par
00147         label_12->setObjectName({\cf22 "label_12"});\par
00148         label_12->setGeometry(QRect(11, 78, 17, 16));\par
00149         label_12->setFont(font1);\par
00150         label_12->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00151         AValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00152         AValue->setObjectName({\cf22 "AValue"});\par
00153         AValue->setGeometry(QRect(153, 15, 141, 20));\par
00154         AValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00155 {\cf22 "\\n"}\par
00156 {\cf22 "border-radius: 6px;"}));\par
00157         BValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00158         BValue->setObjectName({\cf22 "BValue"});\par
00159         BValue->setGeometry(QRect(154, 47, 141, 20));\par
00160         BValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00161 {\cf22 "\\n"}\par
00162 {\cf22 "border-radius: 6px;"}));\par
00163         CValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00164         CValue->setObjectName({\cf22 "CValue"});\par
00165         CValue->setGeometry(QRect(154, 78, 141, 20));\par
00166         CValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00167 {\cf22 "\\n"}\par
00168 {\cf22 "border-radius: 6px;"}));\par
00169         label_12->raise();\par
00170         label_10->raise();\par
00171         AValue->raise();\par
00172         BValue->raise();\par
00173         CValue->raise();\par
00174         label_11->raise();\par
00175         bManOrientation = {\cf17 new} QCheckBox(frame);\par
00176         bManOrientation->setObjectName({\cf22 "bManOrientation"});\par
00177         bManOrientation->setGeometry(QRect(10, 160, 151, 20));\par
00178         bManOrientation->setFont(font1);\par
00179         bManOrientation->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00180 {\cf22 "border: 0px"}));\par
00181         meanLength = {\cf17 new} QSpinBox(frame);\par
00182         meanLength->setObjectName({\cf22 "meanLength"});\par
00183         meanLength->setGeometry(QRect(198, 48, 116, 20));\par
00184         meanLength->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00185 {\cf22 "\\n"}\par
00186 {\cf22 "border-radius: 6px;"}));\par
00187         label_dp = {\cf17 new} QLabel(frame);\par
00188         label_dp->setObjectName({\cf22 "label_dp"});\par
00189         label_dp->setGeometry(QRect(12, 22, 144, 16));\par
00190         label_dp->setFont(font1);\par
00191         label_dp->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00192 {\cf22 "border: 0px"}));\par
00193         label_4 = {\cf17 new} QLabel(frame);\par
00194         label_4->setObjectName({\cf22 "label_4"});\par
00195         label_4->setGeometry(QRect(12, 48, 180, 16));\par
00196         label_4->setFont(font1);\par
00197         label_4->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00198 {\cf22 "border: 0px"}));\par
00199         dpToleranz = {\cf17 new} QSpinBox(frame);\par
00200         dpToleranz->setObjectName({\cf22 "dpToleranz"});\par
00201         dpToleranz->setGeometry(QRect(198, 22, 116, 20));\par
00202         dpToleranz->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00203 {\cf22 "\\n"}\par
00204 {\cf22 "border-radius: 6px;"}));\par
00205         dpToleranz->setFrame({\cf17 true});\par
00206         dpToleranz->setButtonSymbols(QAbstractSpinBox::UpDownArrows);\par
00207         dpToleranz->setAccelerated({\cf17 false});\par
00208         pushInput = {\cf17 new} QPushButton(centralWidget);\par
00209         pushInput->setObjectName({\cf22 "pushInput"});\par
00210         pushInput->setGeometry(QRect(240, 10, 101, 31));\par
00211         pushInput->setFont(font1);\par
00212         pushInput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00213 {\cf22 "border-radius: 10px;\\n"}\par
00214 {\cf22 "background-color: rgb(117, 125, 149);\\n"}\par
00215 {\cf22 "color: rgb(3, 8, 14);"}));\par
00216         pushOutput = {\cf17 new} QPushButton(centralWidget);\par
00217         pushOutput->setObjectName({\cf22 "pushOutput"});\par
00218         pushOutput->setGeometry(QRect(240, 50, 101, 31));\par
00219         pushOutput->setFont(font1);\par
00220         pushOutput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00221 {\cf22 "border-radius: 10px;\\n"}\par
00222 {\cf22 "background-color: rgb(117, 125, 149);\\n"}\par
00223 {\cf22 "color: rgb(3, 8, 14);"}));\par
00224         textBrowser = {\cf17 new} QTextBrowser(centralWidget);\par
00225         textBrowser->setObjectName({\cf22 "textBrowser"});\par
00226         textBrowser->setGeometry(QRect(0, 460, 355, 71));\par
00227         textBrowser->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00228 {\cf22 "border-radius: 0px"}));\par
00229         startCalculation = {\cf17 new} QPushButton(centralWidget);\par
00230         startCalculation->setObjectName({\cf22 "startCalculation"});\par
00231         startCalculation->setGeometry(QRect(10, 420, 331, 31));\par
00232         sizePolicy.setHeightForWidth(startCalculation->sizePolicy().hasHeightForWidth());\par
00233         startCalculation->setSizePolicy(sizePolicy);\par
00234         QFont font3;\par
00235         font3.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00236         font3.setPointSize(10);\par
00237         font3.setBold({\cf17 false});\par
00238         font3.setItalic({\cf17 false});\par
00239         startCalculation->setFont(font3);\par
00240         startCalculation->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black;\\n"}\par
00241 {\cf22 "border-radius: 10px;\\n"}\par
00242 {\cf22 "background-color: rgb(67, 72, 91);\\n"}\par
00243 {\cf22 "color: rgb(210, 211, 218)"}));\par
00244         pathOutput = {\cf17 new} QLabel(centralWidget);\par
00245         pathOutput->setObjectName({\cf22 "pathOutput"});\par
00246         pathOutput->setGeometry(QRect(10, 50, 331, 31));\par
00247         pathOutput->setFont(font1);\par
00248         pathOutput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00249 {\cf22 "border-radius: 10px;\\n"}\par
00250 {\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00251 {\cf22 "color: rgb(3, 8, 14);"}));\par
00252         pathOutput->setTextFormat(Qt::MarkdownText);\par
00253         GUIClass->setCentralWidget(centralWidget);\par
00254         pathInput->raise();\par
00255         frame->raise();\par
00256         textBrowser->raise();\par
00257         startCalculation->raise();\par
00258         pathOutput->raise();\par
00259         pushOutput->raise();\par
00260         pushInput->raise();\par
00261 \par
00262         retranslateUi(GUIClass);\par
00263 \par
00264         QMetaObject::connectSlotsByName(GUIClass);\par
00265     \} {\cf20 // setupUi}\par
}
{
\ql
Benutzt {\b AValue}, {\b bManOrientation}, {\b bSpeed}, {\b BValue}, {\b centralWidget}, {\b CValue}, {\b dpToleranz}, {\b frame}, {\b label_10}, {\b label_11}, {\b label_12}, {\b label_4}, {\b label_5}, {\b label_dp}, {\b meanLength}, {\b orientation}, {\b pathInput}, {\b pathOutput}, {\b pushInput}, {\b pushOutput}, {\b retranslateUi()}, {\b speed}, {\b speed_2}, {\b startCalculation} und {\b textBrowser}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}.}\par
}
{\xe \v setupUi\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:setupUi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Ui_GUIClass::setupUi (QMainWindow *  {\i GUIClass}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 63} der Datei {\b ui_GUI.h}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00064     \{\par
00065         {\cf19 if} (GUIClass->objectName().isEmpty())\par
00066             GUIClass->setObjectName({\cf22 "GUIClass"});\par
00067         GUIClass->resize(355, 700);\par
00068         QSizePolicy sizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);\par
00069         sizePolicy.setHorizontalStretch(0);\par
00070         sizePolicy.setVerticalStretch(0);\par
00071         sizePolicy.setHeightForWidth(GUIClass->sizePolicy().hasHeightForWidth());\par
00072         GUIClass->setSizePolicy(sizePolicy);\par
00073         GUIClass->setMinimumSize(QSize(355, 530));\par
00074         GUIClass->setMaximumSize(QSize(355, 700));\par
00075         QFont font;\par
00076         font.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00077         GUIClass->setFont(font);\par
00078         GUIClass->setAnimated({\cf17 true});\par
00079         GUIClass->setTabShape(QTabWidget::Rounded);\par
00080         GUIClass->setUnifiedTitleAndToolBarOnMac({\cf17 false});\par
00081         centralWidget = {\cf17 new} QWidget(GUIClass);\par
00082         centralWidget->setObjectName({\cf22 "centralWidget"});\par
00083         QFont font1;\par
00084         font1.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00085         font1.setBold({\cf17 false});\par
00086         font1.setItalic({\cf17 false});\par
00087         centralWidget->setFont(font1);\par
00088         centralWidget->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(3, 8, 14);\\n"}\par
00089 {\cf22 "color: rgb(3, 8, 14)\\n"}\par
00090 {\cf22 ""}));\par
00091         pathInput = {\cf17 new} QLabel(centralWidget);\par
00092         pathInput->setObjectName({\cf22 "pathInput"});\par
00093         pathInput->setGeometry(QRect(10, 10, 331, 31));\par
00094         pathInput->setFont(font1);\par
00095         pathInput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00096 {\cf22 "border-radius: 10px;\\n"}\par
00097 {\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00098 {\cf22 "color: rgb(3, 8, 14);"}));\par
00099         frame = {\cf17 new} QFrame(centralWidget);\par
00100         frame->setObjectName({\cf22 "frame"});\par
00101         frame->setGeometry(QRect(10, 90, 331, 491));\par
00102         frame->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00103 {\cf22 "border-radius: 10px;\\n"}\par
00104 {\cf22 "background-color: rgb(117, 125, 149)"}));\par
00105         frame->setFrameShape(QFrame::Box);\par
00106         frame->setFrameShadow(QFrame::Raised);\par
00107         frame->setLineWidth(1);\par
00108         speed_2 = {\cf17 new} QWidget(frame);\par
00109         speed_2->setObjectName({\cf22 "speed_2"});\par
00110         speed_2->setEnabled({\cf17 false});\par
00111         speed_2->setGeometry(QRect(15, 110, 301, 41));\par
00112         QFont font2;\par
00113         font2.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00114         font2.setBold({\cf17 true});\par
00115         speed_2->setFont(font2);\par
00116         speed_2->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210,211,218);\\n"}\par
00117 {\cf22 "color: rgb(117, 125, 149);\\n"}\par
00118 {\cf22 "border: 1px solid rgb(67, 72, 91); "}));\par
00119         speed = {\cf17 new} QDoubleSpinBox(speed_2);\par
00120         speed->setObjectName({\cf22 "speed"});\par
00121         speed->setGeometry(QRect(159, 12, 136, 20));\par
00122         speed->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00123 {\cf22 "\\n"}\par
00124 {\cf22 "border-radius: 6px;"}));\par
00125         speed->setAlignment(Qt::AlignCenter);\par
00126         label_5 = {\cf17 new} QLabel(speed_2);\par
00127         label_5->setObjectName({\cf22 "label_5"});\par
00128         label_5->setGeometry(QRect(11, 12, 93, 16));\par
00129         label_5->setFont(font1);\par
00130         label_5->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00131         bSpeed = {\cf17 new} QCheckBox(frame);\par
00132         bSpeed->setObjectName({\cf22 "bSpeed"});\par
00133         bSpeed->setGeometry(QRect(15, 80, 171, 20));\par
00134         bSpeed->setFont(font1);\par
00135         bSpeed->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00136 {\cf22 "border: 0px"}));\par
00137         orientation = {\cf17 new} QWidget(frame);\par
00138         orientation->setObjectName({\cf22 "orientation"});\par
00139         orientation->setEnabled({\cf17 false});\par
00140         orientation->setGeometry(QRect(15, 190, 301, 111));\par
00141         orientation->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210,211,218);\\n"}\par
00142 {\cf22 "color: rgb(117, 125, 149);\\n"}\par
00143 {\cf22 "border: 1px solid rgb(67, 72, 91); "}));\par
00144         label_10 = {\cf17 new} QLabel(orientation);\par
00145         label_10->setObjectName({\cf22 "label_10"});\par
00146         label_10->setGeometry(QRect(10, 15, 18, 16));\par
00147         label_10->setFont(font1);\par
00148         label_10->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00149         label_11 = {\cf17 new} QLabel(orientation);\par
00150         label_11->setObjectName({\cf22 "label_11"});\par
00151         label_11->setGeometry(QRect(11, 47, 33, 16));\par
00152         label_11->setFont(font1);\par
00153         label_11->setStyleSheet(QString::fromUtf8({\cf22 "\\n"}\par
00154 {\cf22 "border: 0px"}));\par
00155         label_12 = {\cf17 new} QLabel(orientation);\par
00156         label_12->setObjectName({\cf22 "label_12"});\par
00157         label_12->setGeometry(QRect(11, 78, 17, 16));\par
00158         label_12->setFont(font1);\par
00159         label_12->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00160         AValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00161         AValue->setObjectName({\cf22 "AValue"});\par
00162         AValue->setGeometry(QRect(153, 15, 141, 20));\par
00163         AValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00164 {\cf22 "\\n"}\par
00165 {\cf22 "border-radius: 6px;"}));\par
00166         BValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00167         BValue->setObjectName({\cf22 "BValue"});\par
00168         BValue->setGeometry(QRect(154, 47, 141, 20));\par
00169         BValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00170 {\cf22 "\\n"}\par
00171 {\cf22 "border-radius: 6px;"}));\par
00172         CValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00173         CValue->setObjectName({\cf22 "CValue"});\par
00174         CValue->setGeometry(QRect(154, 78, 141, 20));\par
00175         CValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00176 {\cf22 "\\n"}\par
00177 {\cf22 "border-radius: 6px;"}));\par
00178         label_12->raise();\par
00179         label_10->raise();\par
00180         AValue->raise();\par
00181         BValue->raise();\par
00182         CValue->raise();\par
00183         label_11->raise();\par
00184         bManOrientation = {\cf17 new} QCheckBox(frame);\par
00185         bManOrientation->setObjectName({\cf22 "bManOrientation"});\par
00186         bManOrientation->setGeometry(QRect(15, 160, 151, 20));\par
00187         bManOrientation->setFont(font1);\par
00188         bManOrientation->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00189 {\cf22 "border: 0px"}));\par
00190         meanLength = {\cf17 new} QSpinBox(frame);\par
00191         meanLength->setObjectName({\cf22 "meanLength"});\par
00192         meanLength->setGeometry(QRect(200, 48, 116, 20));\par
00193         meanLength->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00194 {\cf22 "\\n"}\par
00195 {\cf22 "border-radius: 6px;"}));\par
00196         label_dp = {\cf17 new} QLabel(frame);\par
00197         label_dp->setObjectName({\cf22 "label_dp"});\par
00198         label_dp->setGeometry(QRect(14, 22, 144, 16));\par
00199         label_dp->setFont(font1);\par
00200         label_dp->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00201 {\cf22 "border: 0px"}));\par
00202         label_4 = {\cf17 new} QLabel(frame);\par
00203         label_4->setObjectName({\cf22 "label_4"});\par
00204         label_4->setGeometry(QRect(14, 48, 180, 16));\par
00205         label_4->setFont(font1);\par
00206         label_4->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00207 {\cf22 "border: 0px"}));\par
00208         dpToleranz = {\cf17 new} QSpinBox(frame);\par
00209         dpToleranz->setObjectName({\cf22 "dpToleranz"});\par
00210         dpToleranz->setGeometry(QRect(200, 22, 116, 20));\par
00211         dpToleranz->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00212 {\cf22 "\\n"}\par
00213 {\cf22 "border-radius: 6px;"}));\par
00214         dpToleranz->setFrame({\cf17 true});\par
00215         dpToleranz->setButtonSymbols(QAbstractSpinBox::UpDownArrows);\par
00216         dpToleranz->setAccelerated({\cf17 false});\par
00217         bLogging = {\cf17 new} QCheckBox(frame);\par
00218         bLogging->setObjectName({\cf22 "bLogging"});\par
00219         bLogging->setGeometry(QRect(15, 460, 151, 20));\par
00220         bLogging->setFont(font1);\par
00221         bLogging->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00222 {\cf22 "border: 0px"}));\par
00223         bOffset = {\cf17 new} QCheckBox(frame);\par
00224         bOffset->setObjectName({\cf22 "bOffset"});\par
00225         bOffset->setGeometry(QRect(15, 310, 151, 20));\par
00226         bOffset->setFont(font1);\par
00227         bOffset->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00228 {\cf22 "border: 0px"}));\par
00229         offset = {\cf17 new} QWidget(frame);\par
00230         offset->setObjectName({\cf22 "offset"});\par
00231         offset->setEnabled({\cf17 false});\par
00232         offset->setGeometry(QRect(15, 340, 301, 111));\par
00233         offset->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210,211,218);\\n"}\par
00234 {\cf22 "color: rgb(117, 125, 149);\\n"}\par
00235 {\cf22 "border: 1px solid rgb(67, 72, 91); "}));\par
00236         label_13 = {\cf17 new} QLabel(offset);\par
00237         label_13->setObjectName({\cf22 "label_13"});\par
00238         label_13->setGeometry(QRect(10, 15, 18, 16));\par
00239         label_13->setFont(font1);\par
00240         label_13->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00241         label_14 = {\cf17 new} QLabel(offset);\par
00242         label_14->setObjectName({\cf22 "label_14"});\par
00243         label_14->setGeometry(QRect(11, 47, 33, 16));\par
00244         label_14->setFont(font1);\par
00245         label_14->setStyleSheet(QString::fromUtf8({\cf22 "\\n"}\par
00246 {\cf22 "border: 0px"}));\par
00247         label_15 = {\cf17 new} QLabel(offset);\par
00248         label_15->setObjectName({\cf22 "label_15"});\par
00249         label_15->setGeometry(QRect(11, 78, 17, 16));\par
00250         label_15->setFont(font1);\par
00251         label_15->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00252         offsetX = {\cf17 new} QDoubleSpinBox(offset);\par
00253         offsetX->setObjectName({\cf22 "offsetX"});\par
00254         offsetX->setGeometry(QRect(153, 15, 141, 20));\par
00255         offsetX->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00256 {\cf22 "\\n"}\par
00257 {\cf22 "border-radius: 6px;"}));\par
00258         offsetY = {\cf17 new} QDoubleSpinBox(offset);\par
00259         offsetY->setObjectName({\cf22 "offsetY"});\par
00260         offsetY->setGeometry(QRect(154, 47, 141, 20));\par
00261         offsetY->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00262 {\cf22 "\\n"}\par
00263 {\cf22 "border-radius: 6px;"}));\par
00264         offsetZ = {\cf17 new} QDoubleSpinBox(offset);\par
00265         offsetZ->setObjectName({\cf22 "offsetZ"});\par
00266         offsetZ->setGeometry(QRect(154, 78, 141, 20));\par
00267         offsetZ->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00268 {\cf22 "\\n"}\par
00269 {\cf22 "border-radius: 6px;"}));\par
00270         pushInput = {\cf17 new} QPushButton(centralWidget);\par
00271         pushInput->setObjectName({\cf22 "pushInput"});\par
00272         pushInput->setGeometry(QRect(240, 10, 101, 31));\par
00273         pushInput->setFont(font1);\par
00274         pushInput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00275 {\cf22 "border-radius: 10px;\\n"}\par
00276 {\cf22 "background-color: rgb(117, 125, 149);\\n"}\par
00277 {\cf22 "color: rgb(3, 8, 14);"}));\par
00278         pushOutput = {\cf17 new} QPushButton(centralWidget);\par
00279         pushOutput->setObjectName({\cf22 "pushOutput"});\par
00280         pushOutput->setGeometry(QRect(240, 50, 101, 31));\par
00281         pushOutput->setFont(font1);\par
00282         pushOutput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00283 {\cf22 "border-radius: 10px;\\n"}\par
00284 {\cf22 "background-color: rgb(117, 125, 149);\\n"}\par
00285 {\cf22 "color: rgb(3, 8, 14);"}));\par
00286         textBrowser = {\cf17 new} QTextBrowser(centralWidget);\par
00287         textBrowser->setObjectName({\cf22 "textBrowser"});\par
00288         textBrowser->setGeometry(QRect(0, 630, 355, 71));\par
00289         textBrowser->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00290 {\cf22 "border-radius: 0px"}));\par
00291         startCalculation = {\cf17 new} QPushButton(centralWidget);\par
00292         startCalculation->setObjectName({\cf22 "startCalculation"});\par
00293         startCalculation->setGeometry(QRect(10, 590, 331, 31));\par
00294         sizePolicy.setHeightForWidth(startCalculation->sizePolicy().hasHeightForWidth());\par
00295         startCalculation->setSizePolicy(sizePolicy);\par
00296         QFont font3;\par
00297         font3.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00298         font3.setPointSize(10);\par
00299         font3.setBold({\cf17 false});\par
00300         font3.setItalic({\cf17 false});\par
00301         startCalculation->setFont(font3);\par
00302         startCalculation->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black;\\n"}\par
00303 {\cf22 "border-radius: 10px;\\n"}\par
00304 {\cf22 "background-color: rgb(67, 72, 91);\\n"}\par
00305 {\cf22 "color: rgb(210, 211, 218)"}));\par
00306         pathOutput = {\cf17 new} QLabel(centralWidget);\par
00307         pathOutput->setObjectName({\cf22 "pathOutput"});\par
00308         pathOutput->setGeometry(QRect(10, 50, 331, 31));\par
00309         pathOutput->setFont(font1);\par
00310         pathOutput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00311 {\cf22 "border-radius: 10px;\\n"}\par
00312 {\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00313 {\cf22 "color: rgb(3, 8, 14);"}));\par
00314         pathOutput->setTextFormat(Qt::MarkdownText);\par
00315         GUIClass->setCentralWidget(centralWidget);\par
00316         pathInput->raise();\par
00317         frame->raise();\par
00318         textBrowser->raise();\par
00319         startCalculation->raise();\par
00320         pathOutput->raise();\par
00321         pushOutput->raise();\par
00322         pushInput->raise();\par
00323 \par
00324         retranslateUi(GUIClass);\par
00325 \par
00326         QMetaObject::connectSlotsByName(GUIClass);\par
00327     \} {\cf20 // setupUi}\par
}
{
\ql
Benutzt {\b AValue}, {\b bLogging}, {\b bManOrientation}, {\b bOffset}, {\b bSpeed}, {\b BValue}, {\b centralWidget}, {\b CValue}, {\b dpToleranz}, {\b frame}, {\b label_10}, {\b label_11}, {\b label_12}, {\b label_13}, {\b label_14}, {\b label_15}, {\b label_4}, {\b label_5}, {\b label_dp}, {\b meanLength}, {\b offset}, {\b offsetX}, {\b offsetY}, {\b offsetZ}, {\b orientation}, {\b pathInput}, {\b pathOutput}, {\b pushInput}, {\b pushOutput}, {\b retranslateUi()}, {\b speed}, {\b speed_2}, {\b startCalculation} und {\b textBrowser}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Datenelemente\par
\pard\plain 
{\xe \v AValue\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:AValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox * Ui_GUIClass::AValue}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 40} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b GUI::setOrientation()} und {\b setupUi()}.}\par
}
{\xe \v bLogging\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:bLogging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCheckBox* Ui_GUIClass::bLogging}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 48} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::activateLogging()}, {\b GUI::GUI()}, {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v bManOrientation\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:bManOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCheckBox * Ui_GUIClass::bManOrientation}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 43} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::activateOrientation()}, {\b GUI::GUI()}, {\b retranslateUi()}, {\b GUI::setOrientation()} und {\b setupUi()}.}\par
}
{\xe \v bOffset\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:bOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCheckBox* Ui_GUIClass::bOffset}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 49} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::activateOffset()}, {\b GUI::GUI()}, {\b retranslateUi()}, {\b GUI::setOffset()} und {\b setupUi()}.}\par
}
{\xe \v bSpeed\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:bSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCheckBox * Ui_GUIClass::bSpeed}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 35} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::activateSpeed()}, {\b GUI::GUI()}, {\b retranslateUi()}, {\b GUI::setSpeed()} und {\b setupUi()}.}\par
}
{\xe \v BValue\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:BValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox * Ui_GUIClass::BValue}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 41} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b GUI::setOrientation()} und {\b setupUi()}.}\par
}
{\xe \v centralWidget\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:centralWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget * Ui_GUIClass::centralWidget}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 29} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b setupUi()}.}\par
}
{\xe \v CValue\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:CValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox * Ui_GUIClass::CValue}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 42} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b GUI::setOrientation()} und {\b setupUi()}.}\par
}
{\xe \v dpToleranz\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:dpToleranz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSpinBox * Ui_GUIClass::dpToleranz}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 47} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b retranslateUi()}, {\b GUI::setDP()} und {\b setupUi()}.}\par
}
{\xe \v frame\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFrame * Ui_GUIClass::frame}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 31} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b setupUi()}.}\par
}
{\xe \v label_10\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:label_10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel * Ui_GUIClass::label_10}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 37} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v label_11\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:label_11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel * Ui_GUIClass::label_11}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 38} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v label_12\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:label_12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel * Ui_GUIClass::label_12}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 39} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v label_13\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:label_13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel* Ui_GUIClass::label_13}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 51} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v label_14\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:label_14}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel* Ui_GUIClass::label_14}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 52} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v label_15\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:label_15}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel* Ui_GUIClass::label_15}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 53} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v label_4\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:label_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel * Ui_GUIClass::label_4}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 46} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v label_5\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:label_5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel * Ui_GUIClass::label_5}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 34} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v label_dp\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:label_dp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel * Ui_GUIClass::label_dp}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 45} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v meanLength\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:meanLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSpinBox * Ui_GUIClass::meanLength}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 44} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b GUI::setMean()} und {\b setupUi()}.}\par
}
{\xe \v offset\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* Ui_GUIClass::offset}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 50} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::activateOffset()} und {\b setupUi()}.}\par
}
{\xe \v offsetX\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:offsetX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* Ui_GUIClass::offsetX}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 54} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::activateOffset()}, {\b GUI::GUI()}, {\b GUI::setOffset()} und {\b setupUi()}.}\par
}
{\xe \v offsetY\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:offsetY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* Ui_GUIClass::offsetY}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 55} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::activateOffset()}, {\b GUI::GUI()}, {\b GUI::setOffset()} und {\b setupUi()}.}\par
}
{\xe \v offsetZ\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:offsetZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox* Ui_GUIClass::offsetZ}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 56} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::activateOffset()}, {\b GUI::GUI()}, {\b GUI::setOffset()} und {\b setupUi()}.}\par
}
{\xe \v orientation\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:orientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget * Ui_GUIClass::orientation}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 36} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::activateOrientation()} und {\b setupUi()}.}\par
}
{\xe \v pathInput\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:pathInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel * Ui_GUIClass::pathInput}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 30} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b retranslateUi()}, {\b GUI::setInputPath()} und {\b setupUi()}.}\par
}
{\xe \v pathOutput\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:pathOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLabel * Ui_GUIClass::pathOutput}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 52} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b retranslateUi()}, {\b GUI::setOutputPath()} und {\b setupUi()}.}\par
}
{\xe \v pushInput\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:pushInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPushButton * Ui_GUIClass::pushInput}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 48} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v pushOutput\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:pushOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPushButton * Ui_GUIClass::pushOutput}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 49} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v speed\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:speed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDoubleSpinBox * Ui_GUIClass::speed}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 33} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b retranslateUi()}, {\b GUI::setSpeed()} und {\b setupUi()}.}\par
}
{\xe \v speed_2\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:speed_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget * Ui_GUIClass::speed_2}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 32} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::activateSpeed()} und {\b setupUi()}.}\par
}
{\xe \v startCalculation\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:startCalculation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPushButton * Ui_GUIClass::startCalculation}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 51} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::GUI()}, {\b retranslateUi()} und {\b setupUi()}.}\par
}
{\xe \v textBrowser\:Ui_GUIClass}
{\xe \v Ui_GUIClass\:textBrowser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QTextBrowser * Ui_GUIClass::textBrowser}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 50} der Datei {\b ui_GUI.h}.}\par
{
\ql
Wird benutzt von {\b GUI::calculate()} und {\b setupUi()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
Die Dokumentation f\'FCr diese Klasse wurde erzeugt aufgrund der Dateien:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
x64/Debug/uic/{\b ui_GUI.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
x64/Release/uic/{\b ui_GUI.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Datei-Dokumentation{\tc \v Datei-Dokumentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
header/EulerMatrix.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v header/EulerMatrix.h}
{\xe \v header/EulerMatrix.h}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header File handling Euler Matrix. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <tuple>}\par
{\f2 #include <cmath>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CEulerMatrix}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handling und Berechnung Euler Matrix. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makrodefinitionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _USE_MATH_DEFINES}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header File handling Euler Matrix. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b EulerMatrix.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makro-Dokumentation\par
\pard\plain 
{\xe \v _USE_MATH_DEFINES\:EulerMatrix.h}
{\xe \v EulerMatrix.h\:_USE_MATH_DEFINES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _USE_MATH_DEFINES}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 10} der Datei {\b EulerMatrix.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EulerMatrix.h\par \pard\plain 
{\tc\tcl2 \v header/EulerMatrix.h}
{\xe \v header/EulerMatrix.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include <tuple>}\par
00008 {\cf21 #include <cmath>}\par
00009 \par
00010 {\cf21 #define _USE_MATH_DEFINES}\par
00011 \par
00012 {\cf17 using namespace }std;\par
00013 \par
00014 {\cf21 #pragma once}\par
00015 \par
00020 {\cf17 class }CEulerMatrix\par
00021 \{\par
00022 {\cf17 public}:\par
00028     CEulerMatrix({\cf18 void});\par
00035     CEulerMatrix({\cf18 float} inputMatrix[3][3]);\par
00039     ~CEulerMatrix();\par
00040 \par
00045     {\cf18 void} setMatrix({\cf18 float} inputMatrix[3][3]);\par
00050     CEulerMatrix getEulerMatrix({\cf18 void});\par
00051 \par
00056     {\cf18 void} getMatrix({\cf18 float} Matrix[][3]);\par
00064     CEulerMatrix angels2mat({\cf18 double} A, {\cf18 double} B, {\cf18 double} C);\par
00065 \par
00070     tuple<double , double , double> calculateAngels({\cf18 void});\par
00071 \par
00072 {\cf17 private}:\par
00076     {\cf18 float} eulerMatrix[3][3];\par
00077 \par
00078 \};\par
00079 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
header/GUI.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v header/GUI.h}
{\xe \v header/GUI.h}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QtWidgets/QMainWindow>}\par
{\f2 #include <QtWidgets/qfiledialog.h>}\par
{\f2 #include <QtWidgets/qmessagebox.h>}\par
{\f2 #include "InputParameter.h"}\par
{\f2 #include "ui_GUI.h"}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GUI}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GUI.h\par \pard\plain 
{\tc\tcl2 \v header/GUI.h}
{\xe \v header/GUI.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #include <QtWidgets/QMainWindow>}\par
00004 {\cf21 #include <QtWidgets/qfiledialog.h>}\par
00005 {\cf21 #include <QtWidgets/qmessagebox.h>}\par
00006 \par
00007 {\cf21 #include "InputParameter.h"}\par
00008 {\cf21 #include "ui_GUI.h"}\par
00009 {\cf21 #include <string>}\par
00010 \par
00011 {\cf17 class }GUI : {\cf17 public} QMainWindow\par
00012 \{\par
00013     Q_OBJECT\par
00014 \par
00015 {\cf17 public}:\par
00016     GUI(QWidget *parent = {\cf17 nullptr});\par
00017     ~GUI();\par
00018 \par
00019 {\cf17 protected}:\par
00020 \par
00021 \par
00022 {\cf17 private} slots:\par
00023     {\cf18 void} calculate({\cf18 void});\par
00024     {\cf18 void} setInputPath({\cf18 void});\par
00025     {\cf18 void} setOutputPath({\cf18 void});\par
00026     {\cf18 void} setDP({\cf18 void});\par
00027     {\cf18 void} setMean({\cf18 void});\par
00028     {\cf18 void} activateSpeed({\cf18 void});\par
00029     {\cf18 void} setSpeed({\cf18 void});\par
00030     {\cf18 void} activateOrientation({\cf18 void});\par
00031     {\cf18 void} setOrientation({\cf18 void});\par
00032     {\cf18 void} activateOffset({\cf18 void});\par
00033     {\cf18 void} setOffset({\cf18 void});\par
00034     {\cf18 void} activateLogging({\cf18 void});\par
00035 \par
00036 {\cf17 private}:\par
00037     Ui::GUIClass ui;\par
00038     QString inputPathUI;\par
00039     QString outputPathUI;\par
00040     {\cf18 double} dpTolerance;\par
00041     {\cf18 double} meanLength;\par
00042     CInputParameter inputParameter;\par
00043 \par
00044 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
header/InputParameter.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v header/InputParameter.h}
{\xe \v header/InputParameter.h}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header File Daten Einlesen. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "EulerMatrix.h"}\par
{\f2 #include "Point3D.h"}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <list>}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <tuple>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CInputParameter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handling Eingabedaten. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header File Daten Einlesen. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b InputParameter.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InputParameter.h\par \pard\plain 
{\tc\tcl2 \v header/InputParameter.h}
{\xe \v header/InputParameter.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "EulerMatrix.h"}\par
00008 {\cf21 #include "Point3D.h"}\par
00009 {\cf21 #include <string>}\par
00010 {\cf21 #include <vector>}\par
00011 {\cf21 #include <list>}\par
00012 {\cf21 #include <iostream>}\par
00013 {\cf21 #include <fstream>}\par
00014 {\cf21 #include <sstream>} \par
00015 {\cf21 #include <tuple>}\par
00016 \par
00017 {\cf17 using namespace }std;\par
00018 \par
00019 {\cf21 #pragma once}\par
00020 \par
00025 {\cf17 class }CInputParameter\par
00026 \{\par
00027 {\cf17 public}:\par
00033     CInputParameter({\cf18 void});\par
00047     CInputParameter({\cf18 double} initSpeed, {\cf18 bool} initSeepManual, {\cf18 bool} initOrientationManual, {\cf18 double} initA, {\cf18 double} initB, {\cf18 double} initC);\par
00051     ~CInputParameter({\cf18 void});\par
00052 \par
00061     {\cf18 void} setOrientation({\cf18 bool} initOrientationManual, {\cf18 double} initA, {\cf18 double} initB, {\cf18 double} initC);\par
00068     {\cf18 void} setSpeed({\cf18 double} initSpeed, {\cf18 bool} initSpeedManual);\par
00077     {\cf18 void} setOffset({\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z, {\cf18 bool} offsetManual);\par
00083     {\cf18 void} setLogging({\cf18 bool} initLoggingManual);\par
00088     {\cf18 double} getSpeed({\cf18 void});\par
00093     {\cf18 bool} getSpeedManual({\cf18 void});\par
00098     {\cf18 bool} getOrientationManual({\cf18 void});\par
00104     tuple <double, double, double> getAngles({\cf18 void});\par
00109     {\cf18 bool} getOffsetManual({\cf18 void});\par
00114     {\cf18 bool} getLoggingManual({\cf18 void});\par
00120     tuple <double, double, double> getOffset({\cf18 void});\par
00121 \par
00127     {\cf18 void} openFile(std::string path);\par
00136     {\cf18 bool} detectJump(CInputPoint3D p, {\cf18 double} x_prev, {\cf18 double} y_prev, {\cf18 double} z_prev);\par
00141     vector<list<CInputPoint3D>>& getPath();\par
00142 \par
00143 {\cf17 private}:\par
00147     vector<list<CInputPoint3D>> initialPath;\par
00151     {\cf18 double} speed;\par
00155     {\cf18 bool} speedManual;\par
00159     {\cf18 bool} orientationManual;\par
00163     {\cf18 double} A;\par
00167     {\cf18 double} B;\par
00171     {\cf18 double} C;\par
00175     {\cf18 double} difference = 20;\par
00179     {\cf18 bool} offsetManual;\par
00183     {\cf18 double} offsetX;\par
00187     {\cf18 double} offsetY;\par
00191     {\cf18 double} offsetZ;\par
00195     {\cf18 bool} loggingManual;\par
00196 \};\par
00197 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
header/Line3D.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v header/Line3D.h}
{\xe \v header/Line3D.h}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header File Daten Einlesen. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Point3D.h"}\par
{\f2 #include <math.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CLine3D}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnung Geraden. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header File Daten Einlesen. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b Line3D.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Line3D.h\par \pard\plain 
{\tc\tcl2 \v header/Line3D.h}
{\xe \v header/Line3D.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "Point3D.h"}\par
00008 {\cf21 #include <math.h>}\par
00009 \par
00010 {\cf17 using namespace }std;\par
00011 \par
00012 {\cf21 #pragma once}\par
00013 \par
00018 {\cf17 class }CLine3D\par
00019 \{\par
00020 {\cf17 public}:\par
00026     CLine3D({\cf18 void});\par
00032     CLine3D(CPoint3D P1, CPoint3D P2);\par
00036     ~CLine3D({\cf18 void});\par
00037 \par
00041     CPoint3D p1;\par
00045     CPoint3D p2;\par
00046 \};\par
00047 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
header/Logging.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v header/Logging.h}
{\xe \v header/Logging.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logging der Daten. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "EulerMatrix.h"}\par
{\f2 #include "Point3D.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <list>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CLogging}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gleitender Mittelwertfilter. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logging der Daten. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b Logging.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Logging.h\par \pard\plain 
{\tc\tcl2 \v header/Logging.h}
{\xe \v header/Logging.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "EulerMatrix.h"}\par
00008 {\cf21 #include "Point3D.h"}\par
00009 \par
00010 {\cf21 #include <iostream>}\par
00011 {\cf21 #include <fstream>}\par
00012 {\cf21 #include <sstream>} \par
00013 {\cf21 #include <string>}\par
00014 {\cf21 #include <vector>}\par
00015 {\cf21 #include <list>}\par
00016 \par
00017 {\cf21 #pragma once}\par
00022 {\cf17 class }CLogging\par
00023 \{\par
00024 {\cf17 public}:\par
00030     CLogging({\cf18 void});\par
00036     CLogging({\cf18 string} path, {\cf18 bool} detailed);\par
00040     ~CLogging({\cf18 void});\par
00045     {\cf18 void} setStep({\cf18 int} Step);\par
00050     {\cf18 bool} getDetailed({\cf18 void});\par
00056     {\cf18 void} logData(vector<list<CInputPoint3D>>& sourcePath);\par
00062     {\cf18 void} logData(vector<CInputPoint3D>& sourcePath);\par
00068     {\cf18 void} logData(vector<COutputPoint3D>& sourcePath);\par
00069 {\cf17 private}:\par
00073     {\cf18 int} step;\par
00077     {\cf18 string} path;\par
00081     {\cf18 bool} detailed;\par
00082 \par
00083 \par
00084 \};\par
00085 \par
00086 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
header/MeanFilter.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v header/MeanFilter.h}
{\xe \v header/MeanFilter.h}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnung des gleitenden Mittelwertfilters. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <list>}\par
{\f2 #include <string>}\par
{\f2 #include "Point3D.h"}\par
{\f2 #include "Logging.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CMeanFilter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gleitender Mittelwertfilter. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnung des gleitenden Mittelwertfilters. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b MeanFilter.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MeanFilter.h\par \pard\plain 
{\tc\tcl2 \v header/MeanFilter.h}
{\xe \v header/MeanFilter.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include <vector>}\par
00008 {\cf21 #include <list>}\par
00009 {\cf21 #include <string>}\par
00010 {\cf21 #include "Point3D.h"}\par
00011 {\cf21 #include "Logging.h"}\par
00012 \par
00013 {\cf21 #pragma once}\par
00014 \par
00015 {\cf17 using namespace }std;\par
00016 \par
00021 {\cf17 class }CMeanFilter\par
00022 \{\par
00023 {\cf17 public}:\par
00029     CMeanFilter();\par
00036     CMeanFilter({\cf18 int} Window);\par
00040     ~CMeanFilter();\par
00041 \par
00046     {\cf18 void} setWindowSize({\cf18 int} Window);\par
00047 \par
00052     {\cf18 int} getWindowSize();\par
00057     vector<list<CInputPoint3D>>& getPath();\par
00058 \par
00065     list<CInputPoint3D> calculateMean(list<CInputPoint3D>& segment);\par
00073     {\cf18 void} mean(vector<list<CInputPoint3D>>& sourcePath, CLogging log);\par
00074 \par
00075 {\cf17 private}:\par
00079     {\cf18 int} windowSize;\par
00083     vector<list<CInputPoint3D>> meanPath;\par
00084 \};\par
00085 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
header/PathBuilder.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v header/PathBuilder.h}
{\xe \v header/PathBuilder.h}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt die einzelnen Segmente zu einem Vector zusammen. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <list>}\par
{\f2 #include <iostream>}\par
{\f2 #include "Point3D.h"}\par
{\f2 #include "Logging.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CPathBuilder}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Zusammensetzten des Pfades. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setzt die einzelnen Segmente zu einem Vector zusammen. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b PathBuilder.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PathBuilder.h\par \pard\plain 
{\tc\tcl2 \v header/PathBuilder.h}
{\xe \v header/PathBuilder.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include <vector>}\par
00008 {\cf21 #include <list>}\par
00009 {\cf21 #include <iostream>}\par
00010 {\cf21 #include "Point3D.h"}\par
00011 {\cf21 #include "Logging.h"}\par
00012 \par
00013 {\cf17 using namespace }std;\par
00014 \par
00015 {\cf21 #pragma once}\par
00016 \par
00021 {\cf17 class }CPathBuilder\par
00022 \{\par
00023 {\cf17 public}:\par
00028     CPathBuilder({\cf18 void});\par
00032     ~CPathBuilder({\cf18 void});\par
00033 \par
00038     vector<CInputPoint3D>& getPath();\par
00044     {\cf18 void} createPath(vector<list<CInputPoint3D>>& segments, CLogging log);\par
00045 \par
00046 {\cf17 private}:\par
00050     vector<CInputPoint3D> path;\par
00051 \};\par
00052 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
header/Point3D.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v header/Point3D.h}
{\xe \v header/Point3D.h}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verarbeitung der Punkte. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "EulerMatrix.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CPoint3D}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Grundklasse Punkt. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CInputPoint3D}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input Punkt. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b COutputPoint3D}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output Punkt. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verarbeitung der Punkte. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b Point3D.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Point3D.h\par \pard\plain 
{\tc\tcl2 \v header/Point3D.h}
{\xe \v header/Point3D.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "EulerMatrix.h"}\par
00008 \par
00009 {\cf17 class }CLine3D;\par
00010 \par
00011 {\cf17 using namespace }std;\par
00012 \par
00013 {\cf21 #pragma once}\par
00014 \par
00020 {\cf17 class }CPoint3D\par
00021 \{\par
00022 {\cf17 public}:\par
00028     CPoint3D({\cf18 void});\par
00037     CPoint3D({\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z);\par
00041     ~CPoint3D({\cf18 void});\par
00042 \par
00047     {\cf18 double} getX();\par
00052     {\cf18 double} getY();\par
00057     {\cf18 double} getZ();\par
00058 \par
00063     {\cf18 void} setX({\cf18 double} X);\par
00068     {\cf18 void} setY({\cf18 double} Y);\par
00073     {\cf18 void} setZ({\cf18 double} Z);\par
00074 \par
00081     {\cf18 void} set({\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z);\par
00087     {\cf18 double} distanceTo(CPoint3D point);\par
00093     {\cf18 double} distanceTo(CLine3D line);\par
00094 \par
00095 {\cf17 protected}:\par
00099     {\cf18 double} x, y, z;\par
00100 \};\par
00101 \par
00106 {\cf17 class }CInputPoint3D : {\cf17 public} CPoint3D\par
00107 \{   \par
00108 {\cf17 public}:\par
00114     CInputPoint3D({\cf18 void});\par
00125     CInputPoint3D({\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z, {\cf18 double} Timestamp, CEulerMatrix Matrix);\par
00129     ~CInputPoint3D({\cf18 void});\par
00130 \par
00135     {\cf18 double} getTime();\par
00140     CEulerMatrix getEulerMatrix();\par
00141 \par
00146     {\cf18 void} setTime({\cf18 double} time);  \par
00151     {\cf18 void} setEulerMatrix(CEulerMatrix orientation);\par
00160     {\cf18 void} setPoint({\cf18 double} time, {\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z, CEulerMatrix orientation);\par
00161 \par
00162 {\cf17 private}:\par
00166     {\cf18 double} timestamp;\par
00170     CEulerMatrix orientationMatrix;\par
00171 \};\par
00172 \par
00177 {\cf17 class }COutputPoint3D : {\cf17 public} CPoint3D\par
00178 \{\par
00179 {\cf17 public}:\par
00185     COutputPoint3D({\cf18 void});\par
00198     COutputPoint3D({\cf18 double} Speed, {\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z, {\cf18 double} A, {\cf18 double} B, {\cf18 double} C);\par
00202     ~COutputPoint3D({\cf18 void});\par
00203 \par
00208     {\cf18 double} getSpeed();\par
00213     {\cf18 double} getA();\par
00218     {\cf18 double} getB();\par
00223     {\cf18 double} getC();\par
00224 \par
00229     {\cf18 void} setSpeed({\cf18 double} speed);\par
00234     {\cf18 void} setA({\cf18 double} A);\par
00239     {\cf18 void} setB({\cf18 double} B);\par
00244     {\cf18 void} setC({\cf18 double} C);\par
00245 {\cf17 private}:\par
00249     {\cf18 double} a, b, c;\par
00253     {\cf18 double} speed;\par
00254 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
header/RobCodeGenerator.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v header/RobCodeGenerator.h}
{\xe \v header/RobCodeGenerator.h}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erstellung des Roboter Codes. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <iostream>}\par
{\f2 #include "Point3D.h"}\par
{\f2 #include "Logging.h"}\par
{\f2 #include "InputParameter.h"}\par
{\f2 #include <tuple>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CRobCodeGenerator}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Klasse zum erstellen des Roboter Codes. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makrodefinitionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_SPEED}\~ 2.0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erstellung des Roboter Codes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b RobCodeGenerator.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makro-Dokumentation\par
\pard\plain 
{\xe \v MAX_SPEED\:RobCodeGenerator.h}
{\xe \v RobCodeGenerator.h\:MAX_SPEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_SPEED\~ 2.0}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 18} der Datei {\b RobCodeGenerator.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RobCodeGenerator.h\par \pard\plain 
{\tc\tcl2 \v header/RobCodeGenerator.h}
{\xe \v header/RobCodeGenerator.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include <vector>}\par
00008 {\cf21 #include <iostream>}\par
00009 {\cf21 #include "Point3D.h"}\par
00010 {\cf21 #include "Logging.h"}\par
00011 {\cf21 #include "InputParameter.h"}\par
00012 {\cf21 #include <tuple>}\par
00013 \par
00014 {\cf17 using namespace }std;\par
00015 \par
00016 {\cf21 #pragma once}\par
00017 \par
00018 {\cf21 #define MAX_SPEED 2.0}\par
00019 \par
00025 {\cf17 class }CRobCodeGenerator\par
00026 \{\par
00027 {\cf17 public}:\par
00033     CRobCodeGenerator({\cf18 void});\par
00045     CRobCodeGenerator(CInputParameter inputParam);\par
00049     ~CRobCodeGenerator({\cf18 void});\par
00050 \par
00057     {\cf18 void} generateRobCode(vector<CInputPoint3D>& path, {\cf18 string} filepath, {\cf18 string} filename, CLogging log);\par
00064     {\cf18 void} postProcessing(vector<CInputPoint3D>& path);\par
00072     {\cf18 double} calculateSpeed(CInputPoint3D& p, {\cf18 size_t} i, {\cf18 double} timePrev);\par
00078     {\cf18 void} calculateAngles(COutputPoint3D& p, CInputPoint3D& pIn);\par
00079 \par
00080 {\cf17 private}:\par
00084     vector<COutputPoint3D> processedPath;\par
00088     CInputParameter input;\par
00089 \par
00090 \};\par
00091 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
header/SegmentApproximator.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v header/SegmentApproximator.h}
{\xe \v header/SegmentApproximator.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnung des Douglas Peuker Algorithmusses. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <list>}\par
{\f2 #include <iostream>}\par
{\f2 #include <math.h>}\par
{\f2 #include "Point3D.h"}\par
{\f2 #include "Logging.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSegmentApproximator}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ausd\'FCnnen des Pfades. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Berechnung des Douglas Peuker Algorithmusses. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b SegmentApproximator.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SegmentApproximator.h\par \pard\plain 
{\tc\tcl2 \v header/SegmentApproximator.h}
{\xe \v header/SegmentApproximator.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include <vector>}\par
00008 {\cf21 #include <list>}\par
00009 {\cf21 #include <iostream>}\par
00010 {\cf21 #include <math.h>}\par
00011 {\cf21 #include "Point3D.h"}\par
00012 {\cf21 #include "Logging.h"}\par
00013 \par
00014 {\cf17 using namespace }std;\par
00015 \par
00016 {\cf21 #pragma once}\par
00017 \par
00022 {\cf17 class }CSegmentApproximator\par
00023 \{\par
00024 {\cf17 public}:\par
00029     CSegmentApproximator({\cf18 void});\par
00033     ~CSegmentApproximator({\cf18 void});\par
00034 \par
00041     {\cf18 void} approx({\cf17 const} vector<list<CInputPoint3D>>& Segments, CLogging log);\par
00046     {\cf18 void} setmaxDistance({\cf18 double} maxDistanceSource);\par
00051     {\cf18 double} getmaxDistance();\par
00052 \par
00057     vector<list<CInputPoint3D>>& getSegmentsApproxVector();\par
00058 \par
00059 {\cf17 private}:\par
00063     vector<list<CInputPoint3D>> segmentsApprox;\par
00067     {\cf18 double} maxDistance;\par
00068 \par
00077     {\cf18 void} douglasPeuckerRecursive(list<CInputPoint3D>& segment, std::list<CInputPoint3D>::iterator startItr, std::list<CInputPoint3D>::iterator endItr);\par
00078 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/EulerMatrix.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/EulerMatrix.cpp}
{\xe \v source/EulerMatrix.cpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../header/EulerMatrix.h"}\par
{\f2 #include <math.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EulerMatrix.cpp\par \pard\plain 
{\tc\tcl2 \v source/EulerMatrix.cpp}
{\xe \v source/EulerMatrix.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../header/EulerMatrix.h"}\par
00002 {\cf21 #include <math.h>}\par
00003 \par
00004 CEulerMatrix::CEulerMatrix({\cf18 void})\par
00005 \{\par
00006     {\cf19 for} ({\cf18 int} i = 0; i < 3; i++)\par
00007     \{\par
00008         {\cf19 for} ({\cf18 int} m = 0; m < 3; m++)\par
00009         \{\par
00010             eulerMatrix[i][m] = 0;                  {\cf20 // eulerMatrix mit 0 initialisieren}\par
00011         \}\par
00012     \}\par
00013 \}\par
00014 \par
00015 CEulerMatrix::CEulerMatrix({\cf18 float} inputMatrix[3][3])\par
00016 \{\par
00017     {\cf19 for} ({\cf18 int} i = 0; i < 3; i++)\par
00018     \{\par
00019         {\cf19 for} ({\cf18 int} m = 0; m < 3; m++)\par
00020         \{\par
00021             eulerMatrix[i][m] = inputMatrix[i][m];  {\cf20 // eulerMatrix mit Startwerten initialisieren}\par
00022         \}\par
00023     \}\par
00024 \}\par
00025 \par
00026 CEulerMatrix::~CEulerMatrix()\par
00027 \{\par
00028 \}\par
00029 \par
00030 \par
00031 {\cf18 void} CEulerMatrix::setMatrix({\cf18 float} inputMatrix[3][3])\par
00032 \{\par
00033     {\cf19 for}({\cf18 int} i = 0; i < 3; i++)\par
00034     \{ \par
00035         {\cf19 for} ({\cf18 int} m = 0; m < 3; m++)\par
00036         \{\par
00037             eulerMatrix[i][m] = inputMatrix[i][m];  {\cf20 // eulerMatrix mit \'C3\'83\'C2\'9Cbergabewerten \'C3\'83\'C2\'BCberschreiben}\par
00038         \}\par
00039     \}\par
00040 \}\par
00041 \par
00042 CEulerMatrix CEulerMatrix::getEulerMatrix()\par
00043 \{\par
00044     {\cf19 return} eulerMatrix;         {\cf20 // EulerMatrix zur\'C3\'BCck geben}\par
00045 \}\par
00046 \par
00047 {\cf18 void} CEulerMatrix::getMatrix({\cf18 float} Matrix[][3])\par
00048 \{\par
00049     {\cf19 for} ({\cf18 int} i = 0; i < 3; i++)\par
00050     \{\par
00051         {\cf19 for} ({\cf18 int} m = 0; m < 3; m++)\par
00052         \{\par
00053             Matrix[i][m] = eulerMatrix[i][m];  {\cf20 // eulerMatrix mit \'C3\'83\'C2\'9Cbergabewerten \'C3\'83\'C2\'BCberschreiben}\par
00054         \}\par
00055     \}\par
00056 \}\par
00057 \par
00058 CEulerMatrix CEulerMatrix::angels2mat({\cf18 double} A, {\cf18 double} B, {\cf18 double} C)\par
00059 \{\par
00060     {\cf18 float} Matrix[3][3];     {\cf20 // DummyMatrix erstellen}\par
00061 \par
00062     {\cf20 /* Berechnung der Matrix */}\par
00063 \par
00064     Matrix[0][0] = cos(A) * cos(C) - sin(A) * cos(B) * sin(C);\par
00065     Matrix[0][1] = -cos(A) * sin(C) - sin(A) * cos(B) * cos(C);\par
00066     Matrix[0][2] = sin(A) * sin(B);\par
00067 \par
00068     Matrix[1][0] = sin(A) * cos(C) + cos(A) * cos(B) * sin(C);\par
00069     Matrix[1][1] = -sin(A) * sin(C) + cos(A) * cos(B) * cos(C);\par
00070     Matrix[1][2] = -cos(A) * sin(B);\par
00071 \par
00072     Matrix[2][0] = sin(B) * sin(C);\par
00073     Matrix[2][1] = sin(B) * cos(C);\par
00074     Matrix[2][2] = cos(B);\par
00075 \par
00076     CEulerMatrix buffer(Matrix);        {\cf20 // DummyMatrix in DummyEulerMatrix schreiben}\par
00077     {\cf19 return} buffer;                      {\cf20 // Matrix zur\'C3\'BCck geben}\par
00078 \}\par
00079 \par
00080 {\cf20 //TODO: Kommentar}\par
00081 tuple<double , double , double> CEulerMatrix::calculateAngels({\cf18 void})\par
00082 \{\par
00083     {\cf18 double} a, b, c, sin_a, cos_a, sin_b, abs_cos_b, sin_c, cos_c;\par
00084 \par
00085     {\cf20 /*}\par
00086 {\cf20     a == Winkel Alpha}\par
00087 {\cf20     b == Winkel Beta}\par
00088 {\cf20     c == Winkel Gamma}\par
00089 {\cf20 }\par
00090 {\cf20     sin_a == sinus alpha}\par
00091 {\cf20     cos_a == cosinus alpha}\par
00092 {\cf20     sin_b == Matrix[2][0] * -1}\par
00093 {\cf20     abs_cos_b == ??}\par
00094 {\cf20     sin_c == sinus gamma}\par
00095 {\cf20     cos_c == cosinus gamma}\par
00096 {\cf20     */}\par
00097 \par
00098 \par
00099     {\cf20 /* Berechnung von alpha*/}\par
00100     a = atan2(eulerMatrix[1][0], eulerMatrix[0][0]);\par
00101 \par
00102     {\cf20 /* Berechung von beta */}\par
00103     sin_a = sin(a);\par
00104     cos_a = cos(a);\par
00105     sin_b = eulerMatrix[2][0] * -1;\par
00106     abs_cos_b = cos(a) * eulerMatrix[0][0] + sin(a) * eulerMatrix[1][0];\par
00107 \par
00108     b = atan2 (sin_b, abs_cos_b);\par
00109 \par
00110     {\cf20 /* Berechung von gamma */}\par
00111     sin_c =  sin_a * eulerMatrix[0][2] - cos_a * eulerMatrix[1][2];\par
00112     cos_c = -sin_a * eulerMatrix[0][1] + cos_a * eulerMatrix[1][1];\par
00113 \par
00114     c = atan2(sin_c, cos_c);\par
00115 \par
00116     {\cf20 /* Bogenmass in Gradmass umrechnen */}\par
00117     a = a * 180 / M_PI;\par
00118     b = b * 180 / M_PI;\par
00119     c = c * 180 / M_PI;\par
00120 \par
00121 \par
00122     {\cf19 return} make_tuple(a, b, c);     {\cf20 // R\'C3\'BCckgabe der Winkel}\par
00123 \}\par
00124 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/GUI.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/GUI.cpp}
{\xe \v source/GUI.cpp}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../header/GUI.h"}\par
{\f2 #include "../header/SegmentApproximator.h"}\par
{\f2 #include "../header/PathBuilder.h"}\par
{\f2 #include "../header/RobCodeGenerator.h"}\par
{\f2 #include "../header/MeanFilter.h"}\par
{\f2 #include "../header/Logging.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GUI.cpp\par \pard\plain 
{\tc\tcl2 \v source/GUI.cpp}
{\xe \v source/GUI.cpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../header/GUI.h"}\par
00002 \par
00003 {\cf21 #include "../header/SegmentApproximator.h"}\par
00004 {\cf21 #include "../header/PathBuilder.h"}\par
00005 {\cf21 #include "../header/RobCodeGenerator.h"}\par
00006 {\cf21 #include "../header/MeanFilter.h"}\par
00007 {\cf21 #include "../header/Logging.h"}\par
00008 \par
00009 GUI::GUI(QWidget *parent)\par
00010     : QMainWindow(parent)\par
00011 \{\par
00012     ui.setupUi({\cf17 this});\par
00013 \par
00014     {\cf20 //Dateioperationen und Anzeige}\par
00015     inputPathUI = {\cf22 ""};\par
00016     ui.pathInput->setText(inputPathUI);\par
00017     outputPathUI = {\cf22 ""};\par
00018     ui.pathOutput->setText(outputPathUI);\par
00019 \par
00020     connect(ui.pushOutput, &QPushButton::clicked, {\cf17 this}, &GUI::setOutputPath);\par
00021     connect(ui.pushInput, &QPushButton::clicked, {\cf17 this}, &GUI::setInputPath);\par
00022 \par
00023     {\cf20 //Zwingende Einstellwerte}\par
00024     {\cf20 //Douglas-Peuker-Toleranz}\par
00025     ui.dpToleranz->setRange(1, 100);\par
00026     ui.dpToleranz->setSingleStep(1);\par
00027     ui.dpToleranz->setValue(40);\par
00028     connect(ui.dpToleranz, &QSpinBox::valueChanged, {\cf17 this}, &GUI::setDP);\par
00029 \par
00030     {\cf20 //Fenster f\'FCr gleitenden Mittelwert}\par
00031     ui.meanLength->setRange(3, 500);\par
00032     ui.meanLength->setSingleStep(1);\par
00033     ui.meanLength->setValue(50);\par
00034     connect(ui.meanLength, &QSpinBox::valueChanged, {\cf17 this}, &GUI::setMean);\par
00035 \par
00036     {\cf20 //Geschwindigkeit}\par
00037     connect(ui.bSpeed, &QCheckBox::clicked, {\cf17 this}, &GUI::activateSpeed);\par
00038     ui.speed->setRange(0.01, 2);\par
00039     ui.speed->setSingleStep(0.01);\par
00040     ui.speed->setValue(1);\par
00041     connect(ui.speed, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setSpeed);\par
00042 \par
00043     {\cf20 //Ausrichtung}\par
00044     connect(ui.bManOrientation, &QCheckBox::clicked, {\cf17 this}, &GUI::activateOrientation);\par
00045     ui.AValue->setRange(-180, 180);\par
00046     ui.AValue->setSingleStep(5);\par
00047     ui.AValue->setValue(0);\par
00048     connect(ui.AValue, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOrientation);\par
00049 \par
00050     ui.BValue->setRange(-180, 180);\par
00051     ui.BValue->setSingleStep(5);\par
00052     ui.BValue->setValue(90);\par
00053     connect(ui.BValue, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOrientation);\par
00054 \par
00055     ui.CValue->setRange(-180, 180);\par
00056     ui.CValue->setSingleStep(5);\par
00057     ui.CValue->setValue(0);\par
00058     connect(ui.CValue, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOrientation);\par
00059 \par
00060     {\cf20 //Offset}\par
00061     connect(ui.bOffset, &QCheckBox::clicked, {\cf17 this}, &GUI::activateOffset);\par
00062     ui.offsetX->setRange(-400, 400);\par
00063     ui.offsetX->setSingleStep(10);\par
00064     ui.offsetX->setValue(0);\par
00065     connect(ui.offsetX, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOffset);\par
00066 \par
00067     ui.offsetY->setRange(-400, 400);\par
00068     ui.offsetY->setSingleStep(10);\par
00069     ui.offsetY->setValue(0);\par
00070     connect(ui.offsetY, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOffset);\par
00071 \par
00072     ui.offsetZ->setRange(-400, 400);\par
00073     ui.offsetZ->setSingleStep(10);\par
00074     ui.offsetZ->setValue(0);\par
00075     connect(ui.offsetZ, &QDoubleSpinBox::valueChanged, {\cf17 this}, &GUI::setOffset);\par
00076 \par
00077     {\cf20 //Logging}\par
00078     ui.bLogging->setChecked({\cf17 true});\par
00079     inputParameter.setOffset(0, 0, 0, {\cf17 false});\par
00080     connect(ui.bLogging, &QCheckBox::clicked, {\cf17 this}, &GUI::activateLogging);\par
00081 \par
00082     connect(ui.startCalculation, &QPushButton::clicked, {\cf17 this}, &GUI::calculate);\par
00083 \}\par
00084 \par
00085 GUI::~GUI()\par
00086 \{\}\par
00087 \par
00088 {\cf18 void} GUI::activateLogging({\cf18 void})\par
00089 \{\par
00090     inputParameter.setLogging(ui.bLogging->isChecked());\par
00091 \}\par
00092 \par
00093 {\cf18 void} GUI::setOffset({\cf18 void})\par
00094 \{\par
00095     inputParameter.setOffset(ui.offsetX->value(), ui.offsetY->value(), ui.offsetZ->value(),\par
00096         ui.bOffset->isChecked());\par
00097 \}\par
00098 \par
00099 {\cf18 void} GUI::activateOffset({\cf18 void})\par
00100 \{\par
00101     {\cf19 if} (ui.bOffset->isChecked())\par
00102     \{\par
00103         ui.offset->setEnabled({\cf17 true});\par
00104         ui.offset->setStyleSheet({\cf22 "background-color:  rgb(67, 72, 91); color: rgb(3, 8, 14); border: 1px solid black;"});\par
00105     \}\par
00106     {\cf19 else}\par
00107     \{\par
00108         ui.offset->setEnabled({\cf17 false});\par
00109         ui.offset->setStyleSheet({\cf22 "background-color: rgb(210,211,218); color: rgb(117,125,149)"});\par
00110         ui.offsetX->setValue(0);\par
00111         ui.offsetY->setValue(0);\par
00112         ui.offsetZ->setValue(0);\par
00113         inputParameter.setOffset(0, 0, 0, {\cf17 false});\par
00114     \}\par
00115 \}\par
00116 \par
00117 {\cf18 void} GUI::setOrientation({\cf18 void})\par
00118 \{\par
00119     inputParameter.setOrientation(ui.AValue->value(), ui.BValue->value(), ui.CValue->value(),\par
00120         ui.bManOrientation->isChecked());\par
00121 \}\par
00122 \par
00123 {\cf18 void} GUI::activateOrientation({\cf18 void})\par
00124 \{\par
00125     {\cf19 if} (ui.bManOrientation->isChecked())\par
00126     \{\par
00127         ui.orientation->setEnabled({\cf17 true});\par
00128         ui.orientation->setStyleSheet({\cf22 "background-color:  rgb(67, 72, 91); color: rgb(3, 8, 14); border: 1px solid black;"});\par
00129     \}\par
00130     {\cf19 else}\par
00131     \{\par
00132         ui.orientation->setEnabled({\cf17 false});\par
00133         ui.orientation->setStyleSheet({\cf22 "background-color: rgb(210,211,218); color: rgb(117,125,149)"});\par
00134     \}\par
00135 \}\par
00136 \par
00137 {\cf18 void} GUI::setSpeed({\cf18 void})\par
00138 \{\par
00139     inputParameter.setSpeed(ui.speed->value(), ui.bSpeed->isChecked());\par
00140 \}\par
00141 \par
00142 {\cf18 void} GUI::activateSpeed({\cf18 void})\par
00143 \{\par
00144     {\cf19 if} (ui.bSpeed->isChecked())\par
00145     \{\par
00146         ui.speed_2->setEnabled({\cf17 true});\par
00147         ui.speed_2->setStyleSheet({\cf22 "background-color:  rgb(67, 72, 91); color: rgb(3, 8, 14); border: 1px solid black; "});\par
00148     \}\par
00149     {\cf19 else}\par
00150     \{\par
00151         ui.speed_2->setEnabled({\cf17 false});\par
00152         ui.speed_2->setStyleSheet({\cf22 "background-color: rgb(210,211,218); color: rgb(117,125,149)"});\par
00153     \}\par
00154 \}\par
00155 \par
00156 {\cf18 void} GUI::setMean({\cf18 void})\par
00157 \{\par
00158     meanLength = ui.meanLength->value();\par
00159 \}\par
00160 \par
00161 \par
00162 {\cf18 void} GUI::setDP({\cf18 void})\par
00163 \{\par
00164     dpTolerance = ui.dpToleranz->value();\par
00165 \}\par
00166 \par
00167 {\cf18 void} GUI::setInputPath({\cf18 void})\par
00168 \{\par
00169     inputPathUI = QFileDialog::getOpenFileName({\cf17 this});\par
00170     ui.pathInput->setText(inputPathUI);\par
00171 \}\par
00172 \par
00173 {\cf18 void} GUI::setOutputPath({\cf18 void})\par
00174 \{\par
00175     outputPathUI = QFileDialog::getExistingDirectory({\cf17 this});\par
00176     ui.pathOutput->setText(outputPathUI);\par
00177 \}\par
00178 \par
00179 {\cf18 void} GUI::calculate()\par
00180 \{\par
00181 \par
00182     {\cf19 if} (inputPathUI.isEmpty() || outputPathUI.isEmpty())\par
00183     \{\par
00184         QMessageBox messageBox;\par
00185         messageBox.critical(0, {\cf22 "Error"}, {\cf22 "Keine Datei ausgew\'E4hlt!"});\par
00186         messageBox.setFixedSize(500, 200);\par
00187         {\cf19 return};\par
00188     \}\par
00189 \par
00190     {\cf19 try}\par
00191     \{\par
00192         {\cf18 string} outputPath = outputPathUI.toUtf8().constData();\par
00193         {\cf18 string} inputPath = inputPathUI.toUtf8().constData();\par
00194         ui.textBrowser->clear();\par
00195 \par
00196         {\cf20 //logging Initialisieren}\par
00197         CLogging logging(outputPath, inputParameter.getLoggingManual());\par
00198 \par
00199         {\cf20 //read Data}\par
00200         inputParameter.openFile(inputPath);\par
00201         ui.textBrowser->insertPlainText({\cf22 "Datei eingelesen\\n"});\par
00202 \par
00203         {\cf20 //moving Average}\par
00204 \par
00205         CMeanFilter meanFilter;\par
00206         meanFilter.setWindowSize(meanLength);\par
00207         meanFilter.mean(inputParameter.getPath(), logging);\par
00208         ui.textBrowser->insertPlainText({\cf22 "Gleitender Mittelwert berechnet\\n"});\par
00209 \par
00210         {\cf20 // Douglas-Peuker Algorithm}\par
00211 \par
00212         CSegmentApproximator segmentApproximator;\par
00213         segmentApproximator.setmaxDistance(dpTolerance);\par
00214         segmentApproximator.approx(meanFilter.getPath(), logging);\par
00215         ui.textBrowser->insertPlainText({\cf22 "Douglas-Peuker-Algorithmus berechnet\\n"});\par
00216 \par
00217         {\cf20 // Puts the Segments together to one path}\par
00218 \par
00219         CPathBuilder pathBuilder;\par
00220         pathBuilder.createPath(segmentApproximator.getSegmentsApproxVector(), logging);\par
00221         ui.textBrowser->insertPlainText({\cf22 "Pfad zusammengesetzt\\n"});\par
00222 \par
00223         {\cf20 // Calculates Speed, Angle and generates the Output Data}\par
00224 \par
00225         CRobCodeGenerator codeGenerator(inputParameter);\par
00226         codeGenerator.generateRobCode(pathBuilder.getPath(), outputPath, {\cf22 "robCode.src"});\par
00227         ui.textBrowser->insertPlainText({\cf22 "Datei erstellt\\n"});;\par
00228     \}\par
00229 \par
00230     {\cf19 catch} (exception& e)\par
00231     \{\par
00232         cerr << e.what() << {\cf22 "\\n"};\par
00233     \}\par
00234 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/InputParameter.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/InputParameter.cpp}
{\xe \v source/InputParameter.cpp}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Daten Einlesen. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../header/InputParameter.h"}\par
{\f2 #include "../header/Point3D.h"}\par
{\f2 #include "../header/EulerMatrix.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Daten Einlesen. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b InputParameter.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InputParameter.cpp\par \pard\plain 
{\tc\tcl2 \v source/InputParameter.cpp}
{\xe \v source/InputParameter.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "../header/InputParameter.h"}\par
00008 {\cf21 #include "../header/Point3D.h"}\par
00009 {\cf21 #include "../header/EulerMatrix.h"}\par
00010 \par
00011 {\cf20 /* CInputParamameter mir \'DCbergabewerten initialisieren */} \par
00012 CInputParameter::CInputParameter({\cf18 double} initSpeed, {\cf18 bool} initSpeedManual, {\cf18 bool} initOrientationManual, {\cf18 double} initA, {\cf18 double} initB, {\cf18 double} initC)\par
00013 \{\par
00014     speed = initSpeed;\par
00015     speedManual = initSpeedManual;\par
00016     orientationManual = initOrientationManual;\par
00017     A = initA;\par
00018     B = initB;\par
00019     C = initC;\par
00020 \par
00021 \}\par
00022 \par
00023 {\cf20 /* CInputParameter mit 0 initialisieren */}\par
00024 CInputParameter::CInputParameter({\cf18 void})\par
00025 \{\par
00026     speed = 0.1;\par
00027     A = 0;\par
00028     B = 75;\par
00029     C = 0;\par
00030     speedManual = {\cf17 false},\par
00031     orientationManual = {\cf17 false};\par
00032 \par
00033 \}\par
00034 \par
00035 CInputParameter::~CInputParameter({\cf18 void})\par
00036 \{\par
00037 \par
00038 \}\par
00039 \par
00040 {\cf20 /* Einstellung f\'FCr Orientierung und Winkel setzten */}\par
00041 {\cf18 void} CInputParameter::setOrientation({\cf18 bool} initOrientationManual, {\cf18 double} initA, {\cf18 double} initB, {\cf18 double} initC)\par
00042 \{\par
00043     orientationManual = initOrientationManual;\par
00044     A = initA;\par
00045     B = initB;\par
00046     C = initC;\par
00047 \}\par
00048 \par
00049 {\cf18 void} CInputParameter::setOffset({\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z, {\cf18 bool} initOffsetManual)\par
00050 \{\par
00051     offsetManual = initOffsetManual;\par
00052     offsetX = X;\par
00053     offsetY = Y;\par
00054     offsetZ = Z;\par
00055 \}\par
00056 \par
00057 {\cf18 void} CInputParameter::setLogging({\cf18 bool} initLoggingManual)\par
00058 \{\par
00059     loggingManual = initLoggingManual;\par
00060 \}\par
00061 \par
00062 {\cf20 /* Einstellung f\'FCr Geschwindigkeit und Geschwindigkeit setzen */}\par
00063 {\cf18 void} CInputParameter::setSpeed({\cf18 double} initSpeed, {\cf18 bool} initSpeedManual)\par
00064 \{\par
00065     speed = initSpeed;\par
00066     speedManual = initSpeedManual;\par
00067 \}\par
00068 \par
00069 vector<list<CInputPoint3D>>& CInputParameter::getPath()\par
00070 \{\par
00071     {\cf19 return} initialPath;     {\cf20 // Path zur\'FCck geben}\par
00072 \}\par
00073 \par
00074 {\cf18 double} CInputParameter::getSpeed({\cf18 void})\par
00075 \{\par
00076     {\cf19 return} speed;           {\cf20 // Geschwindigkeit zur\'FCck geben}\par
00077 \}\par
00078 \par
00079 {\cf18 bool} CInputParameter::getSpeedManual({\cf18 void})\par
00080 \{\par
00081     {\cf19 return} speedManual;             {\cf20 // Vorgew\'E4hlte Einstellung f\'FCr Geschwindigkeit zur\'FCck geben}\par
00082 \}\par
00083 \par
00084 {\cf18 bool} CInputParameter::getOrientationManual({\cf18 void})\par
00085 \{\par
00086     {\cf19 return} orientationManual;       {\cf20 // Vorgew\'E4hlte Einstellung f\'FCr Orientierung zur\'FCck geben}\par
00087 \}\par
00088 \par
00089 {\cf18 bool} CInputParameter::getOffsetManual({\cf18 void})\par
00090 \{\par
00091     {\cf19 return} offsetManual;        {\cf20 // Vorgew\'E4hlte Einstellung f\'FCr den Offset zur\'FCck}\par
00092 \}\par
00093 \par
00094 {\cf18 bool} CInputParameter::getLoggingManual({\cf18 void})\par
00095 \{\par
00096     {\cf19 return} loggingManual;       {\cf20 // Vorgew\'E4hlte Einstellung f\'FCr das Logging zur\'FCck}\par
00097 \}\par
00098 \par
00099 tuple <double, double, double> CInputParameter::getAngles({\cf18 void})\par
00100 \{\par
00101     {\cf19 return} make_tuple(A, B, C);     {\cf20 // Winkel zur\'FCck geben}\par
00102 \}\par
00103 \par
00104 tuple <double, double, double> CInputParameter::getOffset({\cf18 void})\par
00105 \{\par
00106     {\cf19 return} make_tuple(offsetX, offsetY, offsetZ);       {\cf20 // Offset zur\'FCck geben}\par
00107 \}\par
00108 \par
00109 \par
00110 {\cf20 /* Eingabedatei \'F6ffnen */} \par
00111 {\cf18 void} CInputParameter::openFile({\cf18 string} path)\par
00112 \{\par
00113     ifstream fin(path);\par
00114     CInputPoint3D tmpPoint;     {\cf20 // Zwischenspeicher zum konvertieren von tmpEuler in Point3D}\par
00115     CEulerMatrix tmpEuler;      {\cf20 // Zwischenspeicher zum konverteiren von DummyMatrix in EulerMatrix}\par
00116     {\cf18 double} x, y, z;             {\cf20 // Punktkoordinaten}\par
00117     {\cf18 double} x_prev = 0, y_prev = 0, z_prev = 0;      {\cf20 // Zwischenspeicher f\'FCr Punktkoordinaten}\par
00118     {\cf18 double} timestamp;           {\cf20 // Zeitstempel}\par
00119     {\cf18 int} segmentCount = -1;      {\cf20 // Segmentz\'E4hler}\par
00120     {\cf18 float} dummyMatrix[3][3];    {\cf20 // DummyMatrix zum speichern}\par
00121 \par
00122 \par
00123     {\cf19 if} (!fin.is_open())\par
00124     \{\par
00125         cerr << {\cf22 "Datei konnte nicht ge\'F6ffnet werden"} << endl;       {\cf20 // Fehler Datei konnte nicht ge\'F6ffnet werden.}\par
00126     \}\par
00127     {\cf18 string} line;\par
00128 \par
00129     {\cf19 while}(getline(fin, line))\par
00130     \{\par
00131         std::istringstream sStream (line);\par
00132         sStream >> timestamp >> x >> y >> z >> dummyMatrix[0][0] >> dummyMatrix[0][1] >> dummyMatrix[0][2]                                      {\cf20 // Zeile in die einzelnen Parameter zerlegen }\par
00133             >> dummyMatrix[1][0] >> dummyMatrix[1][1] >> dummyMatrix[1][2] >> dummyMatrix[2][0] >> dummyMatrix[2][1] >> dummyMatrix[2][2];      {\cf20 // und in DummyMatrix bzw. Variablen abspeichern}\par
00134 \par
00135         tmpEuler.setMatrix(dummyMatrix);                                    {\cf20 // DummyMatrix[3][3] in EulerMatrix speichern                           }\par
00136         tmpPoint.setPoint(timestamp, x, y, z, tmpEuler.getEulerMatrix());   {\cf20 // Variablen und EulerWinkel in CPoint3D speichern}\par
00137 \par
00138         {\cf19 if} (detectJump(tmpPoint, x_prev, y_prev, z_prev)) {\cf20 // if there is a jump in the data, start da new segment }\par
00139         \{\par
00140             segmentCount++;                                 {\cf20 // neues Segement anlegen}\par
00141             initialPath.push_back(list<CInputPoint3D>());   {\cf20 // Punkt in Segent speichern}\par
00142         \}\par
00143 \par
00144         initialPath[segmentCount].push_back(tmpPoint);      {\cf20 // Punkt in bestehendes Segment abspeichern}\par
00145 \par
00146         x_prev = x;     {\cf20 // X-Wert zwischenspeichern}\par
00147         y_prev = y;     {\cf20 // Y-Wert zwischenspeichern}\par
00148         z_prev = z;     {\cf20 // Z-Wert zwischenspeichern}\par
00149     \}\par
00150     fin.close();        {\cf20 // Datei schlie\'DFen}\par
00151 \}\par
00152 \par
00153 {\cf18 bool} CInputParameter::detectJump(CInputPoint3D p, {\cf18 double} x_prev, {\cf18 double}  y_prev, {\cf18 double} z_prev)\par
00154 \{\par
00155     {\cf19 if}(abs(p.getX() - x_prev) > difference)             {\cf20 // Abstand zwischen Punkten gr\'F6\'DFer max Differenz??}\par
00156         {\cf19 return} {\cf17 true};\par
00157     {\cf19 else} {\cf19 if}(abs(p.getY() - y_prev) > difference)        {\cf20 // Abstand zwischen Punkten gr\'F6\'DFer max Differenz??}\par
00158         {\cf19 return} {\cf17 true};\par
00159     {\cf19 else} {\cf19 if}(abs(p.getZ() - z_prev) > difference)            {\cf20 // Abstand zwischen Punkten gr\'F6\'DFer max Differenz??}\par
00160         {\cf19 return} {\cf17 true};\par
00161     {\cf19 else}\par
00162         {\cf19 return} {\cf17 false};\par
00163 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/Line3D.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/Line3D.cpp}
{\xe \v source/Line3D.cpp}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Line3D. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../header/Line3D.h"}\par
{\f2 #include "../header/Point3D.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Line3D. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b Line3D.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Line3D.cpp\par \pard\plain 
{\tc\tcl2 \v source/Line3D.cpp}
{\xe \v source/Line3D.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "../header/Line3D.h"}\par
00008 {\cf21 #include "../header/Point3D.h"}\par
00009 \par
00010 CLine3D::CLine3D({\cf18 void})\par
00011 \{\par
00012 \}\par
00013 \par
00014 {\cf20 /* initialisieren mit 2 Punkten*/}\par
00015 CLine3D::CLine3D(CPoint3D P1, CPoint3D P2)\par
00016 \{\par
00017     p1 = P1;\par
00018     p2 = P2;\par
00019 \}\par
00020 \par
00021 CLine3D::~CLine3D({\cf18 void})\par
00022 \{\par
00023 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/Logging.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/Logging.cpp}
{\xe \v source/Logging.cpp}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Logging. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../header/Logging.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Logging. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b Logging.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Logging.cpp\par \pard\plain 
{\tc\tcl2 \v source/Logging.cpp}
{\xe \v source/Logging.cpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "../header/Logging.h"}\par
00008 \par
00009 {\cf20 /* Step mit 0 initialisiren */}\par
00010 CLogging::CLogging({\cf18 void})\par
00011 \{\par
00012     step = 0;\par
00013 \}\par
00014 \par
00015 {\cf20 /* Path mit Parameter initialisieren*/}\par
00016 CLogging::CLogging({\cf18 string} Path, {\cf18 bool} Detailed)\par
00017 \{\par
00018     path = Path;\par
00019     detailed = Detailed;\par
00020 \}\par
00021 \par
00022 CLogging::~CLogging({\cf18 void})\par
00023 \{\par
00024 \par
00025 \}\par
00026 \par
00027 {\cf18 bool} CLogging::getDetailed({\cf18 void})\par
00028 \{\par
00029     {\cf19 return} detailed;\par
00030 \}\par
00031 \par
00032 {\cf18 void} CLogging::setStep({\cf18 int} Step)\par
00033 \{\par
00034     step = Step;    {\cf20 // Step setzen}\par
00035 \}\par
00036 \par
00037 {\cf18 void} CLogging::logData(vector<list<CInputPoint3D>>& sourcePath)\par
00038 \{\par
00039     {\cf18 string} filepath;            {\cf20 // file Pfad}\par
00040     {\cf18 float} dummyMatrix[3][3];    {\cf20 // dummyMatrix zum Zwischenspeichern}\par
00041     CEulerMatrix tmpEuler;      {\cf20 // CEulerMatrix zum Zwischenspeichern}\par
00042 \par
00043     filepath = path + {\cf22 "/"} + {\cf22 "0"} + std::to_string(step) + {\cf22 "_path.csv"};\par
00044 \par
00045     FILE* fid = fopen(filepath.c_str(), {\cf22 "w"});       {\cf20 // file \'F6ffnen}\par
00046 \par
00047     {\cf19 if} (fid == NULL)\par
00048     \{\par
00049         cerr << {\cf22 "ERROR - Can NOT write to output file!\\n"};      {\cf20 // Fehler beim file \'F6ffnen}\par
00050         {\cf19 return};\par
00051     \}\par
00052 \par
00053     {\cf19 for} ({\cf18 size_t} s = 0; s < sourcePath.size(); s++) {\cf20 //for all segments}\par
00054     \{\par
00055         list<CInputPoint3D>::iterator itr = sourcePath[s].begin();\par
00056 \par
00057         tmpEuler = itr->getEulerMatrix();\par
00058         tmpEuler.getMatrix(dummyMatrix);\par
00059 \par
00060         {\cf20 /* Ausgeben der Punkte mit dummyMatrix */}\par
00061         {\cf19 for} (; itr != sourcePath[s].end(); itr++) {\cf20 //for all points in the segment}\par
00062         \{\par
00063             fprintf(fid, {\cf22 "%f %f %f %f %f %f %f %f %f %f %f %f %f\\n"}, ({\cf18 double})itr->getTime(), ({\cf18 double})itr->getX(), ({\cf18 double})itr->getY(), ({\cf18 double})itr->getZ(),\par
00064                 dummyMatrix[0][0], dummyMatrix[0][1], dummyMatrix[0][2],\par
00065                 dummyMatrix[1][0], dummyMatrix[1][1], dummyMatrix[1][2],\par
00066                 dummyMatrix[2][0], dummyMatrix[2][1], dummyMatrix[2][2]);\par
00067         \}\par
00068 \par
00069         itr--;\par
00070     \}\par
00071 \}\par
00072 \par
00073 {\cf18 void} CLogging::logData(vector<CInputPoint3D>& sourcePath)\par
00074 \{\par
00075     {\cf18 string} filepath;            {\cf20 // file Pfad}\par
00076     {\cf18 float} dummyMatrix[3][3];    {\cf20 // dummyMatrix zum Zwischenspeichern}\par
00077     CEulerMatrix tmpEuler;      {\cf20 // CEulerMatrix zum Zwischenspeichern}\par
00078 \par
00079     filepath = path + {\cf22 "/"} + {\cf22 "0"} + std::to_string(step) + {\cf22 "_path.csv"};\par
00080 \par
00081     FILE* fid = fopen(filepath.c_str(), {\cf22 "w"});   {\cf20 // file \'F6ffnen}\par
00082 \par
00083     {\cf19 if} (fid == NULL)\par
00084     \{\par
00085         cerr << {\cf22 "ERROR - Can NOT write to output file!\\n"};  {\cf20 // Fehler beim file \'F6ffnen}\par
00086         {\cf19 return};\par
00087     \}\par
00088 \par
00089     {\cf20 /* Ausgeben der Punkte mit dummyMatrix */}\par
00090     {\cf19 for} ({\cf18 size_t} s = 0; s < sourcePath.size(); s++) {\cf20 //for all points in the vector}\par
00091     \{\par
00092         tmpEuler.getMatrix(dummyMatrix);\par
00093 \par
00094         fprintf(fid, {\cf22 "%f %f %f %f %f %f %f %f %f %f %f %f %f\\n"}, ({\cf18 double})sourcePath[s].getTime(), \par
00095             ({\cf18 double})sourcePath[s].getX(), ({\cf18 double})sourcePath[s].getY(), ({\cf18 double})sourcePath[s].getZ(),\par
00096             dummyMatrix[0][0], dummyMatrix[0][1], dummyMatrix[0][2],\par
00097             dummyMatrix[1][0], dummyMatrix[1][1], dummyMatrix[1][2],\par
00098             dummyMatrix[2][0], dummyMatrix[2][1], dummyMatrix[2][2]);\par
00099     \}\par
00100 \}\par
00101 \par
00102 {\cf18 void} CLogging::logData(vector<COutputPoint3D>& sourcePath)\par
00103 \{\par
00104     {\cf18 string} filepath;            {\cf20 // file Pfad}\par
00105     {\cf18 float} dummyMatrix[3][3];    {\cf20 // dummyMatrix zum Zwischenspeichern}\par
00106     CEulerMatrix tmpEuler;      {\cf20 // CEulerMatrix zum Zwischenspeichern}\par
00107 \par
00108     filepath = path + {\cf22 "/"} + {\cf22 "0"} + std::to_string(step) + {\cf22 "_path.csv"};\par
00109 \par
00110     FILE* fid = fopen(filepath.c_str(), {\cf22 "w"});   {\cf20 // file \'F6ffnen}\par
00111 \par
00112     {\cf19 if} (fid == NULL)\par
00113     \{\par
00114         cerr << {\cf22 "ERROR - Can NOT write to output file!\\n"};  {\cf20 // Fehler beim file \'F6ffnen}\par
00115         {\cf19 return};\par
00116     \}\par
00117 \par
00118     {\cf20 /* Ausgeben der Punkte mit dummyMatrix */}\par
00119     {\cf19 for} ({\cf18 size_t} s = 0; s < sourcePath.size(); s++) {\cf20 //for all points in the vector}\par
00120     \{\par
00121         tmpEuler.getMatrix(dummyMatrix);\par
00122 \par
00123         fprintf(fid, {\cf22 "%f %f %f %f %f %f %f %f %f %f %f %f %f\\n"}, ({\cf18 double})sourcePath[s].getSpeed(),\par
00124             ({\cf18 double})sourcePath[s].getX(), ({\cf18 double})sourcePath[s].getY(), ({\cf18 double})sourcePath[s].getZ(),\par
00125             ({\cf18 double})sourcePath[s].getA(), ({\cf18 double})sourcePath[s].getB(), ({\cf18 double})sourcePath[s].getC());\par
00126     \}\par
00127 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/MeanFilter.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/MeanFilter.cpp}
{\xe \v source/MeanFilter.cpp}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File gleitender Mittelwertfilter. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../header/MeanFilter.h"}\par
{\f2 #include "../header/Logging.h"}\par
{\f2 #include <math.h>}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File gleitender Mittelwertfilter. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b MeanFilter.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MeanFilter.cpp\par \pard\plain 
{\tc\tcl2 \v source/MeanFilter.cpp}
{\xe \v source/MeanFilter.cpp}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "../header/MeanFilter.h"}\par
00008 {\cf21 #include "../header/Logging.h"}\par
00009 {\cf21 #include <math.h>}\par
00010 \par
00011 CMeanFilter::CMeanFilter()\par
00012 \{\par
00013     windowSize = 3;         {\cf20 // initialisieren mit Standardfenstergr\'F6\'DFe 3}\par
00014 \}\par
00015 \par
00016 CMeanFilter::CMeanFilter({\cf18 int} Window)\par
00017 \{\par
00018     windowSize = Window;    {\cf20 // initialisieren der Fenstergr\'F6\'DFe mit \'DCbergabewert}\par
00019 \}\par
00020 \par
00021 CMeanFilter::~CMeanFilter()\par
00022 \{\par
00023 \}\par
00024 \par
00025 {\cf18 void} CMeanFilter::setWindowSize({\cf18 int} Window)\par
00026 \{\par
00027     windowSize = Window;    {\cf20 // setzen der Fenstergr\'F6\'DFe mit \'DCbergabewert}\par
00028 \}\par
00029 \par
00030 {\cf18 int} CMeanFilter::getWindowSize()\par
00031 \{\par
00032     {\cf19 return} windowSize;      {\cf20 // Fenstergr\'F6\'DFe zur\'FCck geben}\par
00033 \}\par
00034 \par
00035 vector<list<CInputPoint3D>>& CMeanFilter::getPath()\par
00036 \{\par
00037     {\cf19 return} meanPath;        {\cf20 // Mittelwert zur\'FCck geben}\par
00038 \}\par
00039 \par
00040 {\cf18 void} CMeanFilter::mean(vector<list<CInputPoint3D>>& sourcePath, CLogging log)\par
00041 \{\par
00042     list<CInputPoint3D> dummyList;\par
00043     {\cf19 for} ({\cf18 size_t} s = 0; s < sourcePath.size(); s++)\par
00044     \{\par
00045         dummyList = calculateMean(sourcePath[s]);\par
00046         meanPath.push_back(dummyList);\par
00047     \}\par
00048     {\cf19 if} (log.getDetailed())\par
00049     \{\par
00050         log.setStep(2);\par
00051         log.logData(meanPath);\par
00052     \}\par
00053 \}\par
00054 \par
00055 list<CInputPoint3D> CMeanFilter::calculateMean(list<CInputPoint3D>& segment)\par
00056 \{\par
00057     {\cf18 double} sumX = 0, sumY = 0, sumZ = 0;    {\cf20 // Variablen zum Speichern der Summe}\par
00058     {\cf18 double} div = 0;                         {\cf20 // Variable zum Speichern des Teilers}\par
00059 \par
00060     CInputPoint3D p;        {\cf20 //Point3D zum Zwischenspeichern}\par
00061 \par
00062     {\cf18 size_t} inputSize = segment.size();\par
00063 \par
00064     list<CInputPoint3D>::iterator it = segment.begin();\par
00065     list<CInputPoint3D> newSegment;\par
00066 \par
00067     {\cf19 for} ({\cf18 size_t} i = 0; i < inputSize - windowSize; ++i) {\cf20 //For each element in the Segment}\par
00068     \{\par
00069         sumX = 0, sumY = 0, sumZ = 0;   {\cf20 // Variablen zum Speichern der Summe auf 0 zur\'FCck setzen}\par
00070         div = 0;                        {\cf20 // Variable zum Speichern des Teilers auf 0 zur\'FCck setzen}\par
00071         p.setTime(it->getTime());\par
00072         p.setEulerMatrix(it->getEulerMatrix());\par
00073         {\cf19 for} ({\cf18 size_t} j = i; j < i + windowSize; ++j) {\cf20 // Build the sums for the three points}\par
00074         \{\par
00075             sumX += it->getX();\par
00076             sumY += it->getY();\par
00077             sumZ += it->getZ();\par
00078             div++;\par
00079             it++;\par
00080         \}\par
00081         {\cf19 for} ({\cf18 size_t} index = windowSize; index > 0; index--) {\cf20 // Pain, the iterator has to be set back}\par
00082         \{\par
00083             it--;\par
00084         \}\par
00085         p.set(sumX / div, sumY / div, sumZ / div); {\cf20 // Calculate smoothed values}\par
00086         {\cf19 if}(it != segment.end())\par
00087             it++;\par
00088         newSegment.push_back(p);\par
00089     \}\par
00090     {\cf19 return} newSegment;\par
00091 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/PathBuilder.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/PathBuilder.cpp}
{\xe \v source/PathBuilder.cpp}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Segmente zu Pfad. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../header/PathBuilder.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Segmente zu Pfad. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b PathBuilder.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PathBuilder.cpp\par \pard\plain 
{\tc\tcl2 \v source/PathBuilder.cpp}
{\xe \v source/PathBuilder.cpp}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "../header/PathBuilder.h"}\par
00008 \par
00009 CPathBuilder::CPathBuilder({\cf18 void})\par
00010 \{\par
00011 \}\par
00012 \par
00013 \par
00014 CPathBuilder::~CPathBuilder({\cf18 void})\par
00015 \{\par
00016 \}\par
00017 \par
00018 vector<CInputPoint3D>& CPathBuilder::getPath()\par
00019 \{\par
00020     {\cf19 return} path;\par
00021 \}\par
00022 \par
00023 {\cf18 void} CPathBuilder::createPath(vector<list<CInputPoint3D>>& segments, CLogging log)\par
00024 \{\par
00025     CInputPoint3D point; {\cf20 //startpoint}\par
00026 \par
00027     {\cf19 for} ({\cf18 size_t} s = 0; s < segments.size(); s++) {\cf20 //for all segments}\par
00028     \{\par
00029         list<CInputPoint3D>::iterator itr = segments[s].begin();\par
00030 \par
00031         {\cf19 for} (; itr != segments[s].end(); itr++) {\cf20 //for all points in the segment}\par
00032         \{\par
00033             point.set(({\cf18 double})itr->getX(), ({\cf18 double})itr->getY(), ({\cf18 double})itr->getZ());\par
00034             point.setTime(itr->getTime());\par
00035             point.setEulerMatrix(itr->getEulerMatrix());\par
00036             path.push_back(point);\par
00037         \}\par
00038 \par
00039         itr--;\par
00040     \}\par
00041     {\cf19 if} (log.getDetailed())\par
00042     \{\par
00043         log.setStep(4);\par
00044         log.logData(path);\par
00045     \}\par
00046 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/Point3D.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/Point3D.cpp}
{\xe \v source/Point3D.cpp}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Punkte. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../header/Point3D.h"}\par
{\f2 #include "../header/Line3D.h"}\par
{\f2 #include <math.h>}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Punkte. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b Point3D.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Point3D.cpp\par \pard\plain 
{\tc\tcl2 \v source/Point3D.cpp}
{\xe \v source/Point3D.cpp}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "../header/Point3D.h"}\par
00008 {\cf21 #include "../header/Line3D.h"}\par
00009 {\cf21 #include <math.h>}\par
00010 \par
00011 \par
00012 {\cf20 /* initialisieren des Punktes mit 0-Werten */}\par
00013 CPoint3D::CPoint3D({\cf18 void})\par
00014 \{\par
00015     x = 0;\par
00016     y = 0;\par
00017     z = 0;\par
00018 \}\par
00019 \par
00020 {\cf20 /* initialiseren des Punktes mit Koordinaten */}\par
00021 CPoint3D::CPoint3D({\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z)\par
00022 \{\par
00023     x = X;\par
00024     y = Y;\par
00025     z = Z;\par
00026 \}\par
00027 \par
00028 CPoint3D::~CPoint3D({\cf18 void})\par
00029 \{\par
00030 \}\par
00031 \par
00032 {\cf18 double} CPoint3D::getX({\cf18 void})\par
00033 \{\par
00034     {\cf19 return} x;   {\cf20 // X-Koordinate zur\'FCck geben}\par
00035 \}\par
00036 \par
00037 {\cf18 double} CPoint3D::getY({\cf18 void})\par
00038 \{\par
00039     {\cf19 return} y;   {\cf20 // Y-Koordinate zur\'FCck geben}\par
00040 \}\par
00041 \par
00042 {\cf18 double} CPoint3D::getZ({\cf18 void})\par
00043 \{\par
00044     {\cf19 return} z;   {\cf20 // Z-Koordinate zur\'FCck geben}\par
00045 \}\par
00046 \par
00047 {\cf18 void} CPoint3D::setX({\cf18 double} X)\par
00048 \{\par
00049     x = X;  {\cf20 // X-Koordinate setzen}\par
00050 \}\par
00051 \par
00052 {\cf18 void} CPoint3D::setY({\cf18 double} Y)\par
00053 \{\par
00054     y = Y;  {\cf20 // Y-Koordinate setzen}\par
00055 \}\par
00056 \par
00057 {\cf18 void} CPoint3D::setZ({\cf18 double} Z)\par
00058 \{\par
00059     z = Z;  {\cf20 // Z-Koordinate setzen}\par
00060 \}\par
00061 \par
00062 {\cf20 /* X-, Y- und Z-Koordinate setzen */}\par
00063 {\cf18 void} CPoint3D::set({\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z)\par
00064 \{\par
00065     x = X;  {\cf20 // X-Koordinate setzen}\par
00066     y = Y;  {\cf20 // Y-Koordinate setzen}\par
00067     z = Z;  {\cf20 // Z-Koordinate setzen}\par
00068 \}   \par
00069 \par
00070 {\cf20 /* Distanz zwischen Punkt und \'FCbergebenen Punkt berechnen */}\par
00071 {\cf18 double} CPoint3D::distanceTo(CPoint3D point)\par
00072 \{\par
00073     {\cf19 return} sqrt(pow(({\cf18 double})(x - ({\cf18 double})point.getX()), 2) + pow(({\cf18 double})(y - ({\cf18 double})point.getY()), 2) + pow(({\cf18 double})(z - ({\cf18 double})point.getZ()), 2));  {\cf20 //  Pythagoras 3D}\par
00074 \}\par
00075 \par
00076 {\cf18 double} CPoint3D::distanceTo(CLine3D line)\par
00077 \{\par
00078     {\cf18 double} bx, by, bz, rv_sq, dist, vp1, vp2, vp3;          {\cf20 // Variablen Anlegen}\par
00079 \par
00080     {\cf20 /*}\par
00081 {\cf20     Vermessen wird der Punkt selbst}\par
00082 {\cf20 }\par
00083 {\cf20     bx, by, bz      == Vektordifferenz}\par
00084 {\cf20     rv_sq           == Betrag des Linienvektors}\par
00085 {\cf20     dist            == Distanz von Punkt zu Linie}\par
00086 {\cf20     vp1, vp2, vp3   == Vektorprodukte}\par
00087 {\cf20     */}\par
00088 \par
00089     {\cf18 int} rvx = line.p1.x - line.p2.x;        {\cf20 // Parameter X des Linienvektor berechnen}\par
00090     {\cf18 int} rvy = line.p1.y - line.p2.y;        {\cf20 // Parameter Y des Linienvektor berechnen}\par
00091     {\cf18 int} rvz = line.p1.z - line.p2.z;        {\cf20 // Parameter Z des Linienvektor berechnen}\par
00092 \par
00093     rv_sq = sqrt((({\cf18 double})rvx * ({\cf18 double})rvx) + (({\cf18 double})rvy * ({\cf18 double})rvy) + (({\cf18 double})rvz * ({\cf18 double})rvz));      {\cf20 // Betrag des Linienvektor berechnen}\par
00094 \par
00095     bx = x - (double)line.p1.x;             {\cf20 // X(Punkt) - X(Aufpunkt) }\par
00096     by = y - (double)line.p1.y;             {\cf20 // Y(Punkt) - Y(Aufpunkt)}\par
00097     bz = z - (double)line.p1.z;             {\cf20 // Z(Punkt) - Z(Aufpunkt)}\par
00098 \par
00099     vp1 = by * rvz - bz * rvy;              {\cf20 // Parameter X Vektorprodukt}\par
00100     vp2 = bz * rvx - bx * rvz;              {\cf20 // Parameter Y Vektorprodukt}\par
00101     vp3 = bx * rvy - by * rvx;              {\cf20 // Parameter Z Vektorprodukt}\par
00102 \par
00103     dist = sqrt(vp1 * vp1 + vp2 * vp2 + vp3 * vp3) / rv_sq; {\cf20 // Betrag des Vektors berechnen}\par
00104 \par
00105     {\cf19 return} dist;\par
00106 \}\par
00107 \par
00108 {\cf20 // InputPoint3D}\par
00109 \par
00110 CInputPoint3D::CInputPoint3D({\cf18 void}) : CPoint3D()\par
00111 \{\par
00112     timestamp = 0;      {\cf20 // Zeitstempel mit 0 initialisieren}\par
00113 \}\par
00114 \par
00115 {\cf20 /* Initialisieren des Punktes mit Parameter */}\par
00116 CInputPoint3D::CInputPoint3D({\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z, {\cf18 double} Timestamp, CEulerMatrix Matrix)\par
00117 \{\par
00118     x = X;\par
00119     y = Y;\par
00120     z = Z;\par
00121     timestamp = Timestamp;\par
00122     orientationMatrix = Matrix;\par
00123 \}\par
00124 \par
00125 CInputPoint3D::~CInputPoint3D({\cf18 void})\par
00126 \{\par
00127 \}\par
00128 \par
00129 {\cf18 void} CInputPoint3D::setEulerMatrix(CEulerMatrix orientation)\par
00130 \{\par
00131     orientationMatrix = orientation;    {\cf20 // EulerMatrix setzen}\par
00132 \}\par
00133 \par
00134 \par
00135 {\cf18 void} CInputPoint3D::setPoint({\cf18 double} time, {\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z, CEulerMatrix orientation)\par
00136 \{\par
00137     setTime(time);  {\cf20 // Zeitstempel setzen}\par
00138     set(X, Y, Z);   {\cf20 // setze Punkt-Koordinaten}\par
00139     setEulerMatrix(orientation); {\cf20 // EulerMatrix setzen}\par
00140 \}\par
00141 \par
00142 {\cf18 void} CInputPoint3D::setTime({\cf18 double} time)\par
00143 \{\par
00144     timestamp = time;   {\cf20 // Zeitstempel setzen}\par
00145 \}\par
00146 \par
00147 CEulerMatrix CInputPoint3D::getEulerMatrix()\par
00148 \{\par
00149     {\cf19 return} orientationMatrix;   {\cf20 // R\'FCckgabe der EulerMatrix}\par
00150 \}\par
00151 \par
00152 {\cf18 double} CInputPoint3D::getTime()\par
00153 \{\par
00154     {\cf19 return} timestamp;       {\cf20 // R\'FCckgabe des Zeitstempel}\par
00155 \}\par
00156 \par
00157 {\cf20 // OutputPoint3D}\par
00158 {\cf20 /* Punkt mit 0 initialisieren */}\par
00159 COutputPoint3D::COutputPoint3D({\cf18 void}) : CPoint3D()\par
00160 \{\par
00161     speed = 0;\par
00162     a = 0;\par
00163     b = 0;\par
00164     c = 0;\par
00165 \}\par
00166 \par
00167 {\cf20 /* Punkt mit Parameter initialisieren*/}\par
00168 COutputPoint3D::COutputPoint3D({\cf18 double} Speed, {\cf18 double} X, {\cf18 double} Y, {\cf18 double} Z, {\cf18 double} A, {\cf18 double} B, {\cf18 double} C)\par
00169 \{\par
00170     speed = Speed;\par
00171     a = A;\par
00172     b = B;\par
00173     c = C;\par
00174     x = X;\par
00175     y = Y;\par
00176     z = Z;\par
00177 \}\par
00178 \par
00179 COutputPoint3D::~COutputPoint3D({\cf18 void})\par
00180 \{\par
00181 \par
00182 \}\par
00183 \par
00184 {\cf18 double} COutputPoint3D::getA({\cf18 void})\par
00185 \{\par
00186     {\cf19 return} a;   {\cf20 // R\'FCckgabe Winkel alpha}\par
00187 \}\par
00188 \par
00189 {\cf18 double} COutputPoint3D::getB({\cf18 void})\par
00190 \{\par
00191     {\cf19 return} b;   {\cf20 // R\'FCckgabe Winkel beta}\par
00192 \}\par
00193 \par
00194 {\cf18 double} COutputPoint3D::getC({\cf18 void})\par
00195 \{\par
00196     {\cf19 return} c;   {\cf20 // R\'FCckgabe Winkel gamma}\par
00197 \}\par
00198 \par
00199 {\cf18 double} COutputPoint3D::getSpeed({\cf18 void})\par
00200 \{\par
00201     {\cf19 return} speed;   {\cf20 // R\'FCckgabe Geschwindigkeit}\par
00202 \}\par
00203 \par
00204 {\cf18 void} COutputPoint3D::setA({\cf18 double} A)\par
00205 \{\par
00206     a = A;      {\cf20 // setze Winkel alpha}\par
00207 \}\par
00208 \par
00209 {\cf18 void} COutputPoint3D::setB({\cf18 double} B)\par
00210 \{\par
00211     b = B;      {\cf20 // setze Winkel beta}\par
00212 \}\par
00213 \par
00214 {\cf18 void} COutputPoint3D::setC({\cf18 double} C)\par
00215 \{\par
00216     c = C;      {\cf20 // setze Winkel gamma}\par
00217 \}\par
00218 \par
00219 {\cf18 void} COutputPoint3D::setSpeed({\cf18 double} Speed)\par
00220 \{\par
00221     speed = Speed;      {\cf20 // setze Geschwindigkeit}\par
00222 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/RobCodeGenerator.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/RobCodeGenerator.cpp}
{\xe \v source/RobCodeGenerator.cpp}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Roboter Code Erstellung. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../header/RobCodeGenerator.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Roboter Code Erstellung. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b RobCodeGenerator.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RobCodeGenerator.cpp\par \pard\plain 
{\tc\tcl2 \v source/RobCodeGenerator.cpp}
{\xe \v source/RobCodeGenerator.cpp}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "../header/RobCodeGenerator.h"}\par
00008 \par
00009 {\cf20 /* CRobCodeGenerator mit 0 initialiseren */}\par
00010 CRobCodeGenerator::CRobCodeGenerator({\cf18 void})\par
00011 \{\par
00012 \}\par
00013 \par
00014 {\cf20 /* CRobCodeGenerator mit Uebergabewerten initialisieren */}\par
00015 CRobCodeGenerator::CRobCodeGenerator(CInputParameter inputParam)\par
00016 \{\par
00017     input = inputParam;\par
00018 \}\par
00019 \par
00020 CRobCodeGenerator::~CRobCodeGenerator({\cf18 void})\par
00021 \{\par
00022 \}\par
00023 \par
00024 {\cf18 void} CRobCodeGenerator::generateRobCode(vector<CInputPoint3D>& points, {\cf18 string} filepath, {\cf18 string} filename, CLogging log)\par
00025 \{\par
00026     postProcessing(points); {\cf20 // Calculates all the necessary values}\par
00027 \par
00028     log.setStep(5);\par
00029     log.logData(processedPath);\par
00030 \par
00031     errno_t err;\par
00032     \par
00033     FILE* fid;\par
00034 \par
00035     {\cf18 string} fullPath = filepath + {\cf22 "/"} + filename;\par
00036 \par
00037     {\cf19 if} ((err = fopen_s(&fid, fullPath.c_str(), {\cf22 "w"})) != 0) {\cf20 // Errorhandling for File opening}\par
00038     \{ \par
00039         {\cf18 string} msg = {\cf22 "Open file: "};\par
00040         msg += filename;\par
00041         msg += {\cf22 " failed!"};\par
00042 \par
00043         {\cf19 throw} exception(msg.c_str());\par
00044     \}\par
00045 \par
00046     filename.erase(filename.end()-4,filename.end());        {\cf20 // l\'C3\'B6scht .src}\par
00047     fprintf(fid, {\cf22 "DEF %s \\n"}, filename.c_str());            {\cf20 // DEF in file schreiben}\par
00048 \par
00049     fputs({\cf22 "PTP $POS_ACT\\n"}, fid);                           {\cf20 // PTP zur aktuellen Position in file schreiben}\par
00050 \par
00051     {\cf19 if} (input.getSpeedManual()) {\cf20 // If the speed is set to manual, it will be defined once at the beginning of the file}\par
00052     \{\par
00053         fprintf(fid, {\cf22 "$VEL.CP = %f\\n"}, input.getSpeed());       {\cf20 // Geschwindigkeit ein file schreiben}\par
00054     \}\par
00055 \par
00056     tuple <double, double, double> offset = input.getOffset();\par
00057 \par
00058     {\cf19 for} ({\cf18 size_t} s = 0; s < points.size(); s++)\par
00059     \{\par
00060         {\cf19 if} (!input.getSpeedManual()) {\cf20 // If the speed is calculated it needs to be before every LIN command}\par
00061             fprintf(fid, {\cf22 "$VEL.CP = %f\\n"}, ({\cf18 float})processedPath[s].getSpeed());\par
00062         fprintf(fid, {\cf22 "LIN \{X %f, Y %f, Z %f, A %f, B %f, C %f\}\\n"}, processedPath[s].getX() + get<0>(offset), processedPath[s].getY() + get<1>(offset),\par
00063             processedPath[s].getZ() + get<2>(offset), processedPath[s].getA(), processedPath[s].getB(),\par
00064             processedPath[s].getC());\par
00065     \}\par
00066 \par
00067     fputs({\cf22 "END"}, fid);\par
00068 \}\par
00069 \par
00070 {\cf18 void} CRobCodeGenerator::postProcessing(vector<CInputPoint3D>& path)\par
00071 \{\par
00072     COutputPoint3D p;\par
00073     {\cf18 double} timePrev = 1;\par
00074 \par
00075     {\cf19 for} ({\cf18 size_t} s = 0; s < path.size(); s++) {\cf20 // F\'C3\'BCr jeden Punkt in dem Vector}\par
00076     \{\par
00077         p.set(path[s].getX(), path[s].getY(), path[s].getZ());\par
00078         {\cf19 if} (input.getSpeedManual())\par
00079         \{\par
00080             {\cf19 if} (input.getSpeed() > MAX_SPEED) {\cf20 //Wenn maximale Geschwindigkeit ueberschritten wird, Geschwindigkeit begrenzen}\par
00081                 input.setSpeed(MAX_SPEED, {\cf17 true});\par
00082         \}\par
00083         {\cf19 else}\par
00084         \{\par
00085             {\cf19 if} (s == 0)\par
00086                 p.setSpeed(1); {\cf20 //Der erste Punkt(0) wird mit Standardgeschwindigkeit 1m/s angefahren.}\par
00087 \par
00088             {\cf19 else}\par
00089                 p.setSpeed(calculateSpeed(path[s], s, timePrev)); {\cf20 //Die Geschwindigkeit zwischen den weiteren Punkten wird berechnet.}\par
00090         \}\par
00091 \par
00092         {\cf19 if} (input.getOrientationManual()) {\cf20 // Wenn der Winkel vorgegeben ist diesen setzten}\par
00093         \{\par
00094             tuple <double, double, double> angles;\par
00095             angles = input.getAngles();\par
00096             p.setA(get<0>(angles));\par
00097             p.setB(get<1>(angles));\par
00098             p.setC(get<2>(angles));\par
00099         \}\par
00100         {\cf19 else} {\cf20 // Sonst den Winkel berechnen}\par
00101             calculateAngles(p, path[s]);\par
00102         timePrev = path[s].getTime();\par
00103         processedPath.push_back(p);\par
00104     \}\par
00105 \par
00106 \}\par
00107 \par
00108 {\cf18 double} CRobCodeGenerator::calculateSpeed(CInputPoint3D& p, {\cf18 size_t} s, {\cf18 double} timePrev)\par
00109 \{\par
00110     {\cf18 double} distance = 0;\par
00111     {\cf18 double} time = 0;\par
00112     {\cf18 double} speed;\par
00113 \par
00114     distance = processedPath[s - 1].distanceTo(p); {\cf20 //Strecke zwischen p und dem Punkt zuvor}\par
00115     time = p.getTime() - timePrev; {\cf20 //Zeit zwischen p-1 und p}\par
00116 \par
00117     speed = distance / time; {\cf20 // Berechnug Geschwindigkeit zwischen zwei Punkten}\par
00118 \par
00119     {\cf19 if} (speed > MAX_SPEED) {\cf20 //Begrenzung auf maximale Geschwindigkeit, falls Trackerdaten h\'EF\'BF\'BDheren Wert aufweisen}\par
00120         speed = MAX_SPEED;\par
00121 \par
00122     {\cf19 return} speed; {\cf20 //Zuweisung der Geschwindigkeit}\par
00123 \}\par
00124 \par
00125 {\cf18 void} CRobCodeGenerator::calculateAngles(COutputPoint3D& p, CInputPoint3D& pIn)\par
00126 \{\par
00127     {\cf20 // Funktion in Eulermatrix aufrufen die a/b/c neu berechnet}\par
00128 \par
00129     CEulerMatrix matrix = pIn.getEulerMatrix();\par
00130     tuple<double, double, double> abc;\par
00131 \par
00132     abc = matrix.calculateAngels();\par
00133 \par
00134     p.setA(get<0>(abc));\par
00135     p.setB(get<1>(abc));\par
00136     p.setC(get<2>(abc));\par
00137 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/RobPathEditor.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/RobPathEditor.cpp}
{\xe \v source/RobPathEditor.cpp}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hier wird die main Funktion aufgerufen. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <ctime>}\par
{\f2 #include "../header/GUI.h"}\par
{\f2 #include <QtWidgets/QApplication>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funktionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hier wird die main Funktion aufgerufen. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b RobPathEditor.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Funktionen\par
\pard\plain 
{\xe \v main\:RobPathEditor.cpp}
{\xe \v RobPathEditor.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 52} der Datei {\b RobPathEditor.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00053 \{\par
00054     QApplication a(argc, argv);\par
00055     GUI w;\par
00056     w.show();\par
00057     {\cf19 return} a.exec();\par
00058 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RobPathEditor.cpp\par \pard\plain 
{\tc\tcl2 \v source/RobPathEditor.cpp}
{\xe \v source/RobPathEditor.cpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00044 {\cf21 #include <iostream>}\par
00045 {\cf21 #include <ctime>}\par
00046 \par
00047 {\cf21 #include "../header/GUI.h"}\par
00048 {\cf21 #include <QtWidgets/QApplication>}\par
00049 \par
00050 {\cf17 using namespace }std;\par
00051 \par
00052 {\cf18 int} main({\cf18 int} argc, {\cf18 char}* argv[])\par
00053 \{\par
00054     QApplication a(argc, argv);\par
00055     GUI w;\par
00056     w.show();\par
00057     {\cf19 return} a.exec();\par
00058 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
source/SegmentApproximator.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v source/SegmentApproximator.cpp}
{\xe \v source/SegmentApproximator.cpp}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Douglas-Peuker. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../header/SegmentApproximator.h"}\par
{\f2 #include "../header/Point3D.h"}\par
{\f2 #include "../header/Line3D.h"}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ausf\'FChrliche Beschreibung\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source File Douglas-Peuker. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definiert in Datei {\b SegmentApproximator.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SegmentApproximator.cpp\par \pard\plain 
{\tc\tcl2 \v source/SegmentApproximator.cpp}
{\xe \v source/SegmentApproximator.cpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include "../header/SegmentApproximator.h"}\par
00008 {\cf21 #include "../header/Point3D.h"}\par
00009 {\cf21 #include "../header/Line3D.h"}\par
00010 \par
00011 CSegmentApproximator::CSegmentApproximator({\cf18 void})\par
00012 \{\par
00013 \}\par
00014 \par
00015 CSegmentApproximator::~CSegmentApproximator({\cf18 void})\par
00016 \{\par
00017 \}\par
00018 \par
00019 {\cf18 void} CSegmentApproximator::approx({\cf17 const} vector<list<CInputPoint3D>>& segments, CLogging log)\par
00020 \{\par
00021     CInputPoint3D p;\par
00022 \par
00023     segmentsApprox = segments;\par
00024 \par
00025     {\cf20 /* Douglas Peucker f\'FCr Segmente aufrufen*/}\par
00026     {\cf19 for} ({\cf18 size_t} s = 0; s < segments.size(); s++)\par
00027     \{\par
00028         douglasPeuckerRecursive(segmentsApprox[s], segmentsApprox[s].begin(), --(segmentsApprox[s].end()));\par
00029     \}\par
00030 \par
00031     {\cf20 /*  Logging der Daten*/}\par
00032     {\cf19 if} (log.getDetailed())\par
00033     \{\par
00034         log.setStep(3);\par
00035         log.logData(segmentsApprox);\par
00036     \}\par
00037 \}\par
00038 \par
00039 {\cf18 void} CSegmentApproximator::setmaxDistance({\cf18 double} maxDistanceSource)\par
00040 \{\par
00041     maxDistance = maxDistanceSource;        {\cf20 // setze maxDistance}\par
00042 \}\par
00043 \par
00044 {\cf18 double} CSegmentApproximator::getmaxDistance()\par
00045 \{\par
00046     {\cf19 return} maxDistance;     {\cf20 // Rueckgabe von maxDistance}\par
00047 \}\par
00048 \par
00049 vector<list<CInputPoint3D>>& CSegmentApproximator::getSegmentsApproxVector()\par
00050 \{\par
00051     {\cf19 return} segmentsApprox;      {\cf20 // Rueckgabe der Segmente}\par
00052 \}\par
00053 \par
00054 {\cf20 //TODO: Kommentar}\par
00055 {\cf18 void} CSegmentApproximator::douglasPeuckerRecursive(list<CInputPoint3D>& segment, std::list<CInputPoint3D>::iterator startItr, std::list<CInputPoint3D>::iterator endItr)\par
00056 \{\par
00057     {\cf19 if} (segment.size() < 3) {\cf19 return};  {\cf20 // min Gr\'F6\'DFe pro Seg 3}\par
00058     {\cf19 if} (distance(startItr, endItr) == 2) {\cf19 return};        {\cf20 // Zeigerabstand == 2}\par
00059     CInputPoint3D pStart; CInputPoint3D pEnd;       {\cf20 // Variablen deklarieren}\par
00060 \par
00061 \par
00062     {\cf20 /* Startpunkt setzen */}\par
00063     pStart.setX(startItr->getX()); pStart.setY(startItr->getY()); pStart.setZ(startItr->getZ());\par
00064     pStart.setTime(startItr->getTime());\par
00065     pStart.setEulerMatrix(startItr->getEulerMatrix());\par
00066 \par
00067     {\cf20 /* Endpunkt setzen */}\par
00068     pEnd.setX(endItr->getX()); pEnd.setY(endItr->getY()); pEnd.setZ(endItr->getZ());\par
00069     pEnd.setTime(endItr->getTime());\par
00070     pEnd.setEulerMatrix(endItr->getEulerMatrix());\par
00071 \par
00072     {\cf18 double} dist = 0.0, maxDist = 0.0;                   {\cf20 // dist und maxDist initialisieren }\par
00073     std::list<CInputPoint3D>::iterator maxItr, itr;     {\cf20 // Zeiger bilden}\par
00074 \par
00075 \par
00076     {\cf20 /* am weitesten Entfernten Punkt suchen */}\par
00077     {\cf19 for} (itr = startItr; itr != endItr; itr++)\par
00078     \{\par
00079         CLine3D line = CLine3D(pStart, pEnd);\par
00080         {\cf20 // calc distance}\par
00081         dist = itr->distanceTo(line);\par
00082         {\cf19 if} (dist > maxDist) \{\par
00083             maxDist = dist;\par
00084             maxItr = itr;\par
00085         \}\par
00086     \}\par
00087 \par
00088     {\cf19 if} (maxDist <= maxDistance) \{\par
00089 \par
00090         segment.erase((++startItr), endItr);        {\cf20 // Punkt l\'F6schen}\par
00091         {\cf19 return};\par
00092     \}\par
00093 \par
00094     {\cf20 /*  Douglas Peucker erneut aufrufen */}\par
00095     douglasPeuckerRecursive(segment, startItr, maxItr);\par
00096     douglasPeuckerRecursive(segment, maxItr, endItr);\par
00097 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
x64/Debug/moc/moc_GUI.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v x64/Debug/moc/moc_GUI.cpp}
{\xe \v x64/Debug/moc/moc_GUI.cpp}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../../header/GUI.h"}\par
{\f2 #include <QtGui/qtextcursor.h>}\par
{\f2 #include <QtCore/qmetatype.h>}\par
{\f2 #include <memory>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namensbereiche\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b QT_WARNING_DISABLE_DEPRECATED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makrodefinitionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Q_CONSTINIT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QT_MOC_LITERAL}(ofs,  len)\~     uint(sizeof(qt_meta_stringdata_CLASSGUIENDCLASS_t::offsetsAndSizes) + ofs), len\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makro-Dokumentation\par
\pard\plain 
{\xe \v Q_CONSTINIT\:moc_GUI.cpp}
{\xe \v moc_GUI.cpp\:Q_CONSTINIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Q_CONSTINIT}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 31} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v QT_MOC_LITERAL\:moc_GUI.cpp}
{\xe \v moc_GUI.cpp\:QT_MOC_LITERAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QT_MOC_LITERAL( ofs,  len)\~     uint(sizeof(qt_meta_stringdata_CLASSGUIENDCLASS_t::offsetsAndSizes) + ofs), len}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 69} der Datei {\b moc_GUI.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
moc_GUI.cpp\par \pard\plain 
{\tc\tcl2 \v x64/Debug/moc/moc_GUI.cpp}
{\xe \v x64/Debug/moc/moc_GUI.cpp}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /****************************************************************************}\par
00002 {\cf20 ** Meta object code from reading C++ file 'GUI.h'}\par
00003 {\cf20 **}\par
00004 {\cf20 ** Created by: The Qt Meta Object Compiler version 68 (Qt 6.5.1)}\par
00005 {\cf20 **}\par
00006 {\cf20 ** WARNING! All changes made in this file will be lost!}\par
00007 {\cf20 *****************************************************************************/}\par
00008 \par
00009 {\cf21 #include "../../../header/GUI.h"}\par
00010 {\cf21 #include <QtGui/qtextcursor.h>}\par
00011 {\cf21 #include <QtCore/qmetatype.h>}\par
00012 \par
00013 {\cf21 #if __has_include(<QtCore/qtmochelpers.h>)}\par
00014 {\cf21 #include <QtCore/qtmochelpers.h>}\par
00015 {\cf21 #else}\par
00016 QT_BEGIN_MOC_NAMESPACE\par
00017 {\cf21 #endif}\par
00018 \par
00019 \par
00020 {\cf21 #include <memory>}\par
00021 \par
00022 {\cf21 #if !defined(Q_MOC_OUTPUT_REVISION)}\par
00023 {\cf21 #error "The header file 'GUI.h' doesn't include <QObject>."}\par
00024 {\cf21 #elif Q_MOC_OUTPUT_REVISION != 68}\par
00025 {\cf21 #error "This file was generated using the moc from 6.5.1. It"}\par
00026 {\cf21 #error "cannot be used with the include files from this version of Qt."}\par
00027 {\cf21 #error "(The moc has changed too much.)"}\par
00028 {\cf21 #endif}\par
00029 \par
00030 {\cf21 #ifndef Q_CONSTINIT}\par
00031 {\cf21 #define Q_CONSTINIT}\par
00032 {\cf21 #endif}\par
00033 \par
00034 QT_WARNING_PUSH\par
00035 QT_WARNING_DISABLE_DEPRECATED\par
00036 QT_WARNING_DISABLE_GCC({\cf22 "-Wuseless-cast"})\par
00037 namespace \{\par
00038 \par
00039 {\cf21 #ifdef QT_MOC_HAS_STRINGDATA}\par
00040 {\cf17 struct }qt_meta_stringdata_CLASSGUIENDCLASS_t \{\};\par
00041 {\cf17 static} {\cf17 constexpr} {\cf17 auto} qt_meta_stringdata_CLASSGUIENDCLASS = QtMocHelpers::stringData(\par
00042     {\cf22 "GUI"},\par
00043     {\cf22 "calculate"},\par
00044     {\cf22 ""},\par
00045     {\cf22 "setInputPath"},\par
00046     {\cf22 "setOutputPath"},\par
00047     {\cf22 "setDP"},\par
00048     {\cf22 "setMean"},\par
00049     {\cf22 "activateSpeed"},\par
00050     {\cf22 "setSpeed"},\par
00051     {\cf22 "activateOrientation"},\par
00052     {\cf22 "setOrientation"}\par
00053 );\par
00054 {\cf21 #else  }{\cf20 // !QT_MOC_HAS_STRING_DATA}\par
00055 {\cf17 struct }qt_meta_stringdata_CLASSGUIENDCLASS_t \{\par
00056     uint offsetsAndSizes[22];\par
00057     {\cf18 char} stringdata0[4];\par
00058     {\cf18 char} stringdata1[10];\par
00059     {\cf18 char} stringdata2[1];\par
00060     {\cf18 char} stringdata3[13];\par
00061     {\cf18 char} stringdata4[14];\par
00062     {\cf18 char} stringdata5[6];\par
00063     {\cf18 char} stringdata6[8];\par
00064     {\cf18 char} stringdata7[14];\par
00065     {\cf18 char} stringdata8[9];\par
00066     {\cf18 char} stringdata9[20];\par
00067     {\cf18 char} stringdata10[15];\par
00068 \};\par
00069 {\cf21 #define QT_MOC_LITERAL(ofs, len) \\}\par
00070 {\cf21     uint(sizeof(qt_meta_stringdata_CLASSGUIENDCLASS_t::offsetsAndSizes) + ofs), len }\par
00071 Q_CONSTINIT {\cf17 static} {\cf17 const} qt_meta_stringdata_CLASSGUIENDCLASS_t qt_meta_stringdata_CLASSGUIENDCLASS = \{\par
00072     \{\par
00073         QT_MOC_LITERAL(0, 3),  {\cf20 // "GUI"}\par
00074         QT_MOC_LITERAL(4, 9),  {\cf20 // "calculate"}\par
00075         QT_MOC_LITERAL(14, 0),  {\cf20 // ""}\par
00076         QT_MOC_LITERAL(15, 12),  {\cf20 // "setInputPath"}\par
00077         QT_MOC_LITERAL(28, 13),  {\cf20 // "setOutputPath"}\par
00078         QT_MOC_LITERAL(42, 5),  {\cf20 // "setDP"}\par
00079         QT_MOC_LITERAL(48, 7),  {\cf20 // "setMean"}\par
00080         QT_MOC_LITERAL(56, 13),  {\cf20 // "activateSpeed"}\par
00081         QT_MOC_LITERAL(70, 8),  {\cf20 // "setSpeed"}\par
00082         QT_MOC_LITERAL(79, 19),  {\cf20 // "activateOrientation"}\par
00083         QT_MOC_LITERAL(99, 14)   {\cf20 // "setOrientation"}\par
00084     \},\par
00085     {\cf22 "GUI"},\par
00086     {\cf22 "calculate"},\par
00087     {\cf22 ""},\par
00088     {\cf22 "setInputPath"},\par
00089     {\cf22 "setOutputPath"},\par
00090     {\cf22 "setDP"},\par
00091     {\cf22 "setMean"},\par
00092     {\cf22 "activateSpeed"},\par
00093     {\cf22 "setSpeed"},\par
00094     {\cf22 "activateOrientation"},\par
00095     {\cf22 "setOrientation"}\par
00096 \};\par
00097 {\cf21 #undef QT_MOC_LITERAL}\par
00098 {\cf21 #endif }{\cf20 // !QT_MOC_HAS_STRING_DATA}\par
00099 \} {\cf20 // unnamed namespace}\par
00100 \par
00101 Q_CONSTINIT {\cf17 static} {\cf17 const} uint qt_meta_data_CLASSGUIENDCLASS[] = \{\par
00102 \par
00103  {\cf20 // content:}\par
00104       11,       {\cf20 // revision}\par
00105        0,       {\cf20 // classname}\par
00106        0,    0, {\cf20 // classinfo}\par
00107        9,   14, {\cf20 // methods}\par
00108        0,    0, {\cf20 // properties}\par
00109        0,    0, {\cf20 // enums/sets}\par
00110        0,    0, {\cf20 // constructors}\par
00111        0,       {\cf20 // flags}\par
00112        0,       {\cf20 // signalCount}\par
00113 \par
00114  {\cf20 // slots: name, argc, parameters, tag, flags, initial metatype offsets}\par
00115        1,    0,   68,    2, 0x08,    1 {\cf20 /* Private */},\par
00116        3,    0,   69,    2, 0x08,    2 {\cf20 /* Private */},\par
00117        4,    0,   70,    2, 0x08,    3 {\cf20 /* Private */},\par
00118        5,    0,   71,    2, 0x08,    4 {\cf20 /* Private */},\par
00119        6,    0,   72,    2, 0x08,    5 {\cf20 /* Private */},\par
00120        7,    0,   73,    2, 0x08,    6 {\cf20 /* Private */},\par
00121        8,    0,   74,    2, 0x08,    7 {\cf20 /* Private */},\par
00122        9,    0,   75,    2, 0x08,    8 {\cf20 /* Private */},\par
00123       10,    0,   76,    2, 0x08,    9 {\cf20 /* Private */},\par
00124 \par
00125  {\cf20 // slots: parameters}\par
00126     QMetaType::Void,\par
00127     QMetaType::Void,\par
00128     QMetaType::Void,\par
00129     QMetaType::Void,\par
00130     QMetaType::Void,\par
00131     QMetaType::Void,\par
00132     QMetaType::Void,\par
00133     QMetaType::Void,\par
00134     QMetaType::Void,\par
00135 \par
00136        0        {\cf20 // eod}\par
00137 \};\par
00138 \par
00139 Q_CONSTINIT {\cf17 const} QMetaObject GUI::staticMetaObject = \{ \{\par
00140     QMetaObject::SuperData::link<QMainWindow::staticMetaObject>(),\par
00141     qt_meta_stringdata_CLASSGUIENDCLASS.offsetsAndSizes,\par
00142     qt_meta_data_CLASSGUIENDCLASS,\par
00143     qt_static_metacall,\par
00144     {\cf17 nullptr},\par
00145     qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSGUIENDCLASS_t,\par
00146         {\cf20 // Q_OBJECT / Q_GADGET}\par
00147         QtPrivate::TypeAndForceComplete<GUI, std::true_type>,\par
00148         {\cf20 // method 'calculate'}\par
00149         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00150         {\cf20 // method 'setInputPath'}\par
00151         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00152         {\cf20 // method 'setOutputPath'}\par
00153         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00154         {\cf20 // method 'setDP'}\par
00155         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00156         {\cf20 // method 'setMean'}\par
00157         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00158         {\cf20 // method 'activateSpeed'}\par
00159         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00160         {\cf20 // method 'setSpeed'}\par
00161         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00162         {\cf20 // method 'activateOrientation'}\par
00163         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00164         {\cf20 // method 'setOrientation'}\par
00165         QtPrivate::TypeAndForceComplete<void, std::false_type>\par
00166     >,\par
00167     {\cf17 nullptr}\par
00168 \} \};\par
00169 \par
00170 {\cf18 void} GUI::qt_static_metacall(QObject *_o, QMetaObject::Call _c, {\cf18 int} _id, {\cf18 void} **_a)\par
00171 \{\par
00172     {\cf19 if} (_c == QMetaObject::InvokeMetaMethod) \{\par
00173         {\cf17 auto} *_t = {\cf17 static_cast<}GUI *{\cf17 >}(_o);\par
00174         (void)_t;\par
00175         {\cf19 switch} (_id) \{\par
00176         {\cf19 case} 0: _t->calculate(); {\cf19 break};\par
00177         {\cf19 case} 1: _t->setInputPath(); {\cf19 break};\par
00178         {\cf19 case} 2: _t->setOutputPath(); {\cf19 break};\par
00179         {\cf19 case} 3: _t->setDP(); {\cf19 break};\par
00180         {\cf19 case} 4: _t->setMean(); {\cf19 break};\par
00181         {\cf19 case} 5: _t->activateSpeed(); {\cf19 break};\par
00182         {\cf19 case} 6: _t->setSpeed(); {\cf19 break};\par
00183         {\cf19 case} 7: _t->activateOrientation(); {\cf19 break};\par
00184         {\cf19 case} 8: _t->setOrientation(); {\cf19 break};\par
00185         {\cf19 default}: ;\par
00186         \}\par
00187     \}\par
00188     (void)_a;\par
00189 \}\par
00190 \par
00191 {\cf17 const} QMetaObject *GUI::metaObject(){\cf17  const}\par
00192 {\cf17 }\{\par
00193     {\cf19 return} QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;\par
00194 \}\par
00195 \par
00196 {\cf18 void} *GUI::qt_metacast({\cf17 const} {\cf18 char} *_clname)\par
00197 \{\par
00198     {\cf19 if} (!_clname) {\cf19 return} {\cf17 nullptr};\par
00199     {\cf19 if} (!strcmp(_clname, qt_meta_stringdata_CLASSGUIENDCLASS.stringdata0))\par
00200         {\cf19 return} {\cf17 static_cast<}{\cf18 void}*{\cf17 >}({\cf17 this});\par
00201     {\cf19 return} QMainWindow::qt_metacast(_clname);\par
00202 \}\par
00203 \par
00204 {\cf18 int} GUI::qt_metacall(QMetaObject::Call _c, {\cf18 int} _id, {\cf18 void} **_a)\par
00205 \{\par
00206     _id = QMainWindow::qt_metacall(_c, _id, _a);\par
00207     {\cf19 if} (_id < 0)\par
00208         {\cf19 return} _id;\par
00209     {\cf19 if} (_c == QMetaObject::InvokeMetaMethod) \{\par
00210         {\cf19 if} (_id < 9)\par
00211             qt_static_metacall({\cf17 this}, _c, _id, _a);\par
00212         _id -= 9;\par
00213     \} {\cf19 else} {\cf19 if} (_c == QMetaObject::RegisterMethodArgumentMetaType) \{\par
00214         {\cf19 if} (_id < 9)\par
00215             *{\cf17 reinterpret_cast<}QMetaType *{\cf17 >}(_a[0]) = QMetaType();\par
00216         _id -= 9;\par
00217     \}\par
00218     {\cf19 return} _id;\par
00219 \}\par
00220 QT_WARNING_POP\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
x64/Release/moc/moc_GUI.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v x64/Release/moc/moc_GUI.cpp}
{\xe \v x64/Release/moc/moc_GUI.cpp}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../../header/GUI.h"}\par
{\f2 #include <QtGui/qtextcursor.h>}\par
{\f2 #include <QtCore/qmetatype.h>}\par
{\f2 #include <memory>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSGUIENDCLASS_t}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namensbereiche\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b QT_WARNING_DISABLE_DEPRECATED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makrodefinitionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Q_CONSTINIT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QT_MOC_LITERAL}(ofs,  len)\~     uint(sizeof(qt_meta_stringdata_CLASSGUIENDCLASS_t::offsetsAndSizes) + ofs), len\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makro-Dokumentation\par
\pard\plain 
{\xe \v Q_CONSTINIT\:moc_GUI.cpp}
{\xe \v moc_GUI.cpp\:Q_CONSTINIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Q_CONSTINIT}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 31} der Datei {\b moc_GUI.cpp}.}\par
}
{\xe \v QT_MOC_LITERAL\:moc_GUI.cpp}
{\xe \v moc_GUI.cpp\:QT_MOC_LITERAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QT_MOC_LITERAL( ofs,  len)\~     uint(sizeof(qt_meta_stringdata_CLASSGUIENDCLASS_t::offsetsAndSizes) + ofs), len}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 75} der Datei {\b moc_GUI.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
moc_GUI.cpp\par \pard\plain 
{\tc\tcl2 \v x64/Release/moc/moc_GUI.cpp}
{\xe \v x64/Release/moc/moc_GUI.cpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /****************************************************************************}\par
00002 {\cf20 ** Meta object code from reading C++ file 'GUI.h'}\par
00003 {\cf20 **}\par
00004 {\cf20 ** Created by: The Qt Meta Object Compiler version 68 (Qt 6.5.1)}\par
00005 {\cf20 **}\par
00006 {\cf20 ** WARNING! All changes made in this file will be lost!}\par
00007 {\cf20 *****************************************************************************/}\par
00008 \par
00009 {\cf21 #include "../../../header/GUI.h"}\par
00010 {\cf21 #include <QtGui/qtextcursor.h>}\par
00011 {\cf21 #include <QtCore/qmetatype.h>}\par
00012 \par
00013 {\cf21 #if __has_include(<QtCore/qtmochelpers.h>)}\par
00014 {\cf21 #include <QtCore/qtmochelpers.h>}\par
00015 {\cf21 #else}\par
00016 QT_BEGIN_MOC_NAMESPACE\par
00017 {\cf21 #endif}\par
00018 \par
00019 \par
00020 {\cf21 #include <memory>}\par
00021 \par
00022 {\cf21 #if !defined(Q_MOC_OUTPUT_REVISION)}\par
00023 {\cf21 #error "The header file 'GUI.h' doesn't include <QObject>."}\par
00024 {\cf21 #elif Q_MOC_OUTPUT_REVISION != 68}\par
00025 {\cf21 #error "This file was generated using the moc from 6.5.1. It"}\par
00026 {\cf21 #error "cannot be used with the include files from this version of Qt."}\par
00027 {\cf21 #error "(The moc has changed too much.)"}\par
00028 {\cf21 #endif}\par
00029 \par
00030 {\cf21 #ifndef Q_CONSTINIT}\par
00031 {\cf21 #define Q_CONSTINIT}\par
00032 {\cf21 #endif}\par
00033 \par
00034 QT_WARNING_PUSH\par
00035 QT_WARNING_DISABLE_DEPRECATED\par
00036 QT_WARNING_DISABLE_GCC({\cf22 "-Wuseless-cast"})\par
00037 namespace \{\par
00038 \par
00039 {\cf21 #ifdef QT_MOC_HAS_STRINGDATA}\par
00040 {\cf17 struct }qt_meta_stringdata_CLASSGUIENDCLASS_t \{\};\par
00041 {\cf17 static} {\cf17 constexpr} {\cf17 auto} qt_meta_stringdata_CLASSGUIENDCLASS = QtMocHelpers::stringData(\par
00042     {\cf22 "GUI"},\par
00043     {\cf22 "calculate"},\par
00044     {\cf22 ""},\par
00045     {\cf22 "setInputPath"},\par
00046     {\cf22 "setOutputPath"},\par
00047     {\cf22 "setDP"},\par
00048     {\cf22 "setMean"},\par
00049     {\cf22 "activateSpeed"},\par
00050     {\cf22 "setSpeed"},\par
00051     {\cf22 "activateOrientation"},\par
00052     {\cf22 "setOrientation"},\par
00053     {\cf22 "activateOffset"},\par
00054     {\cf22 "setOffset"},\par
00055     {\cf22 "activateLogging"}\par
00056 );\par
00057 {\cf21 #else  }{\cf20 // !QT_MOC_HAS_STRING_DATA}\par
00058 {\cf17 struct }qt_meta_stringdata_CLASSGUIENDCLASS_t \{\par
00059     uint offsetsAndSizes[28];\par
00060     {\cf18 char} stringdata0[4];\par
00061     {\cf18 char} stringdata1[10];\par
00062     {\cf18 char} stringdata2[1];\par
00063     {\cf18 char} stringdata3[13];\par
00064     {\cf18 char} stringdata4[14];\par
00065     {\cf18 char} stringdata5[6];\par
00066     {\cf18 char} stringdata6[8];\par
00067     {\cf18 char} stringdata7[14];\par
00068     {\cf18 char} stringdata8[9];\par
00069     {\cf18 char} stringdata9[20];\par
00070     {\cf18 char} stringdata10[15];\par
00071     {\cf18 char} stringdata11[15];\par
00072     {\cf18 char} stringdata12[10];\par
00073     {\cf18 char} stringdata13[16];\par
00074 \};\par
00075 {\cf21 #define QT_MOC_LITERAL(ofs, len) \\}\par
00076 {\cf21     uint(sizeof(qt_meta_stringdata_CLASSGUIENDCLASS_t::offsetsAndSizes) + ofs), len }\par
00077 Q_CONSTINIT {\cf17 static} {\cf17 const} qt_meta_stringdata_CLASSGUIENDCLASS_t qt_meta_stringdata_CLASSGUIENDCLASS = \{\par
00078     \{\par
00079         QT_MOC_LITERAL(0, 3),  {\cf20 // "GUI"}\par
00080         QT_MOC_LITERAL(4, 9),  {\cf20 // "calculate"}\par
00081         QT_MOC_LITERAL(14, 0),  {\cf20 // ""}\par
00082         QT_MOC_LITERAL(15, 12),  {\cf20 // "setInputPath"}\par
00083         QT_MOC_LITERAL(28, 13),  {\cf20 // "setOutputPath"}\par
00084         QT_MOC_LITERAL(42, 5),  {\cf20 // "setDP"}\par
00085         QT_MOC_LITERAL(48, 7),  {\cf20 // "setMean"}\par
00086         QT_MOC_LITERAL(56, 13),  {\cf20 // "activateSpeed"}\par
00087         QT_MOC_LITERAL(70, 8),  {\cf20 // "setSpeed"}\par
00088         QT_MOC_LITERAL(79, 19),  {\cf20 // "activateOrientation"}\par
00089         QT_MOC_LITERAL(99, 14),  {\cf20 // "setOrientation"}\par
00090         QT_MOC_LITERAL(114, 14),  {\cf20 // "activateOffset"}\par
00091         QT_MOC_LITERAL(129, 9),  {\cf20 // "setOffset"}\par
00092         QT_MOC_LITERAL(139, 15)   {\cf20 // "activateLogging"}\par
00093     \},\par
00094     {\cf22 "GUI"},\par
00095     {\cf22 "calculate"},\par
00096     {\cf22 ""},\par
00097     {\cf22 "setInputPath"},\par
00098     {\cf22 "setOutputPath"},\par
00099     {\cf22 "setDP"},\par
00100     {\cf22 "setMean"},\par
00101     {\cf22 "activateSpeed"},\par
00102     {\cf22 "setSpeed"},\par
00103     {\cf22 "activateOrientation"},\par
00104     {\cf22 "setOrientation"},\par
00105     {\cf22 "activateOffset"},\par
00106     {\cf22 "setOffset"},\par
00107     {\cf22 "activateLogging"}\par
00108 \};\par
00109 {\cf21 #undef QT_MOC_LITERAL}\par
00110 {\cf21 #endif }{\cf20 // !QT_MOC_HAS_STRING_DATA}\par
00111 \} {\cf20 // unnamed namespace}\par
00112 \par
00113 Q_CONSTINIT {\cf17 static} {\cf17 const} uint qt_meta_data_CLASSGUIENDCLASS[] = \{\par
00114 \par
00115  {\cf20 // content:}\par
00116       11,       {\cf20 // revision}\par
00117        0,       {\cf20 // classname}\par
00118        0,    0, {\cf20 // classinfo}\par
00119       12,   14, {\cf20 // methods}\par
00120        0,    0, {\cf20 // properties}\par
00121        0,    0, {\cf20 // enums/sets}\par
00122        0,    0, {\cf20 // constructors}\par
00123        0,       {\cf20 // flags}\par
00124        0,       {\cf20 // signalCount}\par
00125 \par
00126  {\cf20 // slots: name, argc, parameters, tag, flags, initial metatype offsets}\par
00127        1,    0,   86,    2, 0x08,    1 {\cf20 /* Private */},\par
00128        3,    0,   87,    2, 0x08,    2 {\cf20 /* Private */},\par
00129        4,    0,   88,    2, 0x08,    3 {\cf20 /* Private */},\par
00130        5,    0,   89,    2, 0x08,    4 {\cf20 /* Private */},\par
00131        6,    0,   90,    2, 0x08,    5 {\cf20 /* Private */},\par
00132        7,    0,   91,    2, 0x08,    6 {\cf20 /* Private */},\par
00133        8,    0,   92,    2, 0x08,    7 {\cf20 /* Private */},\par
00134        9,    0,   93,    2, 0x08,    8 {\cf20 /* Private */},\par
00135       10,    0,   94,    2, 0x08,    9 {\cf20 /* Private */},\par
00136       11,    0,   95,    2, 0x08,   10 {\cf20 /* Private */},\par
00137       12,    0,   96,    2, 0x08,   11 {\cf20 /* Private */},\par
00138       13,    0,   97,    2, 0x08,   12 {\cf20 /* Private */},\par
00139 \par
00140  {\cf20 // slots: parameters}\par
00141     QMetaType::Void,\par
00142     QMetaType::Void,\par
00143     QMetaType::Void,\par
00144     QMetaType::Void,\par
00145     QMetaType::Void,\par
00146     QMetaType::Void,\par
00147     QMetaType::Void,\par
00148     QMetaType::Void,\par
00149     QMetaType::Void,\par
00150     QMetaType::Void,\par
00151     QMetaType::Void,\par
00152     QMetaType::Void,\par
00153 \par
00154        0        {\cf20 // eod}\par
00155 \};\par
00156 \par
00157 Q_CONSTINIT {\cf17 const} QMetaObject GUI::staticMetaObject = \{ \{\par
00158     QMetaObject::SuperData::link<QMainWindow::staticMetaObject>(),\par
00159     qt_meta_stringdata_CLASSGUIENDCLASS.offsetsAndSizes,\par
00160     qt_meta_data_CLASSGUIENDCLASS,\par
00161     qt_static_metacall,\par
00162     {\cf17 nullptr},\par
00163     qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSGUIENDCLASS_t,\par
00164         {\cf20 // Q_OBJECT / Q_GADGET}\par
00165         QtPrivate::TypeAndForceComplete<GUI, std::true_type>,\par
00166         {\cf20 // method 'calculate'}\par
00167         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00168         {\cf20 // method 'setInputPath'}\par
00169         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00170         {\cf20 // method 'setOutputPath'}\par
00171         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00172         {\cf20 // method 'setDP'}\par
00173         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00174         {\cf20 // method 'setMean'}\par
00175         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00176         {\cf20 // method 'activateSpeed'}\par
00177         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00178         {\cf20 // method 'setSpeed'}\par
00179         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00180         {\cf20 // method 'activateOrientation'}\par
00181         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00182         {\cf20 // method 'setOrientation'}\par
00183         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00184         {\cf20 // method 'activateOffset'}\par
00185         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00186         {\cf20 // method 'setOffset'}\par
00187         QtPrivate::TypeAndForceComplete<void, std::false_type>,\par
00188         {\cf20 // method 'activateLogging'}\par
00189         QtPrivate::TypeAndForceComplete<void, std::false_type>\par
00190     >,\par
00191     {\cf17 nullptr}\par
00192 \} \};\par
00193 \par
00194 {\cf18 void} GUI::qt_static_metacall(QObject *_o, QMetaObject::Call _c, {\cf18 int} _id, {\cf18 void} **_a)\par
00195 \{\par
00196     {\cf19 if} (_c == QMetaObject::InvokeMetaMethod) \{\par
00197         {\cf17 auto} *_t = {\cf17 static_cast<}GUI *{\cf17 >}(_o);\par
00198         (void)_t;\par
00199         {\cf19 switch} (_id) \{\par
00200         {\cf19 case} 0: _t->calculate(); {\cf19 break};\par
00201         {\cf19 case} 1: _t->setInputPath(); {\cf19 break};\par
00202         {\cf19 case} 2: _t->setOutputPath(); {\cf19 break};\par
00203         {\cf19 case} 3: _t->setDP(); {\cf19 break};\par
00204         {\cf19 case} 4: _t->setMean(); {\cf19 break};\par
00205         {\cf19 case} 5: _t->activateSpeed(); {\cf19 break};\par
00206         {\cf19 case} 6: _t->setSpeed(); {\cf19 break};\par
00207         {\cf19 case} 7: _t->activateOrientation(); {\cf19 break};\par
00208         {\cf19 case} 8: _t->setOrientation(); {\cf19 break};\par
00209         {\cf19 case} 9: _t->activateOffset(); {\cf19 break};\par
00210         {\cf19 case} 10: _t->setOffset(); {\cf19 break};\par
00211         {\cf19 case} 11: _t->activateLogging(); {\cf19 break};\par
00212         {\cf19 default}: ;\par
00213         \}\par
00214     \}\par
00215     (void)_a;\par
00216 \}\par
00217 \par
00218 {\cf17 const} QMetaObject *GUI::metaObject(){\cf17  const}\par
00219 {\cf17 }\{\par
00220     {\cf19 return} QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;\par
00221 \}\par
00222 \par
00223 {\cf18 void} *GUI::qt_metacast({\cf17 const} {\cf18 char} *_clname)\par
00224 \{\par
00225     {\cf19 if} (!_clname) {\cf19 return} {\cf17 nullptr};\par
00226     {\cf19 if} (!strcmp(_clname, qt_meta_stringdata_CLASSGUIENDCLASS.stringdata0))\par
00227         {\cf19 return} {\cf17 static_cast<}{\cf18 void}*{\cf17 >}({\cf17 this});\par
00228     {\cf19 return} QMainWindow::qt_metacast(_clname);\par
00229 \}\par
00230 \par
00231 {\cf18 int} GUI::qt_metacall(QMetaObject::Call _c, {\cf18 int} _id, {\cf18 void} **_a)\par
00232 \{\par
00233     _id = QMainWindow::qt_metacall(_c, _id, _a);\par
00234     {\cf19 if} (_id < 0)\par
00235         {\cf19 return} _id;\par
00236     {\cf19 if} (_c == QMetaObject::InvokeMetaMethod) \{\par
00237         {\cf19 if} (_id < 12)\par
00238             qt_static_metacall({\cf17 this}, _c, _id, _a);\par
00239         _id -= 12;\par
00240     \} {\cf19 else} {\cf19 if} (_c == QMetaObject::RegisterMethodArgumentMetaType) \{\par
00241         {\cf19 if} (_id < 12)\par
00242             *{\cf17 reinterpret_cast<}QMetaType *{\cf17 >}(_a[0]) = QMetaType();\par
00243         _id -= 12;\par
00244     \}\par
00245     {\cf19 return} _id;\par
00246 \}\par
00247 QT_WARNING_POP\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
x64/Debug/moc/moc_switch.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v x64/Debug/moc/moc_switch.cpp}
{\xe \v x64/Debug/moc/moc_switch.cpp}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../../switch.h"}\par
{\f2 #include <QtGui/qtextcursor.h>}\par
{\f2 #include <QScreen>}\par
{\f2 #include <QtCore/qmetatype.h>}\par
{\f2 #include <memory>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namensbereiche\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b QT_WARNING_DISABLE_DEPRECATED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makrodefinitionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Q_CONSTINIT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QT_MOC_LITERAL}(ofs,  len)\~     uint(sizeof(qt_meta_stringdata_CLASSSwitchENDCLASS_t::offsetsAndSizes) + ofs), len\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makro-Dokumentation\par
\pard\plain 
{\xe \v Q_CONSTINIT\:moc_switch.cpp}
{\xe \v moc_switch.cpp\:Q_CONSTINIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Q_CONSTINIT}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 32} der Datei {\b moc_switch.cpp}.}\par
}
{\xe \v QT_MOC_LITERAL\:moc_switch.cpp}
{\xe \v moc_switch.cpp\:QT_MOC_LITERAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QT_MOC_LITERAL( ofs,  len)\~     uint(sizeof(qt_meta_stringdata_CLASSSwitchENDCLASS_t::offsetsAndSizes) + ofs), len}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 54} der Datei {\b moc_switch.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
moc_switch.cpp\par \pard\plain 
{\tc\tcl2 \v x64/Debug/moc/moc_switch.cpp}
{\xe \v x64/Debug/moc/moc_switch.cpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /****************************************************************************}\par
00002 {\cf20 ** Meta object code from reading C++ file 'switch.h'}\par
00003 {\cf20 **}\par
00004 {\cf20 ** Created by: The Qt Meta Object Compiler version 68 (Qt 6.5.1)}\par
00005 {\cf20 **}\par
00006 {\cf20 ** WARNING! All changes made in this file will be lost!}\par
00007 {\cf20 *****************************************************************************/}\par
00008 \par
00009 {\cf21 #include "../../../switch.h"}\par
00010 {\cf21 #include <QtGui/qtextcursor.h>}\par
00011 {\cf21 #include <QScreen>}\par
00012 {\cf21 #include <QtCore/qmetatype.h>}\par
00013 \par
00014 {\cf21 #if __has_include(<QtCore/qtmochelpers.h>)}\par
00015 {\cf21 #include <QtCore/qtmochelpers.h>}\par
00016 {\cf21 #else}\par
00017 QT_BEGIN_MOC_NAMESPACE\par
00018 {\cf21 #endif}\par
00019 \par
00020 \par
00021 {\cf21 #include <memory>}\par
00022 \par
00023 {\cf21 #if !defined(Q_MOC_OUTPUT_REVISION)}\par
00024 {\cf21 #error "The header file 'switch.h' doesn't include <QObject>."}\par
00025 {\cf21 #elif Q_MOC_OUTPUT_REVISION != 68}\par
00026 {\cf21 #error "This file was generated using the moc from 6.5.1. It"}\par
00027 {\cf21 #error "cannot be used with the include files from this version of Qt."}\par
00028 {\cf21 #error "(The moc has changed too much.)"}\par
00029 {\cf21 #endif}\par
00030 \par
00031 {\cf21 #ifndef Q_CONSTINIT}\par
00032 {\cf21 #define Q_CONSTINIT}\par
00033 {\cf21 #endif}\par
00034 \par
00035 QT_WARNING_PUSH\par
00036 QT_WARNING_DISABLE_DEPRECATED\par
00037 QT_WARNING_DISABLE_GCC({\cf22 "-Wuseless-cast"})\par
00038 namespace \{\par
00039 \par
00040 {\cf21 #ifdef QT_MOC_HAS_STRINGDATA}\par
00041 {\cf17 struct }qt_meta_stringdata_CLASSSwitchENDCLASS_t \{\};\par
00042 {\cf17 static} {\cf17 constexpr} {\cf17 auto} qt_meta_stringdata_CLASSSwitchENDCLASS = QtMocHelpers::stringData(\par
00043     {\cf22 "Switch"},\par
00044     {\cf22 "offset"},\par
00045     {\cf22 "brush"}\par
00046 );\par
00047 {\cf21 #else  }{\cf20 // !QT_MOC_HAS_STRING_DATA}\par
00048 {\cf17 struct }qt_meta_stringdata_CLASSSwitchENDCLASS_t \{\par
00049     uint offsetsAndSizes[6];\par
00050     {\cf18 char} stringdata0[7];\par
00051     {\cf18 char} stringdata1[7];\par
00052     {\cf18 char} stringdata2[6];\par
00053 \};\par
00054 {\cf21 #define QT_MOC_LITERAL(ofs, len) \\}\par
00055 {\cf21     uint(sizeof(qt_meta_stringdata_CLASSSwitchENDCLASS_t::offsetsAndSizes) + ofs), len }\par
00056 Q_CONSTINIT {\cf17 static} {\cf17 const} qt_meta_stringdata_CLASSSwitchENDCLASS_t qt_meta_stringdata_CLASSSwitchENDCLASS = \{\par
00057     \{\par
00058         QT_MOC_LITERAL(0, 6),  {\cf20 // "Switch"}\par
00059         QT_MOC_LITERAL(7, 6),  {\cf20 // "offset"}\par
00060         QT_MOC_LITERAL(14, 5)   {\cf20 // "brush"}\par
00061     \},\par
00062     {\cf22 "Switch"},\par
00063     {\cf22 "offset"},\par
00064     {\cf22 "brush"}\par
00065 \};\par
00066 {\cf21 #undef QT_MOC_LITERAL}\par
00067 {\cf21 #endif }{\cf20 // !QT_MOC_HAS_STRING_DATA}\par
00068 \} {\cf20 // unnamed namespace}\par
00069 \par
00070 Q_CONSTINIT {\cf17 static} {\cf17 const} uint qt_meta_data_CLASSSwitchENDCLASS[] = \{\par
00071 \par
00072  {\cf20 // content:}\par
00073       11,       {\cf20 // revision}\par
00074        0,       {\cf20 // classname}\par
00075        0,    0, {\cf20 // classinfo}\par
00076        0,    0, {\cf20 // methods}\par
00077        2,   14, {\cf20 // properties}\par
00078        0,    0, {\cf20 // enums/sets}\par
00079        0,    0, {\cf20 // constructors}\par
00080        0,       {\cf20 // flags}\par
00081        0,       {\cf20 // signalCount}\par
00082 \par
00083  {\cf20 // properties: name, type, flags}\par
00084        1, QMetaType::Int, 0x00015103, uint(-1), 0,\par
00085        2, QMetaType::QBrush, 0x00015103, uint(-1), 0,\par
00086 \par
00087        0        {\cf20 // eod}\par
00088 \};\par
00089 \par
00090 Q_CONSTINIT {\cf17 const} QMetaObject Switch::staticMetaObject = \{ \{\par
00091     QMetaObject::SuperData::link<QAbstractButton::staticMetaObject>(),\par
00092     qt_meta_stringdata_CLASSSwitchENDCLASS.offsetsAndSizes,\par
00093     qt_meta_data_CLASSSwitchENDCLASS,\par
00094     qt_static_metacall,\par
00095     {\cf17 nullptr},\par
00096     qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSSwitchENDCLASS_t,\par
00097         {\cf20 // property 'offset'}\par
00098         QtPrivate::TypeAndForceComplete<int, std::true_type>,\par
00099         {\cf20 // property 'brush'}\par
00100         QtPrivate::TypeAndForceComplete<QBrush, std::true_type>,\par
00101         {\cf20 // Q_OBJECT / Q_GADGET}\par
00102         QtPrivate::TypeAndForceComplete<Switch, std::true_type>\par
00103     >,\par
00104     {\cf17 nullptr}\par
00105 \} \};\par
00106 \par
00107 {\cf18 void} Switch::qt_static_metacall(QObject *_o, QMetaObject::Call _c, {\cf18 int} _id, {\cf18 void} **_a)\par
00108 \{\par
00109 {\cf19 if} (_c == QMetaObject::ReadProperty) \{\par
00110         {\cf17 auto} *_t = {\cf17 static_cast<}Switch *{\cf17 >}(_o);\par
00111         (void)_t;\par
00112         {\cf18 void} *_v = _a[0];\par
00113         {\cf19 switch} (_id) \{\par
00114         {\cf19 case} 0: *{\cf17 reinterpret_cast<} {\cf18 int}*{\cf17 >}(_v) = _t->offset(); {\cf19 break};\par
00115         {\cf19 case} 1: *{\cf17 reinterpret_cast<} QBrush*{\cf17 >}(_v) = _t->brush(); {\cf19 break};\par
00116         {\cf19 default}: {\cf19 break};\par
00117         \}\par
00118     \} {\cf19 else} {\cf19 if} (_c == QMetaObject::WriteProperty) \{\par
00119         {\cf17 auto} *_t = {\cf17 static_cast<}Switch *{\cf17 >}(_o);\par
00120         (void)_t;\par
00121         {\cf18 void} *_v = _a[0];\par
00122         {\cf19 switch} (_id) \{\par
00123         {\cf19 case} 0: _t->setOffset(*{\cf17 reinterpret_cast<} {\cf18 int}*{\cf17 >}(_v)); {\cf19 break};\par
00124         {\cf19 case} 1: _t->setBrush(*{\cf17 reinterpret_cast<} QBrush*{\cf17 >}(_v)); {\cf19 break};\par
00125         {\cf19 default}: {\cf19 break};\par
00126         \}\par
00127     \} {\cf19 else} {\cf19 if} (_c == QMetaObject::ResetProperty) \{\par
00128     \} {\cf19 else} {\cf19 if} (_c == QMetaObject::BindableProperty) \{\par
00129     \}\par
00130     (void)_o;\par
00131     (void)_id;\par
00132     (void)_c;\par
00133     (void)_a;\par
00134 \}\par
00135 \par
00136 {\cf17 const} QMetaObject *Switch::metaObject(){\cf17  const}\par
00137 {\cf17 }\{\par
00138     {\cf19 return} QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;\par
00139 \}\par
00140 \par
00141 {\cf18 void} *Switch::qt_metacast({\cf17 const} {\cf18 char} *_clname)\par
00142 \{\par
00143     {\cf19 if} (!_clname) {\cf19 return} {\cf17 nullptr};\par
00144     {\cf19 if} (!strcmp(_clname, qt_meta_stringdata_CLASSSwitchENDCLASS.stringdata0))\par
00145         {\cf19 return} {\cf17 static_cast<}{\cf18 void}*{\cf17 >}({\cf17 this});\par
00146     {\cf19 return} QAbstractButton::qt_metacast(_clname);\par
00147 \}\par
00148 \par
00149 {\cf18 int} Switch::qt_metacall(QMetaObject::Call _c, {\cf18 int} _id, {\cf18 void} **_a)\par
00150 \{\par
00151     _id = QAbstractButton::qt_metacall(_c, _id, _a);\par
00152     {\cf19 if} (_id < 0)\par
00153         {\cf19 return} _id;\par
00154     {\cf19 if} (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty\par
00155             || _c == QMetaObject::ResetProperty || _c == QMetaObject::BindableProperty\par
00156             || _c == QMetaObject::RegisterPropertyMetaType) \{\par
00157         qt_static_metacall({\cf17 this}, _c, _id, _a);\par
00158         _id -= 2;\par
00159     \}\par
00160     {\cf19 return} _id;\par
00161 \}\par
00162 QT_WARNING_POP\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
x64/Release/moc/moc_switch.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v x64/Release/moc/moc_switch.cpp}
{\xe \v x64/Release/moc/moc_switch.cpp}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../../switch.h"}\par
{\f2 #include <QtGui/qtextcursor.h>}\par
{\f2 #include <QScreen>}\par
{\f2 #include <QtCore/qmetatype.h>}\par
{\f2 #include <memory>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b QT_WARNING_DISABLE_DEPRECATED::qt_meta_stringdata_CLASSSwitchENDCLASS_t}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namensbereiche\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b QT_WARNING_DISABLE_DEPRECATED}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makrodefinitionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Q_CONSTINIT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QT_MOC_LITERAL}(ofs,  len)\~     uint(sizeof(qt_meta_stringdata_CLASSSwitchENDCLASS_t::offsetsAndSizes) + ofs), len\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makro-Dokumentation\par
\pard\plain 
{\xe \v Q_CONSTINIT\:moc_switch.cpp}
{\xe \v moc_switch.cpp\:Q_CONSTINIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Q_CONSTINIT}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 32} der Datei {\b moc_switch.cpp}.}\par
}
{\xe \v QT_MOC_LITERAL\:moc_switch.cpp}
{\xe \v moc_switch.cpp\:QT_MOC_LITERAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QT_MOC_LITERAL( ofs,  len)\~     uint(sizeof(qt_meta_stringdata_CLASSSwitchENDCLASS_t::offsetsAndSizes) + ofs), len}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 54} der Datei {\b moc_switch.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
moc_switch.cpp\par \pard\plain 
{\tc\tcl2 \v x64/Release/moc/moc_switch.cpp}
{\xe \v x64/Release/moc/moc_switch.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /****************************************************************************}\par
00002 {\cf20 ** Meta object code from reading C++ file 'switch.h'}\par
00003 {\cf20 **}\par
00004 {\cf20 ** Created by: The Qt Meta Object Compiler version 68 (Qt 6.5.1)}\par
00005 {\cf20 **}\par
00006 {\cf20 ** WARNING! All changes made in this file will be lost!}\par
00007 {\cf20 *****************************************************************************/}\par
00008 \par
00009 {\cf21 #include "../../../switch.h"}\par
00010 {\cf21 #include <QtGui/qtextcursor.h>}\par
00011 {\cf21 #include <QScreen>}\par
00012 {\cf21 #include <QtCore/qmetatype.h>}\par
00013 \par
00014 {\cf21 #if __has_include(<QtCore/qtmochelpers.h>)}\par
00015 {\cf21 #include <QtCore/qtmochelpers.h>}\par
00016 {\cf21 #else}\par
00017 QT_BEGIN_MOC_NAMESPACE\par
00018 {\cf21 #endif}\par
00019 \par
00020 \par
00021 {\cf21 #include <memory>}\par
00022 \par
00023 {\cf21 #if !defined(Q_MOC_OUTPUT_REVISION)}\par
00024 {\cf21 #error "The header file 'switch.h' doesn't include <QObject>."}\par
00025 {\cf21 #elif Q_MOC_OUTPUT_REVISION != 68}\par
00026 {\cf21 #error "This file was generated using the moc from 6.5.1. It"}\par
00027 {\cf21 #error "cannot be used with the include files from this version of Qt."}\par
00028 {\cf21 #error "(The moc has changed too much.)"}\par
00029 {\cf21 #endif}\par
00030 \par
00031 {\cf21 #ifndef Q_CONSTINIT}\par
00032 {\cf21 #define Q_CONSTINIT}\par
00033 {\cf21 #endif}\par
00034 \par
00035 QT_WARNING_PUSH\par
00036 QT_WARNING_DISABLE_DEPRECATED\par
00037 QT_WARNING_DISABLE_GCC({\cf22 "-Wuseless-cast"})\par
00038 namespace \{\par
00039 \par
00040 {\cf21 #ifdef QT_MOC_HAS_STRINGDATA}\par
00041 {\cf17 struct }qt_meta_stringdata_CLASSSwitchENDCLASS_t \{\};\par
00042 {\cf17 static} {\cf17 constexpr} {\cf17 auto} qt_meta_stringdata_CLASSSwitchENDCLASS = QtMocHelpers::stringData(\par
00043     {\cf22 "Switch"},\par
00044     {\cf22 "offset"},\par
00045     {\cf22 "brush"}\par
00046 );\par
00047 {\cf21 #else  }{\cf20 // !QT_MOC_HAS_STRING_DATA}\par
00048 {\cf17 struct }qt_meta_stringdata_CLASSSwitchENDCLASS_t \{\par
00049     uint offsetsAndSizes[6];\par
00050     {\cf18 char} stringdata0[7];\par
00051     {\cf18 char} stringdata1[7];\par
00052     {\cf18 char} stringdata2[6];\par
00053 \};\par
00054 {\cf21 #define QT_MOC_LITERAL(ofs, len) \\}\par
00055 {\cf21     uint(sizeof(qt_meta_stringdata_CLASSSwitchENDCLASS_t::offsetsAndSizes) + ofs), len }\par
00056 Q_CONSTINIT {\cf17 static} {\cf17 const} qt_meta_stringdata_CLASSSwitchENDCLASS_t qt_meta_stringdata_CLASSSwitchENDCLASS = \{\par
00057     \{\par
00058         QT_MOC_LITERAL(0, 6),  {\cf20 // "Switch"}\par
00059         QT_MOC_LITERAL(7, 6),  {\cf20 // "offset"}\par
00060         QT_MOC_LITERAL(14, 5)   {\cf20 // "brush"}\par
00061     \},\par
00062     {\cf22 "Switch"},\par
00063     {\cf22 "offset"},\par
00064     {\cf22 "brush"}\par
00065 \};\par
00066 {\cf21 #undef QT_MOC_LITERAL}\par
00067 {\cf21 #endif }{\cf20 // !QT_MOC_HAS_STRING_DATA}\par
00068 \} {\cf20 // unnamed namespace}\par
00069 \par
00070 Q_CONSTINIT {\cf17 static} {\cf17 const} uint qt_meta_data_CLASSSwitchENDCLASS[] = \{\par
00071 \par
00072  {\cf20 // content:}\par
00073       11,       {\cf20 // revision}\par
00074        0,       {\cf20 // classname}\par
00075        0,    0, {\cf20 // classinfo}\par
00076        0,    0, {\cf20 // methods}\par
00077        2,   14, {\cf20 // properties}\par
00078        0,    0, {\cf20 // enums/sets}\par
00079        0,    0, {\cf20 // constructors}\par
00080        0,       {\cf20 // flags}\par
00081        0,       {\cf20 // signalCount}\par
00082 \par
00083  {\cf20 // properties: name, type, flags}\par
00084        1, QMetaType::Int, 0x00015103, uint(-1), 0,\par
00085        2, QMetaType::QBrush, 0x00015103, uint(-1), 0,\par
00086 \par
00087        0        {\cf20 // eod}\par
00088 \};\par
00089 \par
00090 Q_CONSTINIT {\cf17 const} QMetaObject Switch::staticMetaObject = \{ \{\par
00091     QMetaObject::SuperData::link<QAbstractButton::staticMetaObject>(),\par
00092     qt_meta_stringdata_CLASSSwitchENDCLASS.offsetsAndSizes,\par
00093     qt_meta_data_CLASSSwitchENDCLASS,\par
00094     qt_static_metacall,\par
00095     {\cf17 nullptr},\par
00096     qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSSwitchENDCLASS_t,\par
00097         {\cf20 // property 'offset'}\par
00098         QtPrivate::TypeAndForceComplete<int, std::true_type>,\par
00099         {\cf20 // property 'brush'}\par
00100         QtPrivate::TypeAndForceComplete<QBrush, std::true_type>,\par
00101         {\cf20 // Q_OBJECT / Q_GADGET}\par
00102         QtPrivate::TypeAndForceComplete<Switch, std::true_type>\par
00103     >,\par
00104     {\cf17 nullptr}\par
00105 \} \};\par
00106 \par
00107 {\cf18 void} Switch::qt_static_metacall(QObject *_o, QMetaObject::Call _c, {\cf18 int} _id, {\cf18 void} **_a)\par
00108 \{\par
00109 {\cf19 if} (_c == QMetaObject::ReadProperty) \{\par
00110         {\cf17 auto} *_t = {\cf17 static_cast<}Switch *{\cf17 >}(_o);\par
00111         (void)_t;\par
00112         {\cf18 void} *_v = _a[0];\par
00113         {\cf19 switch} (_id) \{\par
00114         {\cf19 case} 0: *{\cf17 reinterpret_cast<} {\cf18 int}*{\cf17 >}(_v) = _t->offset(); {\cf19 break};\par
00115         {\cf19 case} 1: *{\cf17 reinterpret_cast<} QBrush*{\cf17 >}(_v) = _t->brush(); {\cf19 break};\par
00116         {\cf19 default}: {\cf19 break};\par
00117         \}\par
00118     \} {\cf19 else} {\cf19 if} (_c == QMetaObject::WriteProperty) \{\par
00119         {\cf17 auto} *_t = {\cf17 static_cast<}Switch *{\cf17 >}(_o);\par
00120         (void)_t;\par
00121         {\cf18 void} *_v = _a[0];\par
00122         {\cf19 switch} (_id) \{\par
00123         {\cf19 case} 0: _t->setOffset(*{\cf17 reinterpret_cast<} {\cf18 int}*{\cf17 >}(_v)); {\cf19 break};\par
00124         {\cf19 case} 1: _t->setBrush(*{\cf17 reinterpret_cast<} QBrush*{\cf17 >}(_v)); {\cf19 break};\par
00125         {\cf19 default}: {\cf19 break};\par
00126         \}\par
00127     \} {\cf19 else} {\cf19 if} (_c == QMetaObject::ResetProperty) \{\par
00128     \} {\cf19 else} {\cf19 if} (_c == QMetaObject::BindableProperty) \{\par
00129     \}\par
00130     (void)_o;\par
00131     (void)_id;\par
00132     (void)_c;\par
00133     (void)_a;\par
00134 \}\par
00135 \par
00136 {\cf17 const} QMetaObject *Switch::metaObject(){\cf17  const}\par
00137 {\cf17 }\{\par
00138     {\cf19 return} QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;\par
00139 \}\par
00140 \par
00141 {\cf18 void} *Switch::qt_metacast({\cf17 const} {\cf18 char} *_clname)\par
00142 \{\par
00143     {\cf19 if} (!_clname) {\cf19 return} {\cf17 nullptr};\par
00144     {\cf19 if} (!strcmp(_clname, qt_meta_stringdata_CLASSSwitchENDCLASS.stringdata0))\par
00145         {\cf19 return} {\cf17 static_cast<}{\cf18 void}*{\cf17 >}({\cf17 this});\par
00146     {\cf19 return} QAbstractButton::qt_metacast(_clname);\par
00147 \}\par
00148 \par
00149 {\cf18 int} Switch::qt_metacall(QMetaObject::Call _c, {\cf18 int} _id, {\cf18 void} **_a)\par
00150 \{\par
00151     _id = QAbstractButton::qt_metacall(_c, _id, _a);\par
00152     {\cf19 if} (_id < 0)\par
00153         {\cf19 return} _id;\par
00154     {\cf19 if} (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty\par
00155             || _c == QMetaObject::ResetProperty || _c == QMetaObject::BindableProperty\par
00156             || _c == QMetaObject::RegisterPropertyMetaType) \{\par
00157         qt_static_metacall({\cf17 this}, _c, _id, _a);\par
00158         _id -= 2;\par
00159     \}\par
00160     {\cf19 return} _id;\par
00161 \}\par
00162 QT_WARNING_POP\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
x64/Debug/rcc/qrc_GUI.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v x64/Debug/rcc/qrc_GUI.cpp}
{\xe \v x64/Debug/rcc/qrc_GUI.cpp}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makrodefinitionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QT_RCC_PREPEND_NAMESPACE}(name)\~ name\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QT_RCC_MANGLE_NAMESPACE}(name)\~ name\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funktionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QT_RCC_MANGLE_NAMESPACE}() {\b qInitResources_GUI} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QT_RCC_MANGLE_NAMESPACE}() {\b qCleanupResources_GUI} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makro-Dokumentation\par
\pard\plain 
{\xe \v QT_RCC_MANGLE_NAMESPACE\:qrc_GUI.cpp}
{\xe \v qrc_GUI.cpp\:QT_RCC_MANGLE_NAMESPACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QT_RCC_MANGLE_NAMESPACE( name)\~ name}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 18} der Datei {\b qrc_GUI.cpp}.}\par
}
{\xe \v QT_RCC_PREPEND_NAMESPACE\:qrc_GUI.cpp}
{\xe \v qrc_GUI.cpp\:QT_RCC_PREPEND_NAMESPACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QT_RCC_PREPEND_NAMESPACE( name)\~ name}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 17} der Datei {\b qrc_GUI.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Funktionen\par
\pard\plain 
{\xe \v qCleanupResources_GUI\:qrc_GUI.cpp}
{\xe \v qrc_GUI.cpp\:qCleanupResources_GUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b QT_RCC_MANGLE_NAMESPACE}() qCleanupResources_GUI ()}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 36} der Datei {\b qrc_GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00037 \{\par
00038     {\cf19 return} 1;\par
00039 \}\par
}
}
{\xe \v qInitResources_GUI\:qrc_GUI.cpp}
{\xe \v qrc_GUI.cpp\:qInitResources_GUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b QT_RCC_MANGLE_NAMESPACE}() qInitResources_GUI ()}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 30} der Datei {\b qrc_GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00031 \{\par
00032     {\cf19 return} 1;\par
00033 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
qrc_GUI.cpp\par \pard\plain 
{\tc\tcl2 \v x64/Debug/rcc/qrc_GUI.cpp}
{\xe \v x64/Debug/rcc/qrc_GUI.cpp}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /****************************************************************************}\par
00002 {\cf20 ** Resource object code}\par
00003 {\cf20 **}\par
00004 {\cf20 ** Created by: The Resource Compiler for Qt version 6.5.1}\par
00005 {\cf20 **}\par
00006 {\cf20 ** WARNING! All changes made in this file will be lost!}\par
00007 {\cf20 *****************************************************************************/}\par
00008 \par
00009 {\cf21 #ifdef QT_NAMESPACE}\par
00010 {\cf21 #  define QT_RCC_PREPEND_NAMESPACE(name) ::QT_NAMESPACE::name}\par
00011 {\cf21 #  define QT_RCC_MANGLE_NAMESPACE0(x) x}\par
00012 {\cf21 #  define QT_RCC_MANGLE_NAMESPACE1(a, b) a##_##b}\par
00013 {\cf21 #  define QT_RCC_MANGLE_NAMESPACE2(a, b) QT_RCC_MANGLE_NAMESPACE1(a,b)}\par
00014 {\cf21 #  define QT_RCC_MANGLE_NAMESPACE(name) QT_RCC_MANGLE_NAMESPACE2( \\}\par
00015 {\cf21         QT_RCC_MANGLE_NAMESPACE0(name), QT_RCC_MANGLE_NAMESPACE0(QT_NAMESPACE))}\par
00016 {\cf21 #else}\par
00017 {\cf21 #   define QT_RCC_PREPEND_NAMESPACE(name) name}\par
00018 {\cf21 #   define QT_RCC_MANGLE_NAMESPACE(name) name}\par
00019 {\cf21 #endif}\par
00020 \par
00021 {\cf21 #ifdef QT_NAMESPACE}\par
00022 {\cf17 namespace }QT_NAMESPACE \{\par
00023 {\cf21 #endif}\par
00024 \par
00025 {\cf21 #ifdef QT_NAMESPACE}\par
00026 \}\par
00027 {\cf21 #endif}\par
00028 \par
00029 {\cf18 int} QT_RCC_MANGLE_NAMESPACE(qInitResources_GUI)();\par
00030 {\cf18 int} QT_RCC_MANGLE_NAMESPACE(qInitResources_GUI)()\par
00031 \{\par
00032     {\cf19 return} 1;\par
00033 \}\par
00034 \par
00035 {\cf18 int} QT_RCC_MANGLE_NAMESPACE(qCleanupResources_GUI)();\par
00036 {\cf18 int} QT_RCC_MANGLE_NAMESPACE(qCleanupResources_GUI)()\par
00037 \{\par
00038     {\cf19 return} 1;\par
00039 \}\par
00040 \par
00041 {\cf21 #ifdef __clang__}\par
00042 {\cf21 #   pragma clang diagnostic push}\par
00043 {\cf21 #   pragma clang diagnostic ignored "-Wexit-time-destructors"}\par
00044 {\cf21 #endif}\par
00045 \par
00046 {\cf17 namespace }\{\par
00047    {\cf17 struct }initializer \{\par
00048        initializer() \{ QT_RCC_MANGLE_NAMESPACE(qInitResources_GUI)(); \}\par
00049        ~initializer() \{ QT_RCC_MANGLE_NAMESPACE(qCleanupResources_GUI)(); \}\par
00050    \} dummy;\par
00051 \}\par
00052 \par
00053 {\cf21 #ifdef __clang__}\par
00054 {\cf21 #   pragma clang diagnostic pop}\par
00055 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
x64/Release/rcc/qrc_GUI.cpp-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v x64/Release/rcc/qrc_GUI.cpp}
{\xe \v x64/Release/rcc/qrc_GUI.cpp}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makrodefinitionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QT_RCC_PREPEND_NAMESPACE}(name)\~ name\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QT_RCC_MANGLE_NAMESPACE}(name)\~ name\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funktionen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QT_RCC_MANGLE_NAMESPACE}() {\b qInitResources_GUI} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QT_RCC_MANGLE_NAMESPACE}() {\b qCleanupResources_GUI} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Makro-Dokumentation\par
\pard\plain 
{\xe \v QT_RCC_MANGLE_NAMESPACE\:qrc_GUI.cpp}
{\xe \v qrc_GUI.cpp\:QT_RCC_MANGLE_NAMESPACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QT_RCC_MANGLE_NAMESPACE( name)\~ name}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 18} der Datei {\b qrc_GUI.cpp}.}\par
}
{\xe \v QT_RCC_PREPEND_NAMESPACE\:qrc_GUI.cpp}
{\xe \v qrc_GUI.cpp\:QT_RCC_PREPEND_NAMESPACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QT_RCC_PREPEND_NAMESPACE( name)\~ name}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 17} der Datei {\b qrc_GUI.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentation der Funktionen\par
\pard\plain 
{\xe \v qCleanupResources_GUI\:qrc_GUI.cpp}
{\xe \v qrc_GUI.cpp\:qCleanupResources_GUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b QT_RCC_MANGLE_NAMESPACE}() qCleanupResources_GUI ()}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 36} der Datei {\b qrc_GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00037 \{\par
00038     {\cf19 return} 1;\par
00039 \}\par
}
}
{\xe \v qInitResources_GUI\:qrc_GUI.cpp}
{\xe \v qrc_GUI.cpp\:qInitResources_GUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b QT_RCC_MANGLE_NAMESPACE}() qInitResources_GUI ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definiert in Zeile {\b 30} der Datei {\b qrc_GUI.cpp}.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00031 \{\par
00032     {\cf19 return} 1;\par
00033 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
qrc_GUI.cpp\par \pard\plain 
{\tc\tcl2 \v x64/Release/rcc/qrc_GUI.cpp}
{\xe \v x64/Release/rcc/qrc_GUI.cpp}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /****************************************************************************}\par
00002 {\cf20 ** Resource object code}\par
00003 {\cf20 **}\par
00004 {\cf20 ** Created by: The Resource Compiler for Qt version 6.5.1}\par
00005 {\cf20 **}\par
00006 {\cf20 ** WARNING! All changes made in this file will be lost!}\par
00007 {\cf20 *****************************************************************************/}\par
00008 \par
00009 {\cf21 #ifdef QT_NAMESPACE}\par
00010 {\cf21 #  define QT_RCC_PREPEND_NAMESPACE(name) ::QT_NAMESPACE::name}\par
00011 {\cf21 #  define QT_RCC_MANGLE_NAMESPACE0(x) x}\par
00012 {\cf21 #  define QT_RCC_MANGLE_NAMESPACE1(a, b) a##_##b}\par
00013 {\cf21 #  define QT_RCC_MANGLE_NAMESPACE2(a, b) QT_RCC_MANGLE_NAMESPACE1(a,b)}\par
00014 {\cf21 #  define QT_RCC_MANGLE_NAMESPACE(name) QT_RCC_MANGLE_NAMESPACE2( \\}\par
00015 {\cf21         QT_RCC_MANGLE_NAMESPACE0(name), QT_RCC_MANGLE_NAMESPACE0(QT_NAMESPACE))}\par
00016 {\cf21 #else}\par
00017 {\cf21 #   define QT_RCC_PREPEND_NAMESPACE(name) name}\par
00018 {\cf21 #   define QT_RCC_MANGLE_NAMESPACE(name) name}\par
00019 {\cf21 #endif}\par
00020 \par
00021 {\cf21 #ifdef QT_NAMESPACE}\par
00022 {\cf17 namespace }QT_NAMESPACE \{\par
00023 {\cf21 #endif}\par
00024 \par
00025 {\cf21 #ifdef QT_NAMESPACE}\par
00026 \}\par
00027 {\cf21 #endif}\par
00028 \par
00029 {\cf18 int} QT_RCC_MANGLE_NAMESPACE(qInitResources_GUI)();\par
00030 {\cf18 int} QT_RCC_MANGLE_NAMESPACE(qInitResources_GUI)()\par
00031 \{\par
00032     {\cf19 return} 1;\par
00033 \}\par
00034 \par
00035 {\cf18 int} QT_RCC_MANGLE_NAMESPACE(qCleanupResources_GUI)();\par
00036 {\cf18 int} QT_RCC_MANGLE_NAMESPACE(qCleanupResources_GUI)()\par
00037 \{\par
00038     {\cf19 return} 1;\par
00039 \}\par
00040 \par
00041 {\cf21 #ifdef __clang__}\par
00042 {\cf21 #   pragma clang diagnostic push}\par
00043 {\cf21 #   pragma clang diagnostic ignored "-Wexit-time-destructors"}\par
00044 {\cf21 #endif}\par
00045 \par
00046 {\cf17 namespace }\{\par
00047    {\cf17 struct }initializer \{\par
00048        initializer() \{ QT_RCC_MANGLE_NAMESPACE(qInitResources_GUI)(); \}\par
00049        ~initializer() \{ QT_RCC_MANGLE_NAMESPACE(qCleanupResources_GUI)(); \}\par
00050    \} dummy;\par
00051 \}\par
00052 \par
00053 {\cf21 #ifdef __clang__}\par
00054 {\cf21 #   pragma clang diagnostic pop}\par
00055 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
x64/Debug/uic/ui_GUI.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v x64/Debug/uic/ui_GUI.h}
{\xe \v x64/Debug/uic/ui_GUI.h}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QtCore/QVariant>}\par
{\f2 #include <QtWidgets/QApplication>}\par
{\f2 #include <QtWidgets/QCheckBox>}\par
{\f2 #include <QtWidgets/QDoubleSpinBox>}\par
{\f2 #include <QtWidgets/QFrame>}\par
{\f2 #include <QtWidgets/QLabel>}\par
{\f2 #include <QtWidgets/QMainWindow>}\par
{\f2 #include <QtWidgets/QPushButton>}\par
{\f2 #include <QtWidgets/QSpinBox>}\par
{\f2 #include <QtWidgets/QTextBrowser>}\par
{\f2 #include <QtWidgets/QWidget>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ui_GUIClass}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ui::GUIClass}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namensbereiche\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ui_GUI.h\par \pard\plain 
{\tc\tcl2 \v x64/Debug/uic/ui_GUI.h}
{\xe \v x64/Debug/uic/ui_GUI.h}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /********************************************************************************}\par
00002 {\cf20 ** Form generated from reading UI file 'GUI.ui'}\par
00003 {\cf20 **}\par
00004 {\cf20 ** Created by: Qt User Interface Compiler version 6.5.1}\par
00005 {\cf20 **}\par
00006 {\cf20 ** WARNING! All changes made in this file will be lost when recompiling UI file!}\par
00007 {\cf20 ********************************************************************************/}\par
00008 \par
00009 {\cf21 #ifndef UI_GUI_H}\par
00010 {\cf21 #define UI_GUI_H}\par
00011 \par
00012 {\cf21 #include <QtCore/QVariant>}\par
00013 {\cf21 #include <QtWidgets/QApplication>}\par
00014 {\cf21 #include <QtWidgets/QCheckBox>}\par
00015 {\cf21 #include <QtWidgets/QDoubleSpinBox>}\par
00016 {\cf21 #include <QtWidgets/QFrame>}\par
00017 {\cf21 #include <QtWidgets/QLabel>}\par
00018 {\cf21 #include <QtWidgets/QMainWindow>}\par
00019 {\cf21 #include <QtWidgets/QPushButton>}\par
00020 {\cf21 #include <QtWidgets/QSpinBox>}\par
00021 {\cf21 #include <QtWidgets/QTextBrowser>}\par
00022 {\cf21 #include <QtWidgets/QWidget>}\par
00023 \par
00024 QT_BEGIN_NAMESPACE\par
00025 \par
00026 {\cf17 class }Ui_GUIClass\par
00027 \{\par
00028 {\cf17 public}:\par
00029     QWidget *centralWidget;\par
00030     QLabel *pathInput;\par
00031     QFrame *frame;\par
00032     QWidget *speed_2;\par
00033     QDoubleSpinBox *speed;\par
00034     QLabel *label_5;\par
00035     QCheckBox *bSpeed;\par
00036     QWidget *orientation;\par
00037     QLabel *label_10;\par
00038     QLabel *label_11;\par
00039     QLabel *label_12;\par
00040     QDoubleSpinBox *AValue;\par
00041     QDoubleSpinBox *BValue;\par
00042     QDoubleSpinBox *CValue;\par
00043     QCheckBox *bManOrientation;\par
00044     QSpinBox *meanLength;\par
00045     QLabel *label_dp;\par
00046     QLabel *label_4;\par
00047     QSpinBox *dpToleranz;\par
00048     QPushButton *pushInput;\par
00049     QPushButton *pushOutput;\par
00050     QTextBrowser *textBrowser;\par
00051     QPushButton *startCalculation;\par
00052     QLabel *pathOutput;\par
00053 \par
00054     {\cf18 void} setupUi(QMainWindow *GUIClass)\par
00055     \{\par
00056         {\cf19 if} (GUIClass->objectName().isEmpty())\par
00057             GUIClass->setObjectName({\cf22 "GUIClass"});\par
00058         GUIClass->resize(355, 530);\par
00059         QSizePolicy sizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);\par
00060         sizePolicy.setHorizontalStretch(0);\par
00061         sizePolicy.setVerticalStretch(0);\par
00062         sizePolicy.setHeightForWidth(GUIClass->sizePolicy().hasHeightForWidth());\par
00063         GUIClass->setSizePolicy(sizePolicy);\par
00064         GUIClass->setMinimumSize(QSize(355, 530));\par
00065         GUIClass->setMaximumSize(QSize(355, 720));\par
00066         QFont font;\par
00067         font.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00068         GUIClass->setFont(font);\par
00069         GUIClass->setAnimated({\cf17 true});\par
00070         GUIClass->setTabShape(QTabWidget::Rounded);\par
00071         GUIClass->setUnifiedTitleAndToolBarOnMac({\cf17 false});\par
00072         centralWidget = {\cf17 new} QWidget(GUIClass);\par
00073         centralWidget->setObjectName({\cf22 "centralWidget"});\par
00074         QFont font1;\par
00075         font1.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00076         font1.setBold({\cf17 false});\par
00077         font1.setItalic({\cf17 false});\par
00078         centralWidget->setFont(font1);\par
00079         centralWidget->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(3, 8, 14);\\n"}\par
00080 {\cf22 "color: rgb(3, 8, 14)\\n"}\par
00081 {\cf22 ""}));\par
00082         pathInput = {\cf17 new} QLabel(centralWidget);\par
00083         pathInput->setObjectName({\cf22 "pathInput"});\par
00084         pathInput->setGeometry(QRect(10, 10, 331, 31));\par
00085         pathInput->setFont(font1);\par
00086         pathInput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00087 {\cf22 "border-radius: 10px;\\n"}\par
00088 {\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00089 {\cf22 "color: rgb(3, 8, 14);"}));\par
00090         frame = {\cf17 new} QFrame(centralWidget);\par
00091         frame->setObjectName({\cf22 "frame"});\par
00092         frame->setGeometry(QRect(10, 90, 331, 321));\par
00093         frame->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00094 {\cf22 "border-radius: 10px;\\n"}\par
00095 {\cf22 "background-color: rgb(117, 125, 149)"}));\par
00096         frame->setFrameShape(QFrame::Box);\par
00097         frame->setFrameShadow(QFrame::Raised);\par
00098         frame->setLineWidth(1);\par
00099         speed_2 = {\cf17 new} QWidget(frame);\par
00100         speed_2->setObjectName({\cf22 "speed_2"});\par
00101         speed_2->setEnabled({\cf17 false});\par
00102         speed_2->setGeometry(QRect(10, 110, 301, 41));\par
00103         QFont font2;\par
00104         font2.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00105         font2.setBold({\cf17 true});\par
00106         speed_2->setFont(font2);\par
00107         speed_2->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210,211,218);\\n"}\par
00108 {\cf22 "color: rgb(117, 125, 149);\\n"}\par
00109 {\cf22 "border: 1px solid rgb(67, 72, 91); "}));\par
00110         speed = {\cf17 new} QDoubleSpinBox(speed_2);\par
00111         speed->setObjectName({\cf22 "speed"});\par
00112         speed->setGeometry(QRect(159, 12, 136, 20));\par
00113         speed->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00114 {\cf22 "\\n"}\par
00115 {\cf22 "border-radius: 6px;"}));\par
00116         speed->setAlignment(Qt::AlignCenter);\par
00117         label_5 = {\cf17 new} QLabel(speed_2);\par
00118         label_5->setObjectName({\cf22 "label_5"});\par
00119         label_5->setGeometry(QRect(11, 12, 93, 16));\par
00120         label_5->setFont(font1);\par
00121         label_5->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00122         bSpeed = {\cf17 new} QCheckBox(frame);\par
00123         bSpeed->setObjectName({\cf22 "bSpeed"});\par
00124         bSpeed->setGeometry(QRect(10, 80, 171, 20));\par
00125         bSpeed->setFont(font1);\par
00126         bSpeed->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00127 {\cf22 "border: 0px"}));\par
00128         orientation = {\cf17 new} QWidget(frame);\par
00129         orientation->setObjectName({\cf22 "orientation"});\par
00130         orientation->setEnabled({\cf17 false});\par
00131         orientation->setGeometry(QRect(10, 190, 301, 111));\par
00132         orientation->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210,211,218);\\n"}\par
00133 {\cf22 "color: rgb(117, 125, 149);\\n"}\par
00134 {\cf22 "border: 1px solid rgb(67, 72, 91); "}));\par
00135         label_10 = {\cf17 new} QLabel(orientation);\par
00136         label_10->setObjectName({\cf22 "label_10"});\par
00137         label_10->setGeometry(QRect(10, 15, 18, 16));\par
00138         label_10->setFont(font1);\par
00139         label_10->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00140         label_11 = {\cf17 new} QLabel(orientation);\par
00141         label_11->setObjectName({\cf22 "label_11"});\par
00142         label_11->setGeometry(QRect(11, 47, 33, 16));\par
00143         label_11->setFont(font1);\par
00144         label_11->setStyleSheet(QString::fromUtf8({\cf22 "\\n"}\par
00145 {\cf22 "border: 0px"}));\par
00146         label_12 = {\cf17 new} QLabel(orientation);\par
00147         label_12->setObjectName({\cf22 "label_12"});\par
00148         label_12->setGeometry(QRect(11, 78, 17, 16));\par
00149         label_12->setFont(font1);\par
00150         label_12->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00151         AValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00152         AValue->setObjectName({\cf22 "AValue"});\par
00153         AValue->setGeometry(QRect(153, 15, 141, 20));\par
00154         AValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00155 {\cf22 "\\n"}\par
00156 {\cf22 "border-radius: 6px;"}));\par
00157         BValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00158         BValue->setObjectName({\cf22 "BValue"});\par
00159         BValue->setGeometry(QRect(154, 47, 141, 20));\par
00160         BValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00161 {\cf22 "\\n"}\par
00162 {\cf22 "border-radius: 6px;"}));\par
00163         CValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00164         CValue->setObjectName({\cf22 "CValue"});\par
00165         CValue->setGeometry(QRect(154, 78, 141, 20));\par
00166         CValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00167 {\cf22 "\\n"}\par
00168 {\cf22 "border-radius: 6px;"}));\par
00169         label_12->raise();\par
00170         label_10->raise();\par
00171         AValue->raise();\par
00172         BValue->raise();\par
00173         CValue->raise();\par
00174         label_11->raise();\par
00175         bManOrientation = {\cf17 new} QCheckBox(frame);\par
00176         bManOrientation->setObjectName({\cf22 "bManOrientation"});\par
00177         bManOrientation->setGeometry(QRect(10, 160, 151, 20));\par
00178         bManOrientation->setFont(font1);\par
00179         bManOrientation->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00180 {\cf22 "border: 0px"}));\par
00181         meanLength = {\cf17 new} QSpinBox(frame);\par
00182         meanLength->setObjectName({\cf22 "meanLength"});\par
00183         meanLength->setGeometry(QRect(198, 48, 116, 20));\par
00184         meanLength->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00185 {\cf22 "\\n"}\par
00186 {\cf22 "border-radius: 6px;"}));\par
00187         label_dp = {\cf17 new} QLabel(frame);\par
00188         label_dp->setObjectName({\cf22 "label_dp"});\par
00189         label_dp->setGeometry(QRect(12, 22, 144, 16));\par
00190         label_dp->setFont(font1);\par
00191         label_dp->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00192 {\cf22 "border: 0px"}));\par
00193         label_4 = {\cf17 new} QLabel(frame);\par
00194         label_4->setObjectName({\cf22 "label_4"});\par
00195         label_4->setGeometry(QRect(12, 48, 180, 16));\par
00196         label_4->setFont(font1);\par
00197         label_4->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00198 {\cf22 "border: 0px"}));\par
00199         dpToleranz = {\cf17 new} QSpinBox(frame);\par
00200         dpToleranz->setObjectName({\cf22 "dpToleranz"});\par
00201         dpToleranz->setGeometry(QRect(198, 22, 116, 20));\par
00202         dpToleranz->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00203 {\cf22 "\\n"}\par
00204 {\cf22 "border-radius: 6px;"}));\par
00205         dpToleranz->setFrame({\cf17 true});\par
00206         dpToleranz->setButtonSymbols(QAbstractSpinBox::UpDownArrows);\par
00207         dpToleranz->setAccelerated({\cf17 false});\par
00208         pushInput = {\cf17 new} QPushButton(centralWidget);\par
00209         pushInput->setObjectName({\cf22 "pushInput"});\par
00210         pushInput->setGeometry(QRect(240, 10, 101, 31));\par
00211         pushInput->setFont(font1);\par
00212         pushInput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00213 {\cf22 "border-radius: 10px;\\n"}\par
00214 {\cf22 "background-color: rgb(117, 125, 149);\\n"}\par
00215 {\cf22 "color: rgb(3, 8, 14);"}));\par
00216         pushOutput = {\cf17 new} QPushButton(centralWidget);\par
00217         pushOutput->setObjectName({\cf22 "pushOutput"});\par
00218         pushOutput->setGeometry(QRect(240, 50, 101, 31));\par
00219         pushOutput->setFont(font1);\par
00220         pushOutput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00221 {\cf22 "border-radius: 10px;\\n"}\par
00222 {\cf22 "background-color: rgb(117, 125, 149);\\n"}\par
00223 {\cf22 "color: rgb(3, 8, 14);"}));\par
00224         textBrowser = {\cf17 new} QTextBrowser(centralWidget);\par
00225         textBrowser->setObjectName({\cf22 "textBrowser"});\par
00226         textBrowser->setGeometry(QRect(0, 460, 355, 71));\par
00227         textBrowser->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00228 {\cf22 "border-radius: 0px"}));\par
00229         startCalculation = {\cf17 new} QPushButton(centralWidget);\par
00230         startCalculation->setObjectName({\cf22 "startCalculation"});\par
00231         startCalculation->setGeometry(QRect(10, 420, 331, 31));\par
00232         sizePolicy.setHeightForWidth(startCalculation->sizePolicy().hasHeightForWidth());\par
00233         startCalculation->setSizePolicy(sizePolicy);\par
00234         QFont font3;\par
00235         font3.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00236         font3.setPointSize(10);\par
00237         font3.setBold({\cf17 false});\par
00238         font3.setItalic({\cf17 false});\par
00239         startCalculation->setFont(font3);\par
00240         startCalculation->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black;\\n"}\par
00241 {\cf22 "border-radius: 10px;\\n"}\par
00242 {\cf22 "background-color: rgb(67, 72, 91);\\n"}\par
00243 {\cf22 "color: rgb(210, 211, 218)"}));\par
00244         pathOutput = {\cf17 new} QLabel(centralWidget);\par
00245         pathOutput->setObjectName({\cf22 "pathOutput"});\par
00246         pathOutput->setGeometry(QRect(10, 50, 331, 31));\par
00247         pathOutput->setFont(font1);\par
00248         pathOutput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00249 {\cf22 "border-radius: 10px;\\n"}\par
00250 {\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00251 {\cf22 "color: rgb(3, 8, 14);"}));\par
00252         pathOutput->setTextFormat(Qt::MarkdownText);\par
00253         GUIClass->setCentralWidget(centralWidget);\par
00254         pathInput->raise();\par
00255         frame->raise();\par
00256         textBrowser->raise();\par
00257         startCalculation->raise();\par
00258         pathOutput->raise();\par
00259         pushOutput->raise();\par
00260         pushInput->raise();\par
00261 \par
00262         retranslateUi(GUIClass);\par
00263 \par
00264         QMetaObject::connectSlotsByName(GUIClass);\par
00265     \} {\cf20 // setupUi}\par
00266 \par
00267     {\cf18 void} retranslateUi(QMainWindow *GUIClass)\par
00268     \{\par
00269         GUIClass->setWindowTitle(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Roboter Pfad Editor"}, {\cf17 nullptr}));\par
00270         pathInput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Eingabedatei"}, {\cf17 nullptr}));\par
00271         speed->setSuffix(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 " m/s"}, {\cf17 nullptr}));\par
00272         label_5->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Geschwindigkeit"}, {\cf17 nullptr}));\par
00273         bSpeed->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Manuelle Geschwindigkeit"}, {\cf17 nullptr}));\par
00274         label_10->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Phi"}, {\cf17 nullptr}));\par
00275         label_11->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Theta"}, {\cf17 nullptr}));\par
00276         label_12->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Psi"}, {\cf17 nullptr}));\par
00277         bManOrientation->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Manuelle Ausrichtung"}, {\cf17 nullptr}));\par
00278         label_dp->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Douglas-Peuker-Toleranz"}, {\cf17 nullptr}));\par
00279         label_4->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Filterl\\303\\244nge gleitender Mittelwert"}, {\cf17 nullptr}));\par
00280         dpToleranz->setSpecialValueText(QString());\par
00281         dpToleranz->setSuffix(QString());\par
00282         pushInput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Datei w\\303\\244hlen"}, {\cf17 nullptr}));\par
00283         pushOutput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Pfad w\\303\\244hlen"}, {\cf17 nullptr}));\par
00284         startCalculation->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Datei erstellen"}, {\cf17 nullptr}));\par
00285         pathOutput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Ausgabeordner"}, {\cf17 nullptr}));\par
00286     \} {\cf20 // retranslateUi}\par
00287 \par
00288 \};\par
00289 \par
00290 {\cf17 namespace }Ui \{\par
00291     {\cf17 class }GUIClass: {\cf17 public} Ui_GUIClass \{\};\par
00292 \} {\cf20 // namespace Ui}\par
00293 \par
00294 QT_END_NAMESPACE\par
00295 \par
00296 {\cf21 #endif }{\cf20 // UI_GUI_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
x64/Release/uic/ui_GUI.h-Dateireferenz\par \pard\plain 
{\tc\tcl2 \v x64/Release/uic/ui_GUI.h}
{\xe \v x64/Release/uic/ui_GUI.h}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QtCore/QVariant>}\par
{\f2 #include <QtWidgets/QApplication>}\par
{\f2 #include <QtWidgets/QCheckBox>}\par
{\f2 #include <QtWidgets/QDoubleSpinBox>}\par
{\f2 #include <QtWidgets/QFrame>}\par
{\f2 #include <QtWidgets/QLabel>}\par
{\f2 #include <QtWidgets/QMainWindow>}\par
{\f2 #include <QtWidgets/QPushButton>}\par
{\f2 #include <QtWidgets/QSpinBox>}\par
{\f2 #include <QtWidgets/QTextBrowser>}\par
{\f2 #include <QtWidgets/QWidget>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Klassen\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ui_GUIClass}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ui::GUIClass}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namensbereiche\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ui_GUI.h\par \pard\plain 
{\tc\tcl2 \v x64/Release/uic/ui_GUI.h}
{\xe \v x64/Release/uic/ui_GUI.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
gehe zur Dokumentation dieser Datei{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /********************************************************************************}\par
00002 {\cf20 ** Form generated from reading UI file 'GUI.ui'}\par
00003 {\cf20 **}\par
00004 {\cf20 ** Created by: Qt User Interface Compiler version 6.5.1}\par
00005 {\cf20 **}\par
00006 {\cf20 ** WARNING! All changes made in this file will be lost when recompiling UI file!}\par
00007 {\cf20 ********************************************************************************/}\par
00008 \par
00009 {\cf21 #ifndef UI_GUI_H}\par
00010 {\cf21 #define UI_GUI_H}\par
00011 \par
00012 {\cf21 #include <QtCore/QVariant>}\par
00013 {\cf21 #include <QtWidgets/QApplication>}\par
00014 {\cf21 #include <QtWidgets/QCheckBox>}\par
00015 {\cf21 #include <QtWidgets/QDoubleSpinBox>}\par
00016 {\cf21 #include <QtWidgets/QFrame>}\par
00017 {\cf21 #include <QtWidgets/QLabel>}\par
00018 {\cf21 #include <QtWidgets/QMainWindow>}\par
00019 {\cf21 #include <QtWidgets/QPushButton>}\par
00020 {\cf21 #include <QtWidgets/QSpinBox>}\par
00021 {\cf21 #include <QtWidgets/QTextBrowser>}\par
00022 {\cf21 #include <QtWidgets/QWidget>}\par
00023 \par
00024 QT_BEGIN_NAMESPACE\par
00025 \par
00026 {\cf17 class }Ui_GUIClass\par
00027 \{\par
00028 {\cf17 public}:\par
00029     QWidget *centralWidget;\par
00030     QLabel *pathInput;\par
00031     QFrame *frame;\par
00032     QWidget *speed_2;\par
00033     QDoubleSpinBox *speed;\par
00034     QLabel *label_5;\par
00035     QCheckBox *bSpeed;\par
00036     QWidget *orientation;\par
00037     QLabel *label_10;\par
00038     QLabel *label_11;\par
00039     QLabel *label_12;\par
00040     QDoubleSpinBox *AValue;\par
00041     QDoubleSpinBox *BValue;\par
00042     QDoubleSpinBox *CValue;\par
00043     QCheckBox *bManOrientation;\par
00044     QSpinBox *meanLength;\par
00045     QLabel *label_dp;\par
00046     QLabel *label_4;\par
00047     QSpinBox *dpToleranz;\par
00048     QCheckBox *bLogging;\par
00049     QCheckBox *bOffset;\par
00050     QWidget *offset;\par
00051     QLabel *label_13;\par
00052     QLabel *label_14;\par
00053     QLabel *label_15;\par
00054     QDoubleSpinBox *offsetX;\par
00055     QDoubleSpinBox *offsetY;\par
00056     QDoubleSpinBox *offsetZ;\par
00057     QPushButton *pushInput;\par
00058     QPushButton *pushOutput;\par
00059     QTextBrowser *textBrowser;\par
00060     QPushButton *startCalculation;\par
00061     QLabel *pathOutput;\par
00062 \par
00063     {\cf18 void} setupUi(QMainWindow *GUIClass)\par
00064     \{\par
00065         {\cf19 if} (GUIClass->objectName().isEmpty())\par
00066             GUIClass->setObjectName({\cf22 "GUIClass"});\par
00067         GUIClass->resize(355, 700);\par
00068         QSizePolicy sizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);\par
00069         sizePolicy.setHorizontalStretch(0);\par
00070         sizePolicy.setVerticalStretch(0);\par
00071         sizePolicy.setHeightForWidth(GUIClass->sizePolicy().hasHeightForWidth());\par
00072         GUIClass->setSizePolicy(sizePolicy);\par
00073         GUIClass->setMinimumSize(QSize(355, 530));\par
00074         GUIClass->setMaximumSize(QSize(355, 700));\par
00075         QFont font;\par
00076         font.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00077         GUIClass->setFont(font);\par
00078         GUIClass->setAnimated({\cf17 true});\par
00079         GUIClass->setTabShape(QTabWidget::Rounded);\par
00080         GUIClass->setUnifiedTitleAndToolBarOnMac({\cf17 false});\par
00081         centralWidget = {\cf17 new} QWidget(GUIClass);\par
00082         centralWidget->setObjectName({\cf22 "centralWidget"});\par
00083         QFont font1;\par
00084         font1.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00085         font1.setBold({\cf17 false});\par
00086         font1.setItalic({\cf17 false});\par
00087         centralWidget->setFont(font1);\par
00088         centralWidget->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(3, 8, 14);\\n"}\par
00089 {\cf22 "color: rgb(3, 8, 14)\\n"}\par
00090 {\cf22 ""}));\par
00091         pathInput = {\cf17 new} QLabel(centralWidget);\par
00092         pathInput->setObjectName({\cf22 "pathInput"});\par
00093         pathInput->setGeometry(QRect(10, 10, 331, 31));\par
00094         pathInput->setFont(font1);\par
00095         pathInput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00096 {\cf22 "border-radius: 10px;\\n"}\par
00097 {\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00098 {\cf22 "color: rgb(3, 8, 14);"}));\par
00099         frame = {\cf17 new} QFrame(centralWidget);\par
00100         frame->setObjectName({\cf22 "frame"});\par
00101         frame->setGeometry(QRect(10, 90, 331, 491));\par
00102         frame->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00103 {\cf22 "border-radius: 10px;\\n"}\par
00104 {\cf22 "background-color: rgb(117, 125, 149)"}));\par
00105         frame->setFrameShape(QFrame::Box);\par
00106         frame->setFrameShadow(QFrame::Raised);\par
00107         frame->setLineWidth(1);\par
00108         speed_2 = {\cf17 new} QWidget(frame);\par
00109         speed_2->setObjectName({\cf22 "speed_2"});\par
00110         speed_2->setEnabled({\cf17 false});\par
00111         speed_2->setGeometry(QRect(15, 110, 301, 41));\par
00112         QFont font2;\par
00113         font2.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00114         font2.setBold({\cf17 true});\par
00115         speed_2->setFont(font2);\par
00116         speed_2->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210,211,218);\\n"}\par
00117 {\cf22 "color: rgb(117, 125, 149);\\n"}\par
00118 {\cf22 "border: 1px solid rgb(67, 72, 91); "}));\par
00119         speed = {\cf17 new} QDoubleSpinBox(speed_2);\par
00120         speed->setObjectName({\cf22 "speed"});\par
00121         speed->setGeometry(QRect(159, 12, 136, 20));\par
00122         speed->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00123 {\cf22 "\\n"}\par
00124 {\cf22 "border-radius: 6px;"}));\par
00125         speed->setAlignment(Qt::AlignCenter);\par
00126         label_5 = {\cf17 new} QLabel(speed_2);\par
00127         label_5->setObjectName({\cf22 "label_5"});\par
00128         label_5->setGeometry(QRect(11, 12, 93, 16));\par
00129         label_5->setFont(font1);\par
00130         label_5->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00131         bSpeed = {\cf17 new} QCheckBox(frame);\par
00132         bSpeed->setObjectName({\cf22 "bSpeed"});\par
00133         bSpeed->setGeometry(QRect(15, 80, 171, 20));\par
00134         bSpeed->setFont(font1);\par
00135         bSpeed->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00136 {\cf22 "border: 0px"}));\par
00137         orientation = {\cf17 new} QWidget(frame);\par
00138         orientation->setObjectName({\cf22 "orientation"});\par
00139         orientation->setEnabled({\cf17 false});\par
00140         orientation->setGeometry(QRect(15, 190, 301, 111));\par
00141         orientation->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210,211,218);\\n"}\par
00142 {\cf22 "color: rgb(117, 125, 149);\\n"}\par
00143 {\cf22 "border: 1px solid rgb(67, 72, 91); "}));\par
00144         label_10 = {\cf17 new} QLabel(orientation);\par
00145         label_10->setObjectName({\cf22 "label_10"});\par
00146         label_10->setGeometry(QRect(10, 15, 18, 16));\par
00147         label_10->setFont(font1);\par
00148         label_10->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00149         label_11 = {\cf17 new} QLabel(orientation);\par
00150         label_11->setObjectName({\cf22 "label_11"});\par
00151         label_11->setGeometry(QRect(11, 47, 33, 16));\par
00152         label_11->setFont(font1);\par
00153         label_11->setStyleSheet(QString::fromUtf8({\cf22 "\\n"}\par
00154 {\cf22 "border: 0px"}));\par
00155         label_12 = {\cf17 new} QLabel(orientation);\par
00156         label_12->setObjectName({\cf22 "label_12"});\par
00157         label_12->setGeometry(QRect(11, 78, 17, 16));\par
00158         label_12->setFont(font1);\par
00159         label_12->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00160         AValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00161         AValue->setObjectName({\cf22 "AValue"});\par
00162         AValue->setGeometry(QRect(153, 15, 141, 20));\par
00163         AValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00164 {\cf22 "\\n"}\par
00165 {\cf22 "border-radius: 6px;"}));\par
00166         BValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00167         BValue->setObjectName({\cf22 "BValue"});\par
00168         BValue->setGeometry(QRect(154, 47, 141, 20));\par
00169         BValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00170 {\cf22 "\\n"}\par
00171 {\cf22 "border-radius: 6px;"}));\par
00172         CValue = {\cf17 new} QDoubleSpinBox(orientation);\par
00173         CValue->setObjectName({\cf22 "CValue"});\par
00174         CValue->setGeometry(QRect(154, 78, 141, 20));\par
00175         CValue->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00176 {\cf22 "\\n"}\par
00177 {\cf22 "border-radius: 6px;"}));\par
00178         label_12->raise();\par
00179         label_10->raise();\par
00180         AValue->raise();\par
00181         BValue->raise();\par
00182         CValue->raise();\par
00183         label_11->raise();\par
00184         bManOrientation = {\cf17 new} QCheckBox(frame);\par
00185         bManOrientation->setObjectName({\cf22 "bManOrientation"});\par
00186         bManOrientation->setGeometry(QRect(15, 160, 151, 20));\par
00187         bManOrientation->setFont(font1);\par
00188         bManOrientation->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00189 {\cf22 "border: 0px"}));\par
00190         meanLength = {\cf17 new} QSpinBox(frame);\par
00191         meanLength->setObjectName({\cf22 "meanLength"});\par
00192         meanLength->setGeometry(QRect(200, 48, 116, 20));\par
00193         meanLength->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00194 {\cf22 "\\n"}\par
00195 {\cf22 "border-radius: 6px;"}));\par
00196         label_dp = {\cf17 new} QLabel(frame);\par
00197         label_dp->setObjectName({\cf22 "label_dp"});\par
00198         label_dp->setGeometry(QRect(14, 22, 144, 16));\par
00199         label_dp->setFont(font1);\par
00200         label_dp->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00201 {\cf22 "border: 0px"}));\par
00202         label_4 = {\cf17 new} QLabel(frame);\par
00203         label_4->setObjectName({\cf22 "label_4"});\par
00204         label_4->setGeometry(QRect(14, 48, 180, 16));\par
00205         label_4->setFont(font1);\par
00206         label_4->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00207 {\cf22 "border: 0px"}));\par
00208         dpToleranz = {\cf17 new} QSpinBox(frame);\par
00209         dpToleranz->setObjectName({\cf22 "dpToleranz"});\par
00210         dpToleranz->setGeometry(QRect(200, 22, 116, 20));\par
00211         dpToleranz->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00212 {\cf22 "\\n"}\par
00213 {\cf22 "border-radius: 6px;"}));\par
00214         dpToleranz->setFrame({\cf17 true});\par
00215         dpToleranz->setButtonSymbols(QAbstractSpinBox::UpDownArrows);\par
00216         dpToleranz->setAccelerated({\cf17 false});\par
00217         bLogging = {\cf17 new} QCheckBox(frame);\par
00218         bLogging->setObjectName({\cf22 "bLogging"});\par
00219         bLogging->setGeometry(QRect(15, 460, 151, 20));\par
00220         bLogging->setFont(font1);\par
00221         bLogging->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00222 {\cf22 "border: 0px"}));\par
00223         bOffset = {\cf17 new} QCheckBox(frame);\par
00224         bOffset->setObjectName({\cf22 "bOffset"});\par
00225         bOffset->setGeometry(QRect(15, 310, 151, 20));\par
00226         bOffset->setFont(font1);\par
00227         bOffset->setStyleSheet(QString::fromUtf8({\cf22 "color: rgb(3, 8, 14);\\n"}\par
00228 {\cf22 "border: 0px"}));\par
00229         offset = {\cf17 new} QWidget(frame);\par
00230         offset->setObjectName({\cf22 "offset"});\par
00231         offset->setEnabled({\cf17 false});\par
00232         offset->setGeometry(QRect(15, 340, 301, 111));\par
00233         offset->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210,211,218);\\n"}\par
00234 {\cf22 "color: rgb(117, 125, 149);\\n"}\par
00235 {\cf22 "border: 1px solid rgb(67, 72, 91); "}));\par
00236         label_13 = {\cf17 new} QLabel(offset);\par
00237         label_13->setObjectName({\cf22 "label_13"});\par
00238         label_13->setGeometry(QRect(10, 15, 18, 16));\par
00239         label_13->setFont(font1);\par
00240         label_13->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00241         label_14 = {\cf17 new} QLabel(offset);\par
00242         label_14->setObjectName({\cf22 "label_14"});\par
00243         label_14->setGeometry(QRect(11, 47, 33, 16));\par
00244         label_14->setFont(font1);\par
00245         label_14->setStyleSheet(QString::fromUtf8({\cf22 "\\n"}\par
00246 {\cf22 "border: 0px"}));\par
00247         label_15 = {\cf17 new} QLabel(offset);\par
00248         label_15->setObjectName({\cf22 "label_15"});\par
00249         label_15->setGeometry(QRect(11, 78, 17, 16));\par
00250         label_15->setFont(font1);\par
00251         label_15->setStyleSheet(QString::fromUtf8({\cf22 "border: 0px"}));\par
00252         offsetX = {\cf17 new} QDoubleSpinBox(offset);\par
00253         offsetX->setObjectName({\cf22 "offsetX"});\par
00254         offsetX->setGeometry(QRect(153, 15, 141, 20));\par
00255         offsetX->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00256 {\cf22 "\\n"}\par
00257 {\cf22 "border-radius: 6px;"}));\par
00258         offsetY = {\cf17 new} QDoubleSpinBox(offset);\par
00259         offsetY->setObjectName({\cf22 "offsetY"});\par
00260         offsetY->setGeometry(QRect(154, 47, 141, 20));\par
00261         offsetY->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00262 {\cf22 "\\n"}\par
00263 {\cf22 "border-radius: 6px;"}));\par
00264         offsetZ = {\cf17 new} QDoubleSpinBox(offset);\par
00265         offsetZ->setObjectName({\cf22 "offsetZ"});\par
00266         offsetZ->setGeometry(QRect(154, 78, 141, 20));\par
00267         offsetZ->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00268 {\cf22 "\\n"}\par
00269 {\cf22 "border-radius: 6px;"}));\par
00270         pushInput = {\cf17 new} QPushButton(centralWidget);\par
00271         pushInput->setObjectName({\cf22 "pushInput"});\par
00272         pushInput->setGeometry(QRect(240, 10, 101, 31));\par
00273         pushInput->setFont(font1);\par
00274         pushInput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00275 {\cf22 "border-radius: 10px;\\n"}\par
00276 {\cf22 "background-color: rgb(117, 125, 149);\\n"}\par
00277 {\cf22 "color: rgb(3, 8, 14);"}));\par
00278         pushOutput = {\cf17 new} QPushButton(centralWidget);\par
00279         pushOutput->setObjectName({\cf22 "pushOutput"});\par
00280         pushOutput->setGeometry(QRect(240, 50, 101, 31));\par
00281         pushOutput->setFont(font1);\par
00282         pushOutput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00283 {\cf22 "border-radius: 10px;\\n"}\par
00284 {\cf22 "background-color: rgb(117, 125, 149);\\n"}\par
00285 {\cf22 "color: rgb(3, 8, 14);"}));\par
00286         textBrowser = {\cf17 new} QTextBrowser(centralWidget);\par
00287         textBrowser->setObjectName({\cf22 "textBrowser"});\par
00288         textBrowser->setGeometry(QRect(0, 630, 355, 71));\par
00289         textBrowser->setStyleSheet(QString::fromUtf8({\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00290 {\cf22 "border-radius: 0px"}));\par
00291         startCalculation = {\cf17 new} QPushButton(centralWidget);\par
00292         startCalculation->setObjectName({\cf22 "startCalculation"});\par
00293         startCalculation->setGeometry(QRect(10, 590, 331, 31));\par
00294         sizePolicy.setHeightForWidth(startCalculation->sizePolicy().hasHeightForWidth());\par
00295         startCalculation->setSizePolicy(sizePolicy);\par
00296         QFont font3;\par
00297         font3.setFamilies(\{QString::fromUtf8({\cf22 "Rubik"})\});\par
00298         font3.setPointSize(10);\par
00299         font3.setBold({\cf17 false});\par
00300         font3.setItalic({\cf17 false});\par
00301         startCalculation->setFont(font3);\par
00302         startCalculation->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black;\\n"}\par
00303 {\cf22 "border-radius: 10px;\\n"}\par
00304 {\cf22 "background-color: rgb(67, 72, 91);\\n"}\par
00305 {\cf22 "color: rgb(210, 211, 218)"}));\par
00306         pathOutput = {\cf17 new} QLabel(centralWidget);\par
00307         pathOutput->setObjectName({\cf22 "pathOutput"});\par
00308         pathOutput->setGeometry(QRect(10, 50, 331, 31));\par
00309         pathOutput->setFont(font1);\par
00310         pathOutput->setStyleSheet(QString::fromUtf8({\cf22 "border: 1px solid black; \\n"}\par
00311 {\cf22 "border-radius: 10px;\\n"}\par
00312 {\cf22 "background-color: rgb(210, 211, 218);\\n"}\par
00313 {\cf22 "color: rgb(3, 8, 14);"}));\par
00314         pathOutput->setTextFormat(Qt::MarkdownText);\par
00315         GUIClass->setCentralWidget(centralWidget);\par
00316         pathInput->raise();\par
00317         frame->raise();\par
00318         textBrowser->raise();\par
00319         startCalculation->raise();\par
00320         pathOutput->raise();\par
00321         pushOutput->raise();\par
00322         pushInput->raise();\par
00323 \par
00324         retranslateUi(GUIClass);\par
00325 \par
00326         QMetaObject::connectSlotsByName(GUIClass);\par
00327     \} {\cf20 // setupUi}\par
00328 \par
00329     {\cf18 void} retranslateUi(QMainWindow *GUIClass)\par
00330     \{\par
00331         GUIClass->setWindowTitle(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Roboter Pfad Editor"}, {\cf17 nullptr}));\par
00332         pathInput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Eingabedatei"}, {\cf17 nullptr}));\par
00333         speed->setSuffix(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 " m/s"}, {\cf17 nullptr}));\par
00334         label_5->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Geschwindigkeit"}, {\cf17 nullptr}));\par
00335         bSpeed->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Manuelle Geschwindigkeit"}, {\cf17 nullptr}));\par
00336         label_10->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Phi"}, {\cf17 nullptr}));\par
00337         label_11->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Theta"}, {\cf17 nullptr}));\par
00338         label_12->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Psi"}, {\cf17 nullptr}));\par
00339         bManOrientation->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Manuelle Ausrichtung"}, {\cf17 nullptr}));\par
00340         label_dp->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Douglas-Peuker-Toleranz"}, {\cf17 nullptr}));\par
00341         label_4->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Filterl\\303\\244nge gleitender Mittelwert"}, {\cf17 nullptr}));\par
00342         dpToleranz->setSpecialValueText(QString());\par
00343         dpToleranz->setSuffix(QString());\par
00344         bLogging->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Detailliertes Logging"}, {\cf17 nullptr}));\par
00345         bOffset->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Einstellung Offset"}, {\cf17 nullptr}));\par
00346         label_13->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "X"}, {\cf17 nullptr}));\par
00347         label_14->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Y"}, {\cf17 nullptr}));\par
00348         label_15->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Z"}, {\cf17 nullptr}));\par
00349         pushInput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Datei w\\303\\244hlen"}, {\cf17 nullptr}));\par
00350         pushOutput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Pfad w\\303\\244hlen"}, {\cf17 nullptr}));\par
00351         startCalculation->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Datei erstellen"}, {\cf17 nullptr}));\par
00352         pathOutput->setText(QCoreApplication::translate({\cf22 "GUIClass"}, {\cf22 "Ausgabeordner"}, {\cf17 nullptr}));\par
00353     \} {\cf20 // retranslateUi}\par
00354 \par
00355 \};\par
00356 \par
00357 {\cf17 namespace }Ui \{\par
00358     {\cf17 class }GUIClass: {\cf17 public} Ui_GUIClass \{\};\par
00359 \} {\cf20 // namespace Ui}\par
00360 \par
00361 QT_END_NAMESPACE\par
00362 \par
00363 {\cf21 #endif }{\cf20 // UI_GUI_H}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
